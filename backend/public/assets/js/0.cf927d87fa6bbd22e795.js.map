{"version":3,"sources":["webpack:///assets/js/0.cf927d87fa6bbd22e795.js","webpack:///./client/views/dashboard/index.vue","webpack:///./~/chart.js/src/helpers/index.js","webpack:///./~/chart.js/src/core/core.defaults.js","webpack:///./~/chart.js/src/core/core.element.js","webpack:///./~/chart.js/src/elements/index.js","webpack:///./~/chart.js/src/core/core.layouts.js","webpack:///./~/chart.js/src/core/core.ticks.js","webpack:///./~/chart.js/src/helpers/helpers.core.js","webpack:///./~/chart.js/src/core/core.interaction.js","webpack:///./~/chart.js/src/core/core.plugins.js","webpack:///./~/chart.js/src/platforms/platform.js","webpack:///./~/chartjs-color/index.js","webpack:///./client/views/dashboard/AnalyticsUsersChart.js","webpack:///index.vue","webpack:///./~/chart.js/src/chart.js","webpack:///./~/chart.js/src/charts/Chart.Bar.js","webpack:///./~/chart.js/src/charts/Chart.Bubble.js","webpack:///./~/chart.js/src/charts/Chart.Doughnut.js","webpack:///./~/chart.js/src/charts/Chart.Line.js","webpack:///./~/chart.js/src/charts/Chart.PolarArea.js","webpack:///./~/chart.js/src/charts/Chart.Radar.js","webpack:///./~/chart.js/src/charts/Chart.Scatter.js","webpack:///./~/chart.js/src/controllers/controller.bar.js","webpack:///./~/chart.js/src/controllers/controller.bubble.js","webpack:///./~/chart.js/src/controllers/controller.doughnut.js","webpack:///./~/chart.js/src/controllers/controller.line.js","webpack:///./~/chart.js/src/controllers/controller.polarArea.js","webpack:///./~/chart.js/src/controllers/controller.radar.js","webpack:///./~/chart.js/src/controllers/controller.scatter.js","webpack:///./~/chart.js/src/core/core.animation.js","webpack:///./~/chart.js/src/core/core.controller.js","webpack:///./~/chart.js/src/core/core.datasetController.js","webpack:///./~/chart.js/src/core/core.helpers.js","webpack:///./~/chart.js/src/core/core.js","webpack:///./~/chart.js/src/core/core.scale.js","webpack:///./~/chart.js/src/core/core.scaleService.js","webpack:///./~/chart.js/src/core/core.tooltip.js","webpack:///./~/chart.js/src/elements/element.arc.js","webpack:///./~/chart.js/src/elements/element.line.js","webpack:///./~/chart.js/src/elements/element.point.js","webpack:///./~/chart.js/src/elements/element.rectangle.js","webpack:///./~/chart.js/src/helpers/helpers.canvas.js","webpack:///./~/chart.js/src/helpers/helpers.easing.js","webpack:///./~/chart.js/src/helpers/helpers.options.js","webpack:///./~/chart.js/src/platforms/platform.basic.js","webpack:///./~/chart.js/src/platforms/platform.dom.js","webpack:///./~/chart.js/src/plugins/index.js","webpack:///./~/chart.js/src/plugins/plugin.filler.js","webpack:///./~/chart.js/src/plugins/plugin.legend.js","webpack:///./~/chart.js/src/plugins/plugin.title.js","webpack:///./~/chart.js/src/scales/scale.category.js","webpack:///./~/chart.js/src/scales/scale.linear.js","webpack:///./~/chart.js/src/scales/scale.linearbase.js","webpack:///./~/chart.js/src/scales/scale.logarithmic.js","webpack:///./~/chart.js/src/scales/scale.radialLinear.js","webpack:///./~/chart.js/src/scales/scale.time.js","webpack:///./~/chartjs-color-string/color-string.js","webpack:///./~/chartjs-color/~/color-convert/conversions.js","webpack:///./~/chartjs-color/~/color-convert/index.js","webpack:///./~/color-name/index.js","webpack:///./client/views/dashboard/index.vue?3586","webpack:///./client/views/dashboard/index.vue?6001","webpack:///./~/vue-chartjs/es/BaseCharts.js","webpack:///./~/vue-chartjs/es/index.js","webpack:///./~/vue-chartjs/es/mixins/index.js","webpack:///./client/views/dashboard/index.vue?6242"],"names":["webpackJsonp","425","module","exports","__webpack_require__","Component","436","easing","canvas","options","437","helpers","_set","scope","values","merge","this","442","interpolate","start","view","model","ease","i","ilen","key","actual","origin","target","type","c0","c1","keys","Object","length","hasOwnProperty","color","valid","mix","rgbString","isFinite","Element","configuration","extend","initialize","apply","arguments","prototype","hidden","pivot","me","_view","clone","_model","_start","transition","tooltipPosition","x","y","hasValue","isNumber","inherits","445","Arc","Line","Point","Rectangle","448","filterByPosition","array","position","where","v","sortByWeight","reverse","forEach","_tmpIndex_","sort","a","b","v0","v1","weight","defaults","addBox","chart","item","boxes","fullWidth","push","removeBox","layoutItem","index","indexOf","splice","configure","prop","props","update","width","height","getMinimumBoxSize","box","minSize","isHorizontal","chartWidth","maxChartAreaWidth","horizontalBoxHeight","maxChartAreaHeight","verticalBoxWidth","minBoxSizes","horizontal","fitBox","minBoxSize","findNextWhere","minBox","scaleMargin","left","Math","max","totalLeftBoxesWidth","maxHorizontalLeftPadding","right","totalRightBoxesWidth","maxHorizontalRightPadding","top","bottom","chartHeight","finalFitVerticalBox","totalTopBoxesHeight","totalBottomBoxesHeight","placeBox","leftPadding","rightPadding","layoutOptions","layout","padding","toPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaWidth","chartAreaHeight","each","concat","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","chartArea","449","formatters","value","isArray","linear","tickValue","ticks","delta","abs","floor","logDelta","log10","tickString","numDecimal","min","toFixed","logarithmic","remain","pow","toExponential","459","noop","uid","id","isNullOrUndef","Array","toString","call","isObject","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","args","thisArg","loopable","len","arrayEquals","a0","a1","source","map","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","470","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","datasets","data","isDatasetVisible","getDatasetMeta","element","skip","getIntersectItems","elements","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","dataset","datasetIndex","_index","modes","single","slice","label","_datasetIndex","x-axis","point","nearest","sizeA","getArea","sizeB","ret","intersectsItem","inXRange","inYRange","471","plugins","_plugins","_cacheId","register","p","plugin","unregister","idx","clear","count","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","config","opts","global","_invalidate","472","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","473","convert","string","Color","obj","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","undefined","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mixinColor","color1","w1","w2","toJSON","result","console","error","spaces","maxes","getValues","space","charAt","chans","capped","round","sname","svalues","window","474","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_vue_chartjs__","reactiveProp","extends","mixins","mounted","renderChart","chartData","477","defineProperty","__WEBPACK_IMPORTED_MODULE_0__AnalyticsUsersChart__","__WEBPACK_IMPORTED_MODULE_1_underscore__","__WEBPACK_IMPORTED_MODULE_1_underscore___default","n","__WEBPACK_IMPORTED_MODULE_2_moment__","__WEBPACK_IMPORTED_MODULE_2_moment___default","__WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker__","__WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker___default","__WEBPACK_IMPORTED_MODULE_4_vue__","__WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification__","__WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification___default","__WEBPACK_IMPORTED_MODULE_6__services_mixin__","NotificationComponent","openNotification","propsData","title","message","direction","duration","container","el","document","createElement","components","AnalyticsUsersChart","datepicker","rowDataList","labelList","backgroundColor_3","options_3","tooltips","mode","dateRange","constructionDate","lineData","bounceRateData","avgSessionDurationData","channelUserList","completedCountData","tabInfo","constructionData","trafficData","constructionSales","computed","methods","queryReports","_this","gapi","client","init","clientId","then","GoogleAuth","auth2","getAuthInstance","isSignedIn","get","request","path","root","body","reportRequests","viewId","dateRanges","startDate","endDate","metrics","expression","formattingType","dimensions","name","listen","updateSigned","signIn","Error","response","formattedJson","JSON","parse","stringify","metricsList","dataList","reports","rows","row","format","getSeriesData","$http","dateDiff","diff","channel_list","targetDate","add","find","date","sortBy","log","getCompletedCountData","catch","changeTabs","tabId","getConstructionDashboardData","basket","labels","parseInt","borderColor","replace","pointBackgroundColor","backgroundColor","$forceUpdate","analyticsData","_this2","checkList","groupBy","sales","updateCheckListStatus","cl_date","put","cl_pk","code","_this3","setTimeout","490","Chart","Interaction","layouts","platform","Ticks","Legend","legend","_element","Title","pluginService","PluginBase","canvasHelpers","layoutService","491","Bar","context","492","Bubble","493","Doughnut","494","495","PolarArea","496","Radar","497","Scatter","498","computeMinSampleSize","scale","pixels","prev","curr","getTicks","getPixelForTick","computeFitCategoryTraits","ruler","size","thickness","barThickness","stackCount","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","next","percent","end","hover","scales","xAxes","offset","gridLines","offsetGridLines","yAxes","rectangle","borderSkipped","callbacks","yLabel","xLabel","controllers","bar","DatasetController","dataElementType","getMeta","stack","getDataset","reset","rects","_ruler","getRuler","updateElement","custom","rectangleOptions","_xScale","getScaleForId","xAxisID","_yScale","yAxisID","datasetLabel","borderWidth","updateElementGeometry","vscale","getValueScale","base","getBasePixel","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","last","stacked","stacks","getStackCount","getStackIndex","getPixelForValue","imeta","ivalue","getRightValue","controller","range","stackIndex","maxBarThickness","Infinity","draw","clipArea","ctx","isNaN","unclipArea","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","rectangleElementOptions","horizontalBar","499","dataPoint","bubble","points","xScale","yScale","_resolveElementOptions","dsIndex","getPixelForDecimal","NaN","_options","hitRadius","pointStyle","radius","hoverRadius","resolve","dataIndex","500","animation","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arc","arcOpts","fillStyle","strokeStyle","lineWidth","onClick","legendItem","cutoutPercentage","rotation","PI","circumference","tooltipItem","dataLabel","doughnut","pie","linkScales","getRingIndex","ringIndex","availableWidth","availableHeight","startAngle","endAngle","cos","sin","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","_chart","501","showLines","spanGaps","lineEnabled","showLine","line","datasetElementType","lineElementOptions","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","capControlPoint","pt","controlPoints","area","filter","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","502","angleLines","display","circular","pointLabels","beginAtZero","polarArea","countVisibleElements","xCenter","yCenter","visibleCount","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","503","radar","_loop","pointElementOptions","pointPosition","getPointPositionForValue","504","scatter","505","onProgress","onComplete","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","set","506","initConfig","configMerge","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","tooltip","positionIsHorizontal","types","instances","construct","aspectRatio","_bufferedRender","retinaScale","devicePixelRatio","bindEvents","responsive","resize","initToolTip","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","style","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","reduce","dtype","dposition","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","ControllerClass","resetElements","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","effects","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","destroy","unbindEvents","toBase64Image","toDataURL","Tooltip","_chartInstance","listeners","_listeners","listener","eventHandler","events","updateHoverStyle","enabled","changed","handleEvent","bufferedRequest","animationDuration","hoverOptions","active","onHover","Controller","507","listenArrayEvents","_chartjs","configurable","enumerable","arrayEvents","toUpperCase","res","object","unlistenArrayEvents","stub","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","resyncElements","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","508","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","getScaleDefaults","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distanceBetweenPoints","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","t","current","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","loop","niceNum","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","clientWidth","cw","clientHeight","h","ch","property","currentStyle","getPropertyValue","forceRatio","pixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","defaultColor","colorValue","CanvasPattern","509","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","510","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","computeTextSize","tick","parseFontOptions","globalDefaults","fontSize","family","parseLineHeight","toLineHeight","Scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","scaleLabelLineHeight","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","shouldSkip","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","save","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","511","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","512","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getTooltipSize","combinedBodyLength","bodyItem","before","lines","after","titleLineCount","footerLineCount","widthPadding","maxLineWidth","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","vm","alignment","paddingAndSize","radiusAndPadding","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","existingModel","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","quadraticCurveTo","closePath","hasTooltipContent","average","pos","eventPosition","nearestElement","d","tp","513","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","514","currentVM","globalOptionLineElements","lastDrawnIndex","lineCap","515","xRange","yRange","drawPoint","516","isVertical","getBarBounds","halfWidth","halfHeight","cornerAt","corners","startCorner","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","borders","corner","bounds","517","clearRect","roundedRect","rx","ry","rect","edgeLength","xOffset","yOffset","drawImage","SQRT2","leftX","topY","sideSize","clip","flip","bezierCurveTo","drawRoundedRectangle","518","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","519","matches","match","inputs","520","getContext","521","readUsedSize","initCanvas","renderHeight","getAttribute","renderWidth","EXPANDO_KEY","initial","displayWidth","displayHeight","eventListenerOptions","createEvent","nativeEvent","fromNativeEvent","event","EVENT_TYPES","throttled","ticking","createResizer","resizer","cls","CSS_PREFIX","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","watchForRender","expando","proxy","renderProxy","animationName","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","reflow","offsetParent","classList","CSS_RENDER_MONITOR","unwatchForRender","remove","addResizeListener","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","supportsEventListenerOptions","supports","passive","keyframes","getElementById","removeAttribute","proxies","addEvent","removeEvent","522","filler","523","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","propagate","visited","visible","createMapper","mappers","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","span","boundary","afterDatasetsUpdate","$filler","beforeDatasetDraw","524","getBoxWidth","labelOpts","usePointStyle","boxWidth","createNewLegendAndAttach","legendOpts","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","drawLegendBox","isLineWidthZero","offSet","halfFontSize","xLeft","yMiddle","lh","hitBox","beforeInit","afterEvent","525","createNewTitleBlockAndAttach","titleOpts","titleBlock","textSize","titleX","titleY","titleFont","526","defaultConfig","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","527","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","ceil","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","528","generateTicks","generationOptions","dataRange","spacing","stepSize","niceRange","niceMin","niceMax","numSpaces","precision","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","fixedStepSize","529","exp","significand","tickVal","endExp","endSignificand","minNotZero","lastTick","LogarithmicScale","tickValues","_getFirstTickValue","firstTickValue","530","getValueCount","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","fitWithPointLabels","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","drawingArea","setCenterPoint","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","param","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","LinearRadialScale","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","scalingFactor","distanceFromCenter","thisAngle","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","531","sorter","arrayUnique","hash","out","buildLookupTable","timestamps","distribution","time","table","lookup","mid","i0","i1","lo","hi","skey","tkey","momentify","parser","moment","input","startOf","valueOf","determineStepSize","unit","capacity","factor","interval","INTERVALS","milliseconds","steps","determineUnitForAutoTicks","minUnit","UNITS","MAX_INTEGER","common","determineUnitForFormatting","as","determineMajorUnit","generate","timeOpts","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","computeOffsets","upper","lower","ticksFromTimestamps","majorUnit","determineLabelFormat","momentDate","hasTime","millisecond","second","minute","hour","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","day","week","month","quarter","year","displayFormat","displayFormats","TimeScale","warn","timestamp","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","_majorUnit","_offsets","_labelFormat","tooltipFormat","tickFormatFunction","formatOverride","formats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","exampleTime","exampleLabel","532","abbr","hex","rgba","per","colorNames","getRgb","getHsl","hsla","getAlpha","hexDouble","percentaString","reverseNames","num","str","533","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","m","rgb2keyword","reverseKeywords","rgb2xyz","rgb2lab","xyz","z","rgb2lch","lab2lch","hsl2rgb","t1","t2","t3","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","f","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","wh","bl","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","hr","lab2rgb","lch2lab","lch","lch2xyz","lch2rgb","keyword2rgb","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","534","conversions","Converter","func","arg","pair","exec","from","to","convs","routeSpace","fspace","536","545","version","names","mappings","file","sourcesContent","sourceRoot","555","content","locals","564","generateChart","chartId","chartType","styles","class","cssClasses","attrs","ref","default","String","addPlugin","$data","__WEBPACK_IMPORTED_MODULE_0_chart_js___default","$refs","beforeDestroy","HorizontalBar","Pie","__WEBPACK_IMPORTED_MODULE_0_chart_js__","565","__WEBPACK_IMPORTED_MODULE_0__mixins_index_js__","__WEBPACK_IMPORTED_MODULE_1__BaseCharts__","566","dataHandler","newData","oldData","newDatasetLabels","oldDatasetLabels","oldLabels","oldDatasetKeys","newDatasetKeys","deletionKey","attribute","$emit","reactiveData","watch","required","582","_vm","_h","$createElement","_c","_self","staticClass","is-active","on","click","$event","_v","dateFormat","$$v","_s","addCommas","_l","construction","pc_name","domProps","completedPercentage","_m","checkListByDate","colspan","checkListItem","ct_name","directives","rawName","checked","cl_resource","_i","change","$$a","$$el","$$c","$$i","$set","pc_pk","cl_constructor","cl_memo","_e","chart-data","staticRenderFns"],"mappings":"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AY,cACAE,cACAC,cACAC,cACAC,eACAC,cACAC,cAEAlB,UACAC,UACAC,UAEAC,UACAG,UACApC,UAEAqC,UACAE,UACAC,UAyeA,IAAAE,IACAO,WAAA,aACAC,cAAA,aACAC,MAAA,WACAC,YAAA,aACAC,OAAA,aACAC,OAAA,aACAC,QAAA,aACAhkD,OAAA,OACAikD,gBAAA,aACAxkD,MAAA,SACAykD,YAAA,YACAC,OAAA,WACAC,WAAA,aACAC,WAAA,YACAC,YAAA,WACAC,WAAA,YACAC,OAAA,YACAC,gBAAA,aACAC,UAAA,aACAC,SAAA,WACA/lD,MAAA,WACAgmD,UAAA,SACAC,UAAA,WACAC,eAAA,YACAC,UAAA,aACAC,WAAA,SACAC,UAAA,aACAC,WAAA,aACAC,aAAA,WACAC,gBAAA,WACAC,YAAA,WACAC,YAAA,YACAC,SAAA,SACAC,YAAA,aACAC,cAAA,aACAC,eAAA,WACAC,eAAA,UACAC,eAAA,UACAC,eAAA,WACAC,YAAA,WACAC,UAAA,YACAC,aAAA,WACAC,SAAA,aACAC,SAAA,aACAC,YAAA,YACAC,WAAA,WACAC,aAAA,aACAC,aAAA,WACAC,SAAA,WACAC,WAAA,aACAC,YAAA,aACAC,MAAA,WACAC,WAAA,YACAC,MAAA,aACApnD,OAAA,SACAqnD,aAAA,YACAC,MAAA,aACAC,UAAA,aACAC,SAAA,aACAC,WAAA,WACAC,QAAA,UACAC,OAAA,aACAC,OAAA,aACAC,UAAA,aACAC,eAAA,aACAC,WAAA,WACAC,cAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,sBAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,WAAA,aACAC,aAAA,aACAC,eAAA,YACAC,cAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,aACAC,MAAA,SACAC,WAAA,WACAC,OAAA,aACA5oD,SAAA,WACA6oD,QAAA,SACAC,kBAAA,aACAC,YAAA,SACAC,cAAA,YACAC,cAAA,aACAC,gBAAA,YACAC,iBAAA,aACAC,mBAAA,WACAC,iBAAA,YACAC,iBAAA,YAC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","file":"assets/js/0.cf927d87fa6bbd22e795.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 425:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(555)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(477),\n  /* template */\n  __webpack_require__(582),\n  /* scopeId */\n  \"data-v-a9e6891e\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 436:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(459);\nmodule.exports.easing = __webpack_require__(518);\nmodule.exports.canvas = __webpack_require__(517);\nmodule.exports.options = __webpack_require__(519);\n\n\n/***/ }),\n\n/***/ 437:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(436);\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\n\n/***/ }),\n\n/***/ 442:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar color = __webpack_require__(473);\nvar helpers = __webpack_require__(436);\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n\n\n/***/ }),\n\n/***/ 445:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\nmodule.exports.Arc = __webpack_require__(513);\nmodule.exports.Line = __webpack_require__(514);\nmodule.exports.Point = __webpack_require__(515);\nmodule.exports.Rectangle = __webpack_require__(516);\n\n\n/***/ }),\n\n/***/ 448:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(436);\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n\n/***/ }),\n\n/***/ 449:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(436);\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 459:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\n/***/ }),\n\n/***/ 470:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(436);\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 471:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar helpers = __webpack_require__(436);\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n\n/***/ }),\n\n/***/ 472:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(436);\nvar basic = __webpack_require__(520);\nvar dom = __webpack_require__(521);\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n\n\n/***/ }),\n\n/***/ 473:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* MIT license */\nvar convert = __webpack_require__(534);\nvar string = __webpack_require__(532);\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n\n\n/***/ }),\n\n/***/ 474:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_chartjs__ = __webpack_require__(565);\n// LineChart.js\n\nvar reactiveProp = __WEBPACK_IMPORTED_MODULE_0_vue_chartjs__[\"a\" /* mixins */].reactiveProp;\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  extends: __WEBPACK_IMPORTED_MODULE_0_vue_chartjs__[\"b\" /* Line */],\n  mixins: [reactiveProp],\n  props: ['options'],\n  mounted: function mounted() {\n    this.renderChart(this.chartData, this.options);\n  }\n});\n\n/***/ }),\n\n/***/ 477:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__AnalyticsUsersChart__ = __webpack_require__(474);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_underscore__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_moment__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_vue__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_mixin__ = __webpack_require__(12);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n\n\nvar NotificationComponent = __WEBPACK_IMPORTED_MODULE_4_vue__[\"default\"].extend(__WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification___default.a);\n\nvar openNotification = function openNotification() {\n  var propsData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    title: '',\n    message: '',\n    type: '',\n    direction: '',\n    duration: 4500,\n    container: '.notifications'\n  };\n\n  return new NotificationComponent({\n    el: document.createElement('div'),\n    propsData: propsData\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  components: {\n    AnalyticsUsersChart: __WEBPACK_IMPORTED_MODULE_0__AnalyticsUsersChart__[\"a\" /* default */],\n    datepicker: __WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker___default.a\n  },\n  mixins: [__WEBPACK_IMPORTED_MODULE_6__services_mixin__[\"a\" /* default */]],\n  data: function data() {\n    return {\n      rowDataList: {},\n      labelList: [],\n      backgroundColor_3: ['rgba(31, 200, 219, 1)', 'rgba(151, 205, 118, 1)'],\n      options_3: {\n        tooltips: {\n          mode: 'label'\n        }\n      },\n      dateRange: {},\n      constructionDate: '',\n      lineData: null,\n      bounceRateData: null,\n      avgSessionDurationData: null,\n      channelUserList: [],\n      completedCountData: null,\n      tabInfo: {\n        constructionData: false,\n        trafficData: true\n      },\n      constructionData: [],\n      constructionSales: 0\n    };\n  },\n\n\n  computed: {},\n  methods: {\n    queryReports: function queryReports() {\n      var _this = this;\n\n      // console.log(window.gapi.auth.signIn())\n      // Replace with your view ID.\n\n      window.gapi.client.init({\n        'clientId': '149704865346-ohiqqr8atn0fb4q1rttkelp693b20ea3.apps.googleusercontent.com',\n        'scope': 'https://www.googleapis.com/auth/analytics.readonly'\n      }).then(function () {\n        // Executes an API request, and returns a Promise.\n        // The method name `language.translations.list` comes from the API discovery.\n        var VIEW_ID = '136738850';\n        var GoogleAuth = window.gapi.auth2.getAuthInstance();\n        var isSigned = GoogleAuth.isSignedIn.get();\n        if (!isSigned) {\n          GoogleAuth.isSignedIn.listen(function (updateSigned) {\n            if (updateSigned) {\n              _this.queryReports();\n            }\n          });\n          GoogleAuth.signIn();\n          throw new Error('Not Signed');\n        } else {\n          return window.gapi.client.request({\n            path: '/v4/reports:batchGet',\n            root: 'https://analyticsreporting.googleapis.com/',\n            method: 'POST',\n            body: {\n              reportRequests: [{\n                viewId: VIEW_ID,\n                dateRanges: [{\n                  startDate: _this.dateRange.startDate,\n                  endDate: _this.dateRange.endDate\n                }],\n                metrics: [{\n                  expression: 'ga:users'\n                }, {\n                  expression: 'ga:bounceRate'\n                }, {\n                  expression: 'ga:avgSessionDuration',\n                  formattingType: 'TIME'\n                }, {\n                  expression: 'ga:goal1Completions'\n                }],\n                dimensions: [{\n                  name: 'ga:date'\n                }]\n              }]\n            }\n          });\n        }\n      }).then(function (response) {\n        var formattedJson = JSON.parse(JSON.stringify(response.result, null, 2));\n        var metricsList = ['ga:users', 'ga:bounceRate', 'ga:avgSessionDuration', 'ga:goal1Completions'];\n        var dataList = formattedJson.reports[0].data.rows;\n\n        var _loop = function _loop(i) {\n          var metrics = metricsList[i];\n          _this.rowDataList[metrics] = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.map(dataList, function (row) {\n            return row.metrics[0].values[i];\n          });\n          _this.labelList = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.map(dataList, function (row) {\n            return __WEBPACK_IMPORTED_MODULE_2_moment___default()(row.dimensions[0], 'YYYYMMDD').format('YYYY-MM-DD');\n          });\n        };\n\n        for (var i = 0; i < metricsList.length; i++) {\n          _loop(i);\n        }\n\n        _this.getSeriesData('lineData', 'ga:users');\n        _this.getSeriesData('bounceRateData', 'ga:bounceRate');\n        _this.getSeriesData('avgSessionDurationData', 'ga:avgSessionDuration');\n\n        return _this.$http.get('/api/webhook/channel/completed-list?start_date=' + _this.dateRange.startDate + '&end_date=' + _this.dateRange.endDate);\n      }).then(function (response) {\n        var dateDiff = __WEBPACK_IMPORTED_MODULE_2_moment___default()(_this.dateRange.endDate, 'YYYY-MM-DD').diff(__WEBPACK_IMPORTED_MODULE_2_moment___default()(_this.dateRange.startDate, 'YYYY-MM-Dd'), 'days');\n        var channelUserList = response.data.data.channel_list;\n\n        var _loop2 = function _loop2(i) {\n          var targetDate = __WEBPACK_IMPORTED_MODULE_2_moment___default()(_this.dateRange.startDate, 'YYYY-MM-DD').add(i, 'day').format('YYYY-MM-DD');\n          var hasTargetDate = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.find(channelUserList, function (item) {\n            return item.date === targetDate;\n          });\n          if (!hasTargetDate) {\n            channelUserList.push({\n              date: targetDate,\n              count: 0\n            });\n          }\n        };\n\n        for (var i = 0; i <= dateDiff; i++) {\n          _loop2(i);\n        }\n\n        _this.channelUserList = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.sortBy(channelUserList, function (item) {\n          return __WEBPACK_IMPORTED_MODULE_2_moment___default()(item.date, 'YYYY-MM-DD').format('X');\n        });\n        console.log(_this.channelUserList);\n        _this.getCompletedCountData();\n      }).catch(function (e) {\n        console.error(e);\n      });\n    },\n    changeTabs: function changeTabs(tabId) {\n      for (var i in this.tabInfo) {\n        this.tabInfo[i] = false;\n      }\n      this.tabInfo[tabId] = true;\n\n      switch (tabId) {\n        case 'constructionData':\n          this.getConstructionDashboardData();\n          break;\n        default:\n          break;\n      }\n    },\n    getSeriesData: function getSeriesData(basket, key) {\n      var data = {\n        labels: this.labelList\n      };\n      var dataSet = this.rowDataList[key];\n      if (!dataSet) {\n        return {\n          labels: this.labelList,\n          datasets: []\n        };\n      }\n      data.datasets = [{\n        data: __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.map(this.rowDataList[key], function (item) {\n          return parseInt(item, 10);\n        }),\n        label: key,\n        borderColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)'),\n        pointBackgroundColor: this.backgroundColor_3[0],\n        backgroundColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)')\n      }];\n      this[basket] = data;\n      this.$forceUpdate();\n    },\n    getCompletedCountData: function getCompletedCountData() {\n      var analyticsData = this.rowDataList['ga:goal1Completions'];\n\n      var data = {\n        labels: this.labelList\n      };\n\n      data.datasets = [];\n\n      data.datasets.push({\n        data: __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.map(analyticsData, function (item) {\n          return parseInt(item, 10);\n        }),\n        label: 'Google Analytics Completed User',\n        borderColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)'),\n        pointBackgroundColor: this.backgroundColor_3[0],\n        backgroundColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)')\n      });\n      data.datasets.push({\n        data: __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.map(this.channelUserList, function (item) {\n          return parseInt(item.count, 10);\n        }),\n        label: 'Channel Completed User',\n        borderColor: this.backgroundColor_3[1].replace(/1\\)$/, '.5)'),\n        pointBackgroundColor: this.backgroundColor_3[1],\n        backgroundColor: this.backgroundColor_3[1].replace(/1\\)$/, '.5)')\n      });\n\n      this.completedCountData = data;\n      this.$forceUpdate();\n    },\n    getConstructionDashboardData: function getConstructionDashboardData() {\n      var _this2 = this;\n\n      this.$http.get('/api/dashboard/construction?date=' + this.constructionDate).then(function (response) {\n        _this2.constructionData = response.data.data;\n        for (var i = 0; i < _this2.constructionData.length; i++) {\n          _this2.constructionData[i].checkList = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.groupBy(_this2.constructionData[i].checkList, 'cl_date');\n        }\n\n        return _this2.$http.get('/api/dashboard/construction/budget?date=' + _this2.constructionDate);\n      }).then(function (response) {\n        _this2.constructionSales = response.data.data.sales;\n        console.log(_this2.constructionSales);\n      }).catch(function (e) {\n        console.error(e);\n      });\n    },\n    updateCheckListStatus: function updateCheckListStatus(id, item) {\n      item.cl_date = __WEBPACK_IMPORTED_MODULE_2_moment___default()(item.cl_date, 'YYYY-MM-DD').format('X');\n      console.log(item);\n      this.$http.put('/api/contract/' + id + '/checklist/' + item.cl_pk, item).then(function (response) {\n        if (response.data.code !== 200) {\n          openNotification({\n            message: '체크리스트가 수정 중 이상이 발생하였습니다.',\n            type: 'danger',\n            duration: 1500\n          });\n          return;\n        }\n        openNotification({\n          message: '체크리스트가 정상적으로 수정되었습니다.',\n          type: 'success',\n          duration: 1500\n        });\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    this.dateRange.startDate = __WEBPACK_IMPORTED_MODULE_2_moment___default()().add(-1, 'week').format('YYYY-MM-DD');\n    this.dateRange.endDate = __WEBPACK_IMPORTED_MODULE_2_moment___default()().add(-1, 'days').format('YYYY-MM-DD');\n\n    this.constructionDate = __WEBPACK_IMPORTED_MODULE_2_moment___default()().format('YYYY-MM-DD');\n    setTimeout(function () {\n      _this3.queryReports();\n    }, 10);\n  }\n});\n\n/***/ }),\n\n/***/ 490:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @namespace Chart\n */\nvar Chart = __webpack_require__(509)();\n\nChart.helpers = __webpack_require__(436);\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n__webpack_require__(508)(Chart);\n\nChart.defaults = __webpack_require__(437);\nChart.Element = __webpack_require__(442);\nChart.elements = __webpack_require__(445);\nChart.Interaction = __webpack_require__(470);\nChart.layouts = __webpack_require__(448);\nChart.platform = __webpack_require__(472);\nChart.plugins = __webpack_require__(471);\nChart.Ticks = __webpack_require__(449);\n\n__webpack_require__(505)(Chart);\n__webpack_require__(506)(Chart);\n__webpack_require__(507)(Chart);\n__webpack_require__(511)(Chart);\n__webpack_require__(510)(Chart);\n__webpack_require__(512)(Chart);\n\n__webpack_require__(528)(Chart);\n__webpack_require__(526)(Chart);\n__webpack_require__(527)(Chart);\n__webpack_require__(529)(Chart);\n__webpack_require__(530)(Chart);\n__webpack_require__(531)(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n__webpack_require__(498)(Chart);\n__webpack_require__(499)(Chart);\n__webpack_require__(500)(Chart);\n__webpack_require__(501)(Chart);\n__webpack_require__(502)(Chart);\n__webpack_require__(503)(Chart);\n__webpack_require__(504)(Chart);\n\n__webpack_require__(491)(Chart);\n__webpack_require__(492)(Chart);\n__webpack_require__(493)(Chart);\n__webpack_require__(494)(Chart);\n__webpack_require__(495)(Chart);\n__webpack_require__(496)(Chart);\n__webpack_require__(497)(Chart);\n\n// Loading built-it plugins\nvar plugins = __webpack_require__(522);\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n\n\n/***/ }),\n\n/***/ 491:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 492:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 493:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 494:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 495:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 496:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 497:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n\n\n/***/ }),\n\n/***/ 498:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar elements = __webpack_require__(445);\nvar helpers = __webpack_require__(436);\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 499:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar elements = __webpack_require__(445);\nvar helpers = __webpack_require__(436);\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 500:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar elements = __webpack_require__(445);\nvar helpers = __webpack_require__(436);\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 501:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar elements = __webpack_require__(445);\nvar helpers = __webpack_require__(436);\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 502:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar elements = __webpack_require__(445);\nvar helpers = __webpack_require__(436);\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 503:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar elements = __webpack_require__(445);\nvar helpers = __webpack_require__(436);\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 504:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n\n\n/***/ }),\n\n/***/ 505:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* global window: false */\n\n\nvar defaults = __webpack_require__(437);\nvar Element = __webpack_require__(442);\nvar helpers = __webpack_require__(436);\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n\n\n/***/ }),\n\n/***/ 506:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar helpers = __webpack_require__(436);\nvar Interaction = __webpack_require__(470);\nvar layouts = __webpack_require__(448);\nvar platform = __webpack_require__(472);\nvar plugins = __webpack_require__(471);\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n\n\n/***/ }),\n\n/***/ 507:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(436);\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n\n\n/***/ }),\n\n/***/ 508:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* global window: false */\n/* global document: false */\n\n\nvar color = __webpack_require__(473);\nvar defaults = __webpack_require__(437);\nvar helpers = __webpack_require__(436);\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\n\n/***/ }),\n\n/***/ 509:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n\n\n/***/ }),\n\n/***/ 510:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar Element = __webpack_require__(442);\nvar helpers = __webpack_require__(436);\nvar Ticks = __webpack_require__(449);\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 511:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar helpers = __webpack_require__(436);\nvar layouts = __webpack_require__(448);\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n\n\n/***/ }),\n\n/***/ 512:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar Element = __webpack_require__(442);\nvar helpers = __webpack_require__(436);\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n\n\n/***/ }),\n\n/***/ 513:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar Element = __webpack_require__(442);\nvar helpers = __webpack_require__(436);\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n\n\n/***/ }),\n\n/***/ 514:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar Element = __webpack_require__(442);\nvar helpers = __webpack_require__(436);\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\n\n/***/ }),\n\n/***/ 515:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar Element = __webpack_require__(442);\nvar helpers = __webpack_require__(436);\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n\n\n/***/ }),\n\n/***/ 516:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar Element = __webpack_require__(442);\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\n\n/***/ }),\n\n/***/ 517:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(459);\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n\n\n/***/ }),\n\n/***/ 518:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(459);\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n\n\n/***/ }),\n\n/***/ 519:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(459);\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 520:\n/***/ (function(module, exports) {\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\n\n/***/ }),\n\n/***/ 521:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n\n\nvar helpers = __webpack_require__(436);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n\n\n/***/ }),\n\n/***/ 522:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\nmodule.exports.filler = __webpack_require__(523);\nmodule.exports.legend = __webpack_require__(524);\nmodule.exports.title = __webpack_require__(525);\n\n\n/***/ }),\n\n/***/ 523:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n\n\nvar defaults = __webpack_require__(437);\nvar elements = __webpack_require__(445);\nvar helpers = __webpack_require__(436);\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 524:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar Element = __webpack_require__(442);\nvar helpers = __webpack_require__(436);\nvar layouts = __webpack_require__(448);\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 525:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar Element = __webpack_require__(442);\nvar helpers = __webpack_require__(436);\nvar layouts = __webpack_require__(448);\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 526:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n\n\n/***/ }),\n\n/***/ 527:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar helpers = __webpack_require__(436);\nvar Ticks = __webpack_require__(449);\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n\n\n/***/ }),\n\n/***/ 528:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(436);\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 529:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(436);\nvar Ticks = __webpack_require__(449);\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n\n\n/***/ }),\n\n/***/ 530:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(437);\nvar helpers = __webpack_require__(436);\nvar Ticks = __webpack_require__(449);\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n\n\n/***/ }),\n\n/***/ 531:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* global window: false */\n\n\nvar moment = __webpack_require__(0);\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = __webpack_require__(437);\nvar helpers = __webpack_require__(436);\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n\n\n/***/ }),\n\n/***/ 532:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* MIT license */\nvar colorNames = __webpack_require__(536);\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n\n\n/***/ }),\n\n/***/ 533:\n/***/ (function(module, exports) {\n\n/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n\n/***/ }),\n\n/***/ 534:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar conversions = __webpack_require__(533);\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n\n/***/ }),\n\n/***/ 536:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n/***/ }),\n\n/***/ 545:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(416)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".datepicker-view[data-v-a9e6891e]{margin-bottom:1rem}.datepicker-view .datepicker[data-v-a9e6891e]{width:auto;display:inline-block}.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:25vw}.construction-info-view .construction-wrapper[data-v-a9e6891e]{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.construction-info-view .construction-wrapper .construction-item[data-v-a9e6891e]{-ms-flex:0 0 25rem;flex:0 0 25rem;border:1px solid #dbdbdb;padding:.5rem;margin:.5rem}.none-checklist-data[data-v-a9e6891e]{width:100%;min-height:15rem;text-align:center;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}@media screen and (max-width:999px){.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:auto}}\", \"\", {\"version\":3,\"sources\":[\"/Users/hyungwon/Works/gridazip/admin.gridazip.com/frontend/client/views/dashboard/index.vue\"],\"names\":[],\"mappings\":\"AACA,kCAAkC,kBAAkB,CACnD,AACD,8CAA8C,WAAW,oBAAoB,CAC5E,AACD,mDAAmD,UAAU,CAC5D,AACD,+DAA+D,gBAAgB,qBAAqB,gBAAgB,CACnH,AACD,kFAAkF,mBAAmB,eAAe,yBAAyB,cAAe,YAAa,CACxK,AACD,sCAAsC,WAAW,iBAAiB,kBAAkB,oBAAoB,aAAa,sBAAsB,mBAAmB,qBAAqB,sBAAsB,CACxM,AACD,oCACA,mDAAmD,UAAU,CAC5D,CACA\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.datepicker-view[data-v-a9e6891e]{margin-bottom:1rem\\n}\\n.datepicker-view .datepicker[data-v-a9e6891e]{width:auto;display:inline-block\\n}\\n.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:25vw\\n}\\n.construction-info-view .construction-wrapper[data-v-a9e6891e]{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap\\n}\\n.construction-info-view .construction-wrapper .construction-item[data-v-a9e6891e]{-ms-flex:0 0 25rem;flex:0 0 25rem;border:1px solid #dbdbdb;padding:0.5rem;margin:0.5rem\\n}\\n.none-checklist-data[data-v-a9e6891e]{width:100%;min-height:15rem;text-align:center;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center\\n}\\n@media screen and (max-width: 999px){\\n.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:auto\\n}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 555:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(545);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(417)(\"4402bb46\", content, true);\n\n/***/ }),\n\n/***/ 564:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"j\"] = generateChart;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Bar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return HorizontalBar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return Doughnut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return Line; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return Pie; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return PolarArea; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return Radar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return Bubble; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return Scatter; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_chart_js__ = __webpack_require__(490);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_chart_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_chart_js__);\n\nfunction generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new __WEBPACK_IMPORTED_MODULE_0_chart_js___default.a(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nvar Bar = generateChart('bar-chart', 'bar');\nvar HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nvar Doughnut = generateChart('doughnut-chart', 'doughnut');\nvar Line = generateChart('line-chart', 'line');\nvar Pie = generateChart('pie-chart', 'pie');\nvar PolarArea = generateChart('polar-chart', 'polarArea');\nvar Radar = generateChart('radar-chart', 'radar');\nvar Bubble = generateChart('bubble-chart', 'bubble');\nvar Scatter = generateChart('scatter-chart', 'scatter');\n/* unused harmony default export */ var _unused_webpack_default_export = ({\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n});\n\n/***/ }),\n\n/***/ 565:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export VueCharts */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_index_js__ = __webpack_require__(566);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__BaseCharts__ = __webpack_require__(564);\n/* unused harmony reexport Bar */\n/* unused harmony reexport HorizontalBar */\n/* unused harmony reexport Doughnut */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"d\"]; });\n/* unused harmony reexport Pie */\n/* unused harmony reexport PolarArea */\n/* unused harmony reexport Radar */\n/* unused harmony reexport Bubble */\n/* unused harmony reexport Scatter */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__mixins_index_js__[\"a\"]; });\n/* unused harmony reexport generateChart */\n\n\nvar VueCharts = {\n  Bar: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"a\" /* Bar */],\n  HorizontalBar: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"b\" /* HorizontalBar */],\n  Doughnut: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"c\" /* Doughnut */],\n  Line: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"d\" /* Line */],\n  Pie: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"e\" /* Pie */],\n  PolarArea: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"f\" /* PolarArea */],\n  Radar: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"g\" /* Radar */],\n  Bubble: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"h\" /* Bubble */],\n  Scatter: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"i\" /* Scatter */],\n  mixins: __WEBPACK_IMPORTED_MODULE_0__mixins_index_js__[\"a\" /* default */],\n  generateChart: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"j\" /* generateChart */],\n  render: function render() {\n    return console.error('[vue-chartjs]: This is not a vue component. It is the whole object containing all vue components. Please import the named export or access the components over the dot notation. For more info visit https://vue-chartjs.org/#/home?id=quick-start');\n  }\n};\n/* unused harmony default export */ var _unused_webpack_default_export = (VueCharts);\n\n\n/***/ }),\n\n/***/ 566:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export reactiveData */\n/* unused harmony export reactiveProp */\nfunction dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nvar reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nvar reactiveProp = {\n  props: {\n    chartData: {\n      required: true\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n});\n\n/***/ }),\n\n/***/ 582:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard\"\n  }, [_c('div', {\n    staticClass: \"tabs is-boxed\"\n  }, [_c('ul', [_c('li', {\n    class: {\n      'is-active': _vm.tabInfo.trafficData\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.changeTabs('trafficData')\n      }\n    }\n  }, [_c('a', [_vm._v(\"Dashboard\")])]), _vm._v(\" \"), _c('li', {\n    class: {\n      'is-active': _vm.tabInfo.constructionData\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.changeTabs('constructionData')\n      }\n    }\n  }, [_c('a', [_vm._v(\"시공관리\")])])])]), _vm._v(\" \"), (_vm.tabInfo.constructionData) ? _c('div', {\n    staticClass: \"construction-info-view\"\n  }, [_c('div', {\n    staticClass: \"datepicker-view\"\n  }, [_c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m'\n      }\n    },\n    model: {\n      value: (_vm.constructionDate),\n      callback: function($$v) {\n        _vm.constructionDate = $$v\n      },\n      expression: \"constructionDate\"\n    }\n  }), _vm._v(\" \"), _c('button', {\n    staticClass: \"search-btn button\",\n    on: {\n      \"click\": _vm.getConstructionDashboardData\n    }\n  }, [_vm._v(\"조회\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"진행중인 공사 목록\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-info\"\n  }, [_c('p', [_vm._v(\"총 공사 건수: \" + _vm._s(_vm.constructionData.length) + \" 건\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-info\"\n  }, [_c('p', [_vm._v(\"총 매출: \" + _vm._s(_vm.addCommas(_vm.constructionSales)) + \" 만원\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-wrapper is-flex\"\n  }, _vm._l((_vm.constructionData), function(construction) {\n    return _c('div', {\n      staticClass: \"construction-item\"\n    }, [_c('h3', {\n      staticClass: \"subtitle\"\n    }, [_vm._v(_vm._s(construction.pc_name))]), _vm._v(\" \"), _c('div', {\n      staticClass: \"percentage-wrapper\"\n    }, [_c('span', {}, [_vm._v(\"진행율\")]), _vm._v(\" \"), _c('div', {\n      staticClass: \"doughnut\"\n    }, [_c('div', {\n      staticClass: \"progress-container is-flex\"\n    }, [_c('progress', {\n      staticClass: \"progress\",\n      attrs: {\n        \"max\": \"100\"\n      },\n      domProps: {\n        \"value\": construction.completedPercentage\n      }\n    })])])]), _vm._v(\" \"), (Object.keys(construction.checkList).length > 0) ? _c('div', {\n      staticClass: \"checklist\"\n    }, [_c('table', {\n      staticClass: \"table is-striped\"\n    }, [_vm._m(0, true), _vm._v(\" \"), _vm._l((construction.checkList), function(checkListByDate, index) {\n      return _c('tbody', [_c('tr', {\n        staticClass: \"date-header\"\n      }, [_c('th', {\n        attrs: {\n          \"colspan\": \"4\"\n        }\n      }, [_vm._v(_vm._s(index))])]), _vm._v(\" \"), _c('tr'), _vm._l((checkListByDate), function(checkListItem) {\n        return _c('tr', [_c('td', [_c('span', [_vm._v(_vm._s(checkListItem.ct_name))])]), _vm._v(\" \"), _c('td', [_c('input', {\n          directives: [{\n            name: \"model\",\n            rawName: \"v-model\",\n            value: (checkListItem.cl_resource),\n            expression: \"checkListItem.cl_resource\"\n          }],\n          staticClass: \"checkbox\",\n          attrs: {\n            \"type\": \"checkbox\"\n          },\n          domProps: {\n            \"checked\": Array.isArray(checkListItem.cl_resource) ? _vm._i(checkListItem.cl_resource, null) > -1 : (checkListItem.cl_resource)\n          },\n          on: {\n            \"change\": [function($event) {\n              var $$a = checkListItem.cl_resource,\n                $$el = $event.target,\n                $$c = $$el.checked ? (true) : (false);\n              if (Array.isArray($$a)) {\n                var $$v = null,\n                  $$i = _vm._i($$a, $$v);\n                if ($$el.checked) {\n                  $$i < 0 && (_vm.$set(checkListItem, \"cl_resource\", $$a.concat([$$v])))\n                } else {\n                  $$i > -1 && (_vm.$set(checkListItem, \"cl_resource\", $$a.slice(0, $$i).concat($$a.slice($$i + 1))))\n                }\n              } else {\n                _vm.$set(checkListItem, \"cl_resource\", $$c)\n              }\n            }, function($event) {\n              _vm.updateCheckListStatus(construction.pc_pk, checkListItem)\n            }]\n          }\n        })]), _vm._v(\" \"), _c('td', [_c('input', {\n          directives: [{\n            name: \"model\",\n            rawName: \"v-model\",\n            value: (checkListItem.cl_constructor),\n            expression: \"checkListItem.cl_constructor\"\n          }],\n          staticClass: \"checkbox\",\n          attrs: {\n            \"type\": \"checkbox\"\n          },\n          domProps: {\n            \"checked\": Array.isArray(checkListItem.cl_constructor) ? _vm._i(checkListItem.cl_constructor, null) > -1 : (checkListItem.cl_constructor)\n          },\n          on: {\n            \"change\": [function($event) {\n              var $$a = checkListItem.cl_constructor,\n                $$el = $event.target,\n                $$c = $$el.checked ? (true) : (false);\n              if (Array.isArray($$a)) {\n                var $$v = null,\n                  $$i = _vm._i($$a, $$v);\n                if ($$el.checked) {\n                  $$i < 0 && (_vm.$set(checkListItem, \"cl_constructor\", $$a.concat([$$v])))\n                } else {\n                  $$i > -1 && (_vm.$set(checkListItem, \"cl_constructor\", $$a.slice(0, $$i).concat($$a.slice($$i + 1))))\n                }\n              } else {\n                _vm.$set(checkListItem, \"cl_constructor\", $$c)\n              }\n            }, function($event) {\n              _vm.updateCheckListStatus(construction.pc_pk, checkListItem)\n            }]\n          }\n        })]), _vm._v(\" \"), _c('td', [_c('span', [_vm._v(_vm._s(checkListItem.cl_memo))])])])\n      })], 2)\n    })], 2)]) : _c('div', {\n      staticClass: \"none-checklist-data\"\n    }, [_c('span', [_vm._v(\"체크리스트가 없습니다.\")])])])\n  }))])])])]) : _vm._e(), _vm._v(\" \"), (_vm.tabInfo.trafficData) ? _c('div', {\n    staticClass: \"traffic-data-view\"\n  }, [_c('div', {\n    staticClass: \"datepicker-view\"\n  }, [_c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m-d'\n      }\n    },\n    model: {\n      value: (_vm.dateRange.startDate),\n      callback: function($$v) {\n        _vm.$set(_vm.dateRange, \"startDate\", $$v)\n      },\n      expression: \"dateRange.startDate\"\n    }\n  }), _vm._v(\"\\n      ~\\n      \"), _c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m-d'\n      }\n    },\n    model: {\n      value: (_vm.dateRange.endDate),\n      callback: function($$v) {\n        _vm.$set(_vm.dateRange, \"endDate\", $$v)\n      },\n      expression: \"dateRange.endDate\"\n    }\n  }), _vm._v(\" \"), _c('button', {\n    staticClass: \"search-btn button\",\n    on: {\n      \"click\": _vm.queryReports\n    }\n  }, [_vm._v(\"조회\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"일별 사용자\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.lineData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"이탈율\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.bounceRateData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"세션 시간\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.avgSessionDurationData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent is-12\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('h4', {\n    staticClass: \"title\"\n  }, [_vm._v(\"일별 문의 건수\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"content\"\n  }, [_c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.completedCountData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)])])])]) : _vm._e()])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', [_c('th', [_vm._v(\"공사\")]), _vm._v(\" \"), _c('th', [_vm._v(\"자재\")]), _vm._v(\" \"), _c('th', [_vm._v(\"인력\")]), _vm._v(\" \"), _c('th', [_vm._v(\"메모\")])])])\n}]}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// assets/js/0.cf927d87fa6bbd22e795.js","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-a9e6891e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!sass-loader?sourceMap!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a9e6891e\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* scopeId */\n  \"data-v-a9e6891e\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/views/dashboard/index.vue\n// module id = 425\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/helpers/index.js\n// module id = 436\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.defaults.js\n// module id = 437\n// module chunks = 0","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.element.js\n// module id = 442\n// module chunks = 0","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/index.js\n// module id = 445\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.layouts.js\n// module id = 448\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.ticks.js\n// module id = 449\n// module chunks = 0","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/helpers/helpers.core.js\n// module id = 459\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.interaction.js\n// module id = 470\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.plugins.js\n// module id = 471\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/platforms/platform.js\n// module id = 472\n// module chunks = 0","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color/index.js\n// module id = 473\n// module chunks = 0","// LineChart.js\r\nimport { Line, mixins } from 'vue-chartjs'\r\nconst { reactiveProp } = mixins\r\n\r\nexport default {\r\n  extends: Line,\r\n  mixins: [reactiveProp],\r\n  props: ['options'],\r\n  mounted () {\r\n    this.renderChart(this.chartData, this.options)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/views/dashboard/AnalyticsUsersChart.js","<template>\r\n  <div class=\"dashboard\">\r\n    <div class=\"tabs is-boxed\">\r\n      <ul>\r\n        <li @click=\"changeTabs('trafficData')\" :class=\"{'is-active': tabInfo.trafficData}\"><a>Dashboard</a></li>\r\n        <li @click=\"changeTabs('constructionData')\" :class=\"{'is-active': tabInfo.constructionData}\" ><a>시공관리</a></li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"construction-info-view\" v-if=\"tabInfo.constructionData\">\r\n      <div class=\"datepicker-view\">\r\n        <datepicker v-model=\"constructionDate\" class=\"datepicker\" :config=\"{dateFormat:'Y-m'}\"/>\r\n        <button class=\"search-btn button\" @click=\"getConstructionDashboardData\">조회</button>\r\n      </div>\r\n      <div class=\"tile is-ancestor\">\r\n        <div class=\"tile is-parent\">\r\n          <article class=\"tile is-child box\">\r\n            <p class=\"title\">진행중인 공사 목록</p>\r\n            <div class=\"construction-info\">\r\n              <p>총 공사 건수: {{constructionData.length}} 건</p>\r\n            </div>\r\n            <div class=\"construction-info\">\r\n              <p>총 매출: {{addCommas(constructionSales)}} 만원</p>\r\n            </div>\r\n            <div class=\"construction-wrapper is-flex\">\r\n              <div class=\"construction-item\" v-for=\"construction in constructionData\">\r\n                  <h3 class=\"subtitle\">{{construction.pc_name}}</h3>\r\n                  <div class=\"percentage-wrapper\">\r\n                    <span class=\"\">진행율</span>\r\n                    <div class=\"doughnut\">\r\n                      <div class=\"progress-container is-flex\">\r\n                        <progress :value=\"construction.completedPercentage\" max=\"100\" class=\"progress\"></progress>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                <div class=\"checklist\" v-if=\"Object.keys(construction.checkList).length > 0\">\r\n                  <table class=\"table is-striped\">\r\n                    <thead>\r\n                    <tr>\r\n                      <th>공사</th>\r\n                      <th>자재</th>\r\n                      <th>인력</th>\r\n                      <th>메모</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody v-for=\"(checkListByDate, index) in construction.checkList\">\r\n                    <tr class=\"date-header\">\r\n                      <th colspan=\"4\">{{index}}</th>\r\n                    </tr>\r\n                    <tr>\r\n                    <tr v-for=\"checkListItem in checkListByDate\">\r\n                      <td>\r\n                        <span>{{checkListItem.ct_name}}</span>\r\n                      </td>\r\n                      <td>\r\n                        <input type=\"checkbox\" class=\"checkbox\" v-model=\"checkListItem.cl_resource\" @change=\"updateCheckListStatus(construction.pc_pk, checkListItem)\" />\r\n                      </td>\r\n                      <td>\r\n                        <input type=\"checkbox\" class=\"checkbox\" v-model=\"checkListItem.cl_constructor\" @change=\"updateCheckListStatus(construction.pc_pk, checkListItem)\" />\r\n                      </td>\r\n                      <td>\r\n                        <span >{{checkListItem.cl_memo}}</span>\r\n                      </td>\r\n                    </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div class=\"none-checklist-data\" v-else>\r\n                  <span>체크리스트가 없습니다.</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"traffic-data-view\" v-if=\"tabInfo.trafficData\">\r\n      <div class=\"datepicker-view\">\r\n        <datepicker v-model=\"dateRange.startDate\" class=\"datepicker\" :config=\"{dateFormat:'Y-m-d'}\"/>\r\n        ~\r\n        <datepicker v-model=\"dateRange.endDate\" class=\"datepicker\" :config=\"{dateFormat:'Y-m-d'}\"/>\r\n        <button class=\"search-btn button\" @click=\"queryReports\">조회</button>\r\n      </div>\r\n      <div class=\"tile is-ancestor\">\r\n        <div class=\"tile is-parent\">\r\n          <article class=\"tile is-child box\">\r\n            <p class=\"title\">일별 사용자</p>\r\n            <analytics-users-chart :chart-data=\"lineData\" :options=\"{maintainAspectRatio: false}\"></analytics-users-chart>\r\n          </article>\r\n        </div>\r\n        <div class=\"tile is-parent\">\r\n          <article class=\"tile is-child box\">\r\n            <p class=\"title\">이탈율</p>\r\n            <analytics-users-chart :chart-data=\"bounceRateData\" :options=\"{maintainAspectRatio: false}\"></analytics-users-chart>\r\n          </article>\r\n        </div>\r\n        <div class=\"tile is-parent\">\r\n          <article class=\"tile is-child box\">\r\n            <p class=\"title\">세션 시간</p>\r\n            <analytics-users-chart :chart-data=\"avgSessionDurationData\" :options=\"{maintainAspectRatio: false}\"></analytics-users-chart>\r\n          </article>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"tile is-ancestor\">\r\n        <div class=\"tile is-parent is-12\">\r\n          <article class=\"tile is-child box\">\r\n            <h4 class=\"title\">일별 문의 건수</h4>\r\n            <div class=\"content\">\r\n              <analytics-users-chart :chart-data=\"completedCountData\" :options=\"{maintainAspectRatio: false}\"></analytics-users-chart>\r\n            </div>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import AnalyticsUsersChart from './AnalyticsUsersChart'\r\n  import _ from 'underscore'\r\n  import moment from 'moment'\r\n  import datepicker from 'vue-bulma-datepicker'\r\n  import Vue from 'vue'\r\n  import Notification from 'vue-bulma-notification'\r\n  import mixin from '../../services/mixin'\r\n\r\n  const NotificationComponent = Vue.extend(Notification)\r\n\r\n  const openNotification = (propsData = {\r\n    title: '',\r\n    message: '',\r\n    type: '',\r\n    direction: '',\r\n    duration: 4500,\r\n    container: '.notifications'\r\n  }) => {\r\n    return new NotificationComponent({\r\n      el: document.createElement('div'),\r\n      propsData\r\n    })\r\n  }\r\n\r\n  export default {\r\n    components: {\r\n      AnalyticsUsersChart,\r\n      datepicker\r\n    },\r\n    mixins: [mixin],\r\n    data () {\r\n      return {\r\n        rowDataList: {},\r\n        labelList: [],\r\n        backgroundColor_3: [\r\n          'rgba(31, 200, 219, 1)',\r\n          'rgba(151, 205, 118, 1)'\r\n        ],\r\n        options_3: {\r\n          tooltips: {\r\n            mode: 'label'\r\n          }\r\n        },\r\n        dateRange: {},\r\n        constructionDate: '',\r\n        lineData: null,\r\n        bounceRateData: null,\r\n        avgSessionDurationData: null,\r\n        channelUserList: [],\r\n        completedCountData: null,\r\n        tabInfo: {\r\n          constructionData: false,\r\n          trafficData: true\r\n        },\r\n        constructionData: [],\r\n        constructionSales: 0\r\n      }\r\n    },\r\n\r\n    computed: {\r\n    },\r\n    methods: {\r\n      queryReports () {\r\n      // console.log(window.gapi.auth.signIn())\r\n      // Replace with your view ID.\r\n\r\n        window.gapi.client.init({\r\n          'clientId': '149704865346-ohiqqr8atn0fb4q1rttkelp693b20ea3.apps.googleusercontent.com',\r\n          'scope': 'https://www.googleapis.com/auth/analytics.readonly'\r\n        }).then(() => {\r\n          // Executes an API request, and returns a Promise.\r\n          // The method name `language.translations.list` comes from the API discovery.\r\n          const VIEW_ID = '136738850'\r\n          const GoogleAuth = window.gapi.auth2.getAuthInstance()\r\n          const isSigned = GoogleAuth.isSignedIn.get()\r\n          if (!isSigned) {\r\n            GoogleAuth.isSignedIn.listen((updateSigned) => {\r\n              if (updateSigned) {\r\n                this.queryReports()\r\n              }\r\n            })\r\n            GoogleAuth.signIn()\r\n            throw new Error('Not Signed')\r\n          } else {\r\n            return window.gapi.client.request({\r\n              path: '/v4/reports:batchGet',\r\n              root: 'https://analyticsreporting.googleapis.com/',\r\n              method: 'POST',\r\n              body: {\r\n                reportRequests: [\r\n                  {\r\n                    viewId: VIEW_ID,\r\n                    dateRanges: [\r\n                      {\r\n                        startDate: this.dateRange.startDate,\r\n                        endDate: this.dateRange.endDate\r\n                      }\r\n                    ],\r\n                    metrics: [\r\n                      {\r\n                        expression: 'ga:users'\r\n                      },\r\n                      {\r\n                        expression: 'ga:bounceRate'\r\n                      },\r\n                      {\r\n                        expression: 'ga:avgSessionDuration',\r\n                        formattingType: 'TIME'\r\n                      },\r\n                      {\r\n                        expression: 'ga:goal1Completions'\r\n                      }\r\n                    ],\r\n                    dimensions: [{\r\n                      name: 'ga:date'\r\n                    }]\r\n                  }\r\n                ]\r\n              }\r\n            })\r\n          }\r\n        })\r\n        .then((response) => {\r\n          const formattedJson = JSON.parse(JSON.stringify(response.result, null, 2))\r\n          const metricsList = ['ga:users', 'ga:bounceRate', 'ga:avgSessionDuration', 'ga:goal1Completions']\r\n          const dataList = formattedJson.reports[0].data.rows\r\n\r\n          for (let i = 0; i < metricsList.length; i++) {\r\n            const metrics = metricsList[i]\r\n            this.rowDataList[metrics] = _.map(dataList, (row) => {\r\n              return row.metrics[0].values[i]\r\n            })\r\n            this.labelList = _.map(dataList, (row) => {\r\n              return moment(row.dimensions[0], 'YYYYMMDD').format('YYYY-MM-DD')\r\n            })\r\n          }\r\n\r\n          this.getSeriesData('lineData', 'ga:users')\r\n          this.getSeriesData('bounceRateData', 'ga:bounceRate')\r\n          this.getSeriesData('avgSessionDurationData', 'ga:avgSessionDuration')\r\n\r\n          return this.$http.get(`/api/webhook/channel/completed-list?start_date=${this.dateRange.startDate}&end_date=${this.dateRange.endDate}`)\r\n        })\r\n        .then((response) => {\r\n          const dateDiff = moment(this.dateRange.endDate, 'YYYY-MM-DD').diff(moment(this.dateRange.startDate, 'YYYY-MM-Dd'), 'days')\r\n          const channelUserList = response.data.data.channel_list\r\n\r\n          for (let i = 0; i <= dateDiff; i++) {\r\n            const targetDate = moment(this.dateRange.startDate, 'YYYY-MM-DD').add(i, 'day').format('YYYY-MM-DD')\r\n            const hasTargetDate = _.find(channelUserList, (item) => {\r\n              return item.date === targetDate\r\n            })\r\n            if (!hasTargetDate) {\r\n              channelUserList.push({\r\n                date: targetDate,\r\n                count: 0\r\n              })\r\n            }\r\n          }\r\n\r\n          this.channelUserList = _.sortBy(channelUserList, (item) => {\r\n            return moment(item.date, 'YYYY-MM-DD').format('X')\r\n          })\r\n          console.log(this.channelUserList)\r\n          this.getCompletedCountData()\r\n        })\r\n        .catch(e => {\r\n          console.error(e)\r\n        })\r\n      },\r\n      changeTabs (tabId) {\r\n        for (let i in this.tabInfo) {\r\n          this.tabInfo[i] = false\r\n        }\r\n        this.tabInfo[tabId] = true\r\n\r\n        switch (tabId) {\r\n          case 'constructionData':\r\n            this.getConstructionDashboardData()\r\n            break\r\n          default:\r\n            break\r\n        }\r\n      },\r\n      getSeriesData (basket, key) {\r\n        let data = {\r\n          labels: this.labelList\r\n        }\r\n        const dataSet = this.rowDataList[key]\r\n        if (!dataSet) {\r\n          return {\r\n            labels: this.labelList,\r\n            datasets: []\r\n          }\r\n        }\r\n        data.datasets = [{\r\n          data: _.map(this.rowDataList[key], (item) => {\r\n            return parseInt(item, 10)\r\n          }),\r\n          label: key,\r\n          borderColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)'),\r\n          pointBackgroundColor: this.backgroundColor_3[0],\r\n          backgroundColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)')\r\n        }]\r\n        this[basket] = data\r\n        this.$forceUpdate()\r\n      },\r\n      getCompletedCountData () {\r\n        const analyticsData = this.rowDataList['ga:goal1Completions']\r\n\r\n        const data = {\r\n          labels: this.labelList\r\n        }\r\n\r\n        data.datasets = []\r\n\r\n        data.datasets.push({\r\n          data: _.map(analyticsData, (item) => {\r\n            return parseInt(item, 10)\r\n          }),\r\n          label: 'Google Analytics Completed User',\r\n          borderColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)'),\r\n          pointBackgroundColor: this.backgroundColor_3[0],\r\n          backgroundColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)')\r\n        })\r\n        data.datasets.push({\r\n          data: _.map(this.channelUserList, (item) => {\r\n            return parseInt(item.count, 10)\r\n          }),\r\n          label: 'Channel Completed User',\r\n          borderColor: this.backgroundColor_3[1].replace(/1\\)$/, '.5)'),\r\n          pointBackgroundColor: this.backgroundColor_3[1],\r\n          backgroundColor: this.backgroundColor_3[1].replace(/1\\)$/, '.5)')\r\n        })\r\n\r\n        this.completedCountData = data\r\n        this.$forceUpdate()\r\n      },\r\n      getConstructionDashboardData () {\r\n        this.$http.get(`/api/dashboard/construction?date=${this.constructionDate}`)\r\n          .then((response) => {\r\n            this.constructionData = response.data.data\r\n            for (let i = 0; i < this.constructionData.length; i++) {\r\n              this.constructionData[i].checkList = _.groupBy(this.constructionData[i].checkList, 'cl_date')\r\n            }\r\n\r\n            return this.$http.get(`/api/dashboard/construction/budget?date=${this.constructionDate}`)\r\n          })\r\n          .then((response) => {\r\n            this.constructionSales = response.data.data.sales\r\n            console.log(this.constructionSales)\r\n          })\r\n          .catch((e) => {\r\n            console.error(e)\r\n          })\r\n      },\r\n      updateCheckListStatus (id, item) {\r\n        item.cl_date = moment(item.cl_date, 'YYYY-MM-DD').format('X')\r\n        console.log(item)\r\n        this.$http.put(`/api/contract/${id}/checklist/${item.cl_pk}`, item)\r\n          .then((response) => {\r\n            if (response.data.code !== 200) {\r\n              openNotification({\r\n                message: '체크리스트가 수정 중 이상이 발생하였습니다.',\r\n                type: 'danger',\r\n                duration: 1500\r\n              })\r\n              return\r\n            }\r\n            openNotification({\r\n              message: '체크리스트가 정상적으로 수정되었습니다.',\r\n              type: 'success',\r\n              duration: 1500\r\n            })\r\n          })\r\n      }\r\n    },\r\n    mounted () {\r\n      this.dateRange.startDate = moment().add(-1, 'week').format('YYYY-MM-DD')\r\n      this.dateRange.endDate = moment().add(-1, 'days').format('YYYY-MM-DD')\r\n\r\n      this.constructionDate = moment().format('YYYY-MM-DD')\r\n      setTimeout(() => {\r\n        this.queryReports()\r\n      }, 10)\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .datepicker-view {\r\n    margin-bottom: 1rem;\r\n    .datepicker {\r\n      width: auto;\r\n      display: inline-block;\r\n    }\r\n  }\r\n\r\n  .traffic-data-view {\r\n    .tile {\r\n      &.is-child {\r\n        width: 25vw;\r\n      }\r\n    }\r\n  }\r\n\r\n  .construction-info-view {\r\n    .construction-wrapper {\r\n      overflow-x: auto;\r\n      flex-wrap: nowrap;\r\n\r\n      .construction-item {\r\n        flex: 0 0 25rem;\r\n        border: 1px solid #dbdbdb;\r\n        padding: 0.5rem;\r\n        margin: 0.5rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  .none-checklist-data {\r\n    width: 100%;\r\n    min-height: 15rem;\r\n    text-align: center;\r\n    /* line-height: 1.1; */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  // mobile\r\n  @media screen and (max-width: 999px) {\r\n    .traffic-data-view {\r\n      .tile {\r\n        &.is-child {\r\n          width: auto;\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// index.vue?45a9d7a2","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Ticks = require('./core/core.ticks');\n\nrequire('./core/core.animation')(Chart);\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\nrequire('./core/core.scaleService')(Chart);\nrequire('./core/core.scale')(Chart);\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-it plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/chart.js\n// module id = 490\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Bar.js\n// module id = 491\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Bubble.js\n// module id = 492\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Doughnut.js\n// module id = 493\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Line.js\n// module id = 494\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.PolarArea.js\n// module id = 495\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Radar.js\n// module id = 496\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Scatter.js\n// module id = 497\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.bar.js\n// module id = 498\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.bubble.js\n// module id = 499\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.doughnut.js\n// module id = 500\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.line.js\n// module id = 501\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.polarArea.js\n// module id = 502\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.radar.js\n// module id = 503\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.scatter.js\n// module id = 504\n// module chunks = 0","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.animation.js\n// module id = 505\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.controller.js\n// module id = 506\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.datasetController.js\n// module id = 507\n// module chunks = 0","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.helpers.js\n// module id = 508\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.js\n// module id = 509\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.scale.js\n// module id = 510\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.scaleService.js\n// module id = 511\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.tooltip.js\n// module id = 512\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.arc.js\n// module id = 513\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.line.js\n// module id = 514\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.point.js\n// module id = 515\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.rectangle.js\n// module id = 516\n// module chunks = 0","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/helpers/helpers.canvas.js\n// module id = 517\n// module chunks = 0","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/helpers/helpers.easing.js\n// module id = 518\n// module chunks = 0","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/helpers/helpers.options.js\n// module id = 519\n// module chunks = 0","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/platforms/platform.basic.js\n// module id = 520\n// module chunks = 0","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/platforms/platform.dom.js\n// module id = 521\n// module chunks = 0","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/plugins/index.js\n// module id = 522\n// module chunks = 0","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/plugins/plugin.filler.js\n// module id = 523\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/plugins/plugin.legend.js\n// module id = 524\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/plugins/plugin.title.js\n// module id = 525\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.category.js\n// module id = 526\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.linear.js\n// module id = 527\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.linearbase.js\n// module id = 528\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.logarithmic.js\n// module id = 529\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.radialLinear.js\n// module id = 530\n// module chunks = 0","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.time.js\n// module id = 531\n// module chunks = 0","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color-string/color-string.js\n// module id = 532\n// module chunks = 0","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color/~/color-convert/conversions.js\n// module id = 533\n// module chunks = 0","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color/~/color-convert/index.js\n// module id = 534\n// module chunks = 0","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/color-name/index.js\n// module id = 536\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".datepicker-view[data-v-a9e6891e]{margin-bottom:1rem}.datepicker-view .datepicker[data-v-a9e6891e]{width:auto;display:inline-block}.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:25vw}.construction-info-view .construction-wrapper[data-v-a9e6891e]{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.construction-info-view .construction-wrapper .construction-item[data-v-a9e6891e]{-ms-flex:0 0 25rem;flex:0 0 25rem;border:1px solid #dbdbdb;padding:.5rem;margin:.5rem}.none-checklist-data[data-v-a9e6891e]{width:100%;min-height:15rem;text-align:center;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}@media screen and (max-width:999px){.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:auto}}\", \"\", {\"version\":3,\"sources\":[\"/Users/hyungwon/Works/gridazip/admin.gridazip.com/frontend/client/views/dashboard/index.vue\"],\"names\":[],\"mappings\":\"AACA,kCAAkC,kBAAkB,CACnD,AACD,8CAA8C,WAAW,oBAAoB,CAC5E,AACD,mDAAmD,UAAU,CAC5D,AACD,+DAA+D,gBAAgB,qBAAqB,gBAAgB,CACnH,AACD,kFAAkF,mBAAmB,eAAe,yBAAyB,cAAe,YAAa,CACxK,AACD,sCAAsC,WAAW,iBAAiB,kBAAkB,oBAAoB,aAAa,sBAAsB,mBAAmB,qBAAqB,sBAAsB,CACxM,AACD,oCACA,mDAAmD,UAAU,CAC5D,CACA\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.datepicker-view[data-v-a9e6891e]{margin-bottom:1rem\\n}\\n.datepicker-view .datepicker[data-v-a9e6891e]{width:auto;display:inline-block\\n}\\n.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:25vw\\n}\\n.construction-info-view .construction-wrapper[data-v-a9e6891e]{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap\\n}\\n.construction-info-view .construction-wrapper .construction-item[data-v-a9e6891e]{-ms-flex:0 0 25rem;flex:0 0 25rem;border:1px solid #dbdbdb;padding:0.5rem;margin:0.5rem\\n}\\n.none-checklist-data[data-v-a9e6891e]{width:100%;min-height:15rem;text-align:center;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center\\n}\\n@media screen and (max-width: 999px){\\n.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:auto\\n}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-a9e6891e\",\"scoped\":true,\"hasInlineConfig\":true}!./~/sass-loader/lib/loader.js?sourceMap!./~/vue-loader/lib/selector.js?type=styles&index=0!./client/views/dashboard/index.vue\n// module id = 545\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-a9e6891e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../node_modules/sass-loader/lib/loader.js?sourceMap!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"4402bb46\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-a9e6891e\",\"scoped\":true,\"hasInlineConfig\":true}!./~/sass-loader/lib/loader.js?sourceMap!./~/vue-loader/lib/selector.js?type=styles&index=0!./client/views/dashboard/index.vue\n// module id = 555\n// module chunks = 0","import Chart from 'chart.js';\nexport function generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new Chart(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nexport var Bar = generateChart('bar-chart', 'bar');\nexport var HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nexport var Doughnut = generateChart('doughnut-chart', 'doughnut');\nexport var Line = generateChart('line-chart', 'line');\nexport var Pie = generateChart('pie-chart', 'pie');\nexport var PolarArea = generateChart('polar-chart', 'polarArea');\nexport var Radar = generateChart('radar-chart', 'radar');\nexport var Bubble = generateChart('bubble-chart', 'bubble');\nexport var Scatter = generateChart('scatter-chart', 'scatter');\nexport default {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-chartjs/es/BaseCharts.js\n// module id = 564\n// module chunks = 0","import mixins from './mixins/index.js';\nimport { Bar, HorizontalBar, Doughnut, Line, Pie, PolarArea, Radar, Bubble, Scatter, generateChart } from './BaseCharts';\nvar VueCharts = {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter,\n  mixins: mixins,\n  generateChart: generateChart,\n  render: function render() {\n    return console.error('[vue-chartjs]: This is not a vue component. It is the whole object containing all vue components. Please import the named export or access the components over the dot notation. For more info visit https://vue-chartjs.org/#/home?id=quick-start');\n  }\n};\nexport default VueCharts;\nexport { VueCharts, Bar, HorizontalBar, Doughnut, Line, Pie, PolarArea, Radar, Bubble, Scatter, mixins, generateChart };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-chartjs/es/index.js\n// module id = 565\n// module chunks = 0","function dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nexport var reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport var reactiveProp = {\n  props: {\n    chartData: {\n      required: true\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport default {\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-chartjs/es/mixins/index.js\n// module id = 566\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard\"\n  }, [_c('div', {\n    staticClass: \"tabs is-boxed\"\n  }, [_c('ul', [_c('li', {\n    class: {\n      'is-active': _vm.tabInfo.trafficData\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.changeTabs('trafficData')\n      }\n    }\n  }, [_c('a', [_vm._v(\"Dashboard\")])]), _vm._v(\" \"), _c('li', {\n    class: {\n      'is-active': _vm.tabInfo.constructionData\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.changeTabs('constructionData')\n      }\n    }\n  }, [_c('a', [_vm._v(\"시공관리\")])])])]), _vm._v(\" \"), (_vm.tabInfo.constructionData) ? _c('div', {\n    staticClass: \"construction-info-view\"\n  }, [_c('div', {\n    staticClass: \"datepicker-view\"\n  }, [_c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m'\n      }\n    },\n    model: {\n      value: (_vm.constructionDate),\n      callback: function($$v) {\n        _vm.constructionDate = $$v\n      },\n      expression: \"constructionDate\"\n    }\n  }), _vm._v(\" \"), _c('button', {\n    staticClass: \"search-btn button\",\n    on: {\n      \"click\": _vm.getConstructionDashboardData\n    }\n  }, [_vm._v(\"조회\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"진행중인 공사 목록\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-info\"\n  }, [_c('p', [_vm._v(\"총 공사 건수: \" + _vm._s(_vm.constructionData.length) + \" 건\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-info\"\n  }, [_c('p', [_vm._v(\"총 매출: \" + _vm._s(_vm.addCommas(_vm.constructionSales)) + \" 만원\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-wrapper is-flex\"\n  }, _vm._l((_vm.constructionData), function(construction) {\n    return _c('div', {\n      staticClass: \"construction-item\"\n    }, [_c('h3', {\n      staticClass: \"subtitle\"\n    }, [_vm._v(_vm._s(construction.pc_name))]), _vm._v(\" \"), _c('div', {\n      staticClass: \"percentage-wrapper\"\n    }, [_c('span', {}, [_vm._v(\"진행율\")]), _vm._v(\" \"), _c('div', {\n      staticClass: \"doughnut\"\n    }, [_c('div', {\n      staticClass: \"progress-container is-flex\"\n    }, [_c('progress', {\n      staticClass: \"progress\",\n      attrs: {\n        \"max\": \"100\"\n      },\n      domProps: {\n        \"value\": construction.completedPercentage\n      }\n    })])])]), _vm._v(\" \"), (Object.keys(construction.checkList).length > 0) ? _c('div', {\n      staticClass: \"checklist\"\n    }, [_c('table', {\n      staticClass: \"table is-striped\"\n    }, [_vm._m(0, true), _vm._v(\" \"), _vm._l((construction.checkList), function(checkListByDate, index) {\n      return _c('tbody', [_c('tr', {\n        staticClass: \"date-header\"\n      }, [_c('th', {\n        attrs: {\n          \"colspan\": \"4\"\n        }\n      }, [_vm._v(_vm._s(index))])]), _vm._v(\" \"), _c('tr'), _vm._l((checkListByDate), function(checkListItem) {\n        return _c('tr', [_c('td', [_c('span', [_vm._v(_vm._s(checkListItem.ct_name))])]), _vm._v(\" \"), _c('td', [_c('input', {\n          directives: [{\n            name: \"model\",\n            rawName: \"v-model\",\n            value: (checkListItem.cl_resource),\n            expression: \"checkListItem.cl_resource\"\n          }],\n          staticClass: \"checkbox\",\n          attrs: {\n            \"type\": \"checkbox\"\n          },\n          domProps: {\n            \"checked\": Array.isArray(checkListItem.cl_resource) ? _vm._i(checkListItem.cl_resource, null) > -1 : (checkListItem.cl_resource)\n          },\n          on: {\n            \"change\": [function($event) {\n              var $$a = checkListItem.cl_resource,\n                $$el = $event.target,\n                $$c = $$el.checked ? (true) : (false);\n              if (Array.isArray($$a)) {\n                var $$v = null,\n                  $$i = _vm._i($$a, $$v);\n                if ($$el.checked) {\n                  $$i < 0 && (_vm.$set(checkListItem, \"cl_resource\", $$a.concat([$$v])))\n                } else {\n                  $$i > -1 && (_vm.$set(checkListItem, \"cl_resource\", $$a.slice(0, $$i).concat($$a.slice($$i + 1))))\n                }\n              } else {\n                _vm.$set(checkListItem, \"cl_resource\", $$c)\n              }\n            }, function($event) {\n              _vm.updateCheckListStatus(construction.pc_pk, checkListItem)\n            }]\n          }\n        })]), _vm._v(\" \"), _c('td', [_c('input', {\n          directives: [{\n            name: \"model\",\n            rawName: \"v-model\",\n            value: (checkListItem.cl_constructor),\n            expression: \"checkListItem.cl_constructor\"\n          }],\n          staticClass: \"checkbox\",\n          attrs: {\n            \"type\": \"checkbox\"\n          },\n          domProps: {\n            \"checked\": Array.isArray(checkListItem.cl_constructor) ? _vm._i(checkListItem.cl_constructor, null) > -1 : (checkListItem.cl_constructor)\n          },\n          on: {\n            \"change\": [function($event) {\n              var $$a = checkListItem.cl_constructor,\n                $$el = $event.target,\n                $$c = $$el.checked ? (true) : (false);\n              if (Array.isArray($$a)) {\n                var $$v = null,\n                  $$i = _vm._i($$a, $$v);\n                if ($$el.checked) {\n                  $$i < 0 && (_vm.$set(checkListItem, \"cl_constructor\", $$a.concat([$$v])))\n                } else {\n                  $$i > -1 && (_vm.$set(checkListItem, \"cl_constructor\", $$a.slice(0, $$i).concat($$a.slice($$i + 1))))\n                }\n              } else {\n                _vm.$set(checkListItem, \"cl_constructor\", $$c)\n              }\n            }, function($event) {\n              _vm.updateCheckListStatus(construction.pc_pk, checkListItem)\n            }]\n          }\n        })]), _vm._v(\" \"), _c('td', [_c('span', [_vm._v(_vm._s(checkListItem.cl_memo))])])])\n      })], 2)\n    })], 2)]) : _c('div', {\n      staticClass: \"none-checklist-data\"\n    }, [_c('span', [_vm._v(\"체크리스트가 없습니다.\")])])])\n  }))])])])]) : _vm._e(), _vm._v(\" \"), (_vm.tabInfo.trafficData) ? _c('div', {\n    staticClass: \"traffic-data-view\"\n  }, [_c('div', {\n    staticClass: \"datepicker-view\"\n  }, [_c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m-d'\n      }\n    },\n    model: {\n      value: (_vm.dateRange.startDate),\n      callback: function($$v) {\n        _vm.$set(_vm.dateRange, \"startDate\", $$v)\n      },\n      expression: \"dateRange.startDate\"\n    }\n  }), _vm._v(\"\\n      ~\\n      \"), _c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m-d'\n      }\n    },\n    model: {\n      value: (_vm.dateRange.endDate),\n      callback: function($$v) {\n        _vm.$set(_vm.dateRange, \"endDate\", $$v)\n      },\n      expression: \"dateRange.endDate\"\n    }\n  }), _vm._v(\" \"), _c('button', {\n    staticClass: \"search-btn button\",\n    on: {\n      \"click\": _vm.queryReports\n    }\n  }, [_vm._v(\"조회\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"일별 사용자\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.lineData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"이탈율\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.bounceRateData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"세션 시간\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.avgSessionDurationData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent is-12\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('h4', {\n    staticClass: \"title\"\n  }, [_vm._v(\"일별 문의 건수\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"content\"\n  }, [_c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.completedCountData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)])])])]) : _vm._e()])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', [_c('th', [_vm._v(\"공사\")]), _vm._v(\" \"), _c('th', [_vm._v(\"자재\")]), _vm._v(\" \"), _c('th', [_vm._v(\"인력\")]), _vm._v(\" \"), _c('th', [_vm._v(\"메모\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-a9e6891e\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./client/views/dashboard/index.vue\n// module id = 582\n// module chunks = 0"],"sourceRoot":""}