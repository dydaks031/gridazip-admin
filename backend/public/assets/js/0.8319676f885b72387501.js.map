{"version":3,"sources":["webpack:///assets/js/0.8319676f885b72387501.js","webpack:///./client/views/dashboard/index.vue","webpack:///./~/chart.js/src/helpers/index.js","webpack:///./~/chart.js/src/core/core.defaults.js","webpack:///./~/chart.js/src/core/core.element.js","webpack:///./~/chart.js/src/elements/index.js","webpack:///./~/chart.js/src/core/core.layouts.js","webpack:///./~/chart.js/src/core/core.ticks.js","webpack:///./~/chart.js/src/helpers/helpers.core.js","webpack:///./~/chart.js/src/core/core.interaction.js","webpack:///./~/chart.js/src/core/core.plugins.js","webpack:///./~/chart.js/src/platforms/platform.js","webpack:///./~/chartjs-color/index.js","webpack:///./client/views/dashboard/AnalyticsUsersChart.js","webpack:///index.vue","webpack:///./~/chart.js/src/chart.js","webpack:///./~/chart.js/src/charts/Chart.Bar.js","webpack:///./~/chart.js/src/charts/Chart.Bubble.js","webpack:///./~/chart.js/src/charts/Chart.Doughnut.js","webpack:///./~/chart.js/src/charts/Chart.Line.js","webpack:///./~/chart.js/src/charts/Chart.PolarArea.js","webpack:///./~/chart.js/src/charts/Chart.Radar.js","webpack:///./~/chart.js/src/charts/Chart.Scatter.js","webpack:///./~/chart.js/src/controllers/controller.bar.js","webpack:///./~/chart.js/src/controllers/controller.bubble.js","webpack:///./~/chart.js/src/controllers/controller.doughnut.js","webpack:///./~/chart.js/src/controllers/controller.line.js","webpack:///./~/chart.js/src/controllers/controller.polarArea.js","webpack:///./~/chart.js/src/controllers/controller.radar.js","webpack:///./~/chart.js/src/controllers/controller.scatter.js","webpack:///./~/chart.js/src/core/core.animation.js","webpack:///./~/chart.js/src/core/core.controller.js","webpack:///./~/chart.js/src/core/core.datasetController.js","webpack:///./~/chart.js/src/core/core.helpers.js","webpack:///./~/chart.js/src/core/core.js","webpack:///./~/chart.js/src/core/core.scale.js","webpack:///./~/chart.js/src/core/core.scaleService.js","webpack:///./~/chart.js/src/core/core.tooltip.js","webpack:///./~/chart.js/src/elements/element.arc.js","webpack:///./~/chart.js/src/elements/element.line.js","webpack:///./~/chart.js/src/elements/element.point.js","webpack:///./~/chart.js/src/elements/element.rectangle.js","webpack:///./~/chart.js/src/helpers/helpers.canvas.js","webpack:///./~/chart.js/src/helpers/helpers.easing.js","webpack:///./~/chart.js/src/helpers/helpers.options.js","webpack:///./~/chart.js/src/platforms/platform.basic.js","webpack:///./~/chart.js/src/platforms/platform.dom.js","webpack:///./~/chart.js/src/plugins/index.js","webpack:///./~/chart.js/src/plugins/plugin.filler.js","webpack:///./~/chart.js/src/plugins/plugin.legend.js","webpack:///./~/chart.js/src/plugins/plugin.title.js","webpack:///./~/chart.js/src/scales/scale.category.js","webpack:///./~/chart.js/src/scales/scale.linear.js","webpack:///./~/chart.js/src/scales/scale.linearbase.js","webpack:///./~/chart.js/src/scales/scale.logarithmic.js","webpack:///./~/chart.js/src/scales/scale.radialLinear.js","webpack:///./~/chart.js/src/scales/scale.time.js","webpack:///./~/chartjs-color-string/color-string.js","webpack:///./~/chartjs-color/~/color-convert/conversions.js","webpack:///./~/chartjs-color/~/color-convert/index.js","webpack:///./~/color-name/index.js","webpack:///./client/views/dashboard/index.vue?3586","webpack:///./client/views/dashboard/index.vue?6001","webpack:///./~/vue-chartjs/es/BaseCharts.js","webpack:///./~/vue-chartjs/es/index.js","webpack:///./~/vue-chartjs/es/mixins/index.js","webpack:///./client/views/dashboard/index.vue?6242"],"names":["webpackJsonp","463","module","exports","__webpack_require__","Component","471","easing","canvas","options","472","helpers","_set","scope","values","merge","this","479","interpolate","start","view","model","ease","i","ilen","key","actual","origin","target","type","c0","c1","keys","Object","length","hasOwnProperty","color","valid","mix","rgbString","isFinite","Element","configuration","extend","initialize","apply","arguments","prototype","hidden","pivot","me","_view","clone","_model","_start","transition","tooltipPosition","x","y","hasValue","isNumber","inherits","480","Arc","Line","Point","Rectangle","483","filterByPosition","array","position","where","v","sortByWeight","reverse","forEach","_tmpIndex_","sort","a","b","v0","v1","weight","defaults","addBox","chart","item","boxes","fullWidth","push","removeBox","layoutItem","index","indexOf","splice","configure","prop","props","update","width","height","getMinimumBoxSize","box","minSize","isHorizontal","chartWidth","maxChartAreaWidth","horizontalBoxHeight","maxChartAreaHeight","verticalBoxWidth","minBoxSizes","horizontal","fitBox","minBoxSize","findNextWhere","minBox","scaleMargin","left","Math","max","totalLeftBoxesWidth","maxHorizontalLeftPadding","right","totalRightBoxesWidth","maxHorizontalRightPadding","top","bottom","chartHeight","finalFitVerticalBox","totalTopBoxesHeight","totalBottomBoxesHeight","placeBox","leftPadding","rightPadding","layoutOptions","layout","padding","toPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaWidth","chartAreaHeight","each","concat","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","chartArea","484","formatters","value","isArray","linear","tickValue","ticks","delta","abs","floor","logDelta","log10","tickString","numDecimal","min","toFixed","logarithmic","remain","pow","toExponential","493","noop","uid","id","isNullOrUndef","Array","toString","call","isObject","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","args","thisArg","loopable","len","arrayEquals","a0","a1","source","map","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","498","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","datasets","data","isDatasetVisible","getDatasetMeta","element","skip","getIntersectItems","elements","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","dataset","datasetIndex","_index","modes","single","slice","label","_datasetIndex","x-axis","point","nearest","sizeA","getArea","sizeB","ret","intersectsItem","inXRange","inYRange","499","plugins","_plugins","_cacheId","register","p","plugin","unregister","idx","clear","count","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","config","opts","global","_invalidate","500","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","501","convert","string","Color","obj","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","undefined","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mixinColor","color1","w1","w2","toJSON","result","console","error","spaces","maxes","getValues","space","charAt","chans","capped","round","sname","svalues","window","502","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_vue_chartjs__","reactiveProp","extends","mixins","mounted","renderChart","chartData","504","defineProperty","__WEBPACK_IMPORTED_MODULE_0__AnalyticsUsersChart__","__WEBPACK_IMPORTED_MODULE_1_underscore__","__WEBPACK_IMPORTED_MODULE_1_underscore___default","n","__WEBPACK_IMPORTED_MODULE_2_moment__","__WEBPACK_IMPORTED_MODULE_2_moment___default","__WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker__","__WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker___default","__WEBPACK_IMPORTED_MODULE_4_vue__","__WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification__","__WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification___default","__WEBPACK_IMPORTED_MODULE_6__services_mixin__","NotificationComponent","openNotification","propsData","title","message","direction","duration","container","el","document","createElement","components","AnalyticsUsersChart","datepicker","moment","rowDataList","labelList","backgroundColor_3","options_3","tooltips","mode","dateRange","constructionDate","lineData","bounceRateData","avgSessionDurationData","channelUserList","completedCountData","tabInfo","constructionData","trafficData","interestConstruction","constructionSales","computed","methods","queryReports","_this","gapi","client","init","clientId","then","GoogleAuth","auth2","getAuthInstance","isSignedIn","get","request","path","root","body","reportRequests","viewId","dateRanges","startDate","endDate","metrics","expression","formattingType","dimensions","name","listen","updateSigned","signIn","Error","response","formattedJson","JSON","parse","stringify","metricsList","dataList","reports","rows","row","format","getSeriesData","$http","dateDiff","diff","channel_list","targetDate","add","find","date","sortBy","getCompletedCountData","catch","changeTabs","tabId","getConstructionDashboardData","getInterestConstruction","basket","labels","parseInt","borderColor","replace","pointBackgroundColor","backgroundColor","$forceUpdate","analyticsData","_this2","checkList","groupBy","sales","_this3","updateInterestedStatus","contract","_this4","interested","put","estimate_no","log","code","updateCheckListStatus","_this5","cl_date","cl_pk","_this6","setTimeout","512","Chart","Interaction","layouts","platform","Ticks","Legend","legend","_element","Title","pluginService","PluginBase","canvasHelpers","layoutService","513","Bar","context","514","Bubble","515","Doughnut","516","517","PolarArea","518","Radar","519","Scatter","520","computeMinSampleSize","scale","pixels","prev","curr","getTicks","getPixelForTick","computeFitCategoryTraits","ruler","size","thickness","barThickness","stackCount","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","next","percent","end","hover","scales","xAxes","offset","gridLines","offsetGridLines","yAxes","rectangle","borderSkipped","callbacks","yLabel","xLabel","controllers","bar","DatasetController","dataElementType","getMeta","stack","getDataset","reset","rects","_ruler","getRuler","updateElement","custom","rectangleOptions","_xScale","getScaleForId","xAxisID","_yScale","yAxisID","datasetLabel","borderWidth","updateElementGeometry","vscale","getValueScale","base","getBasePixel","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","last","stacked","stacks","getStackCount","getStackIndex","getPixelForValue","imeta","ivalue","getRightValue","controller","range","stackIndex","maxBarThickness","Infinity","draw","clipArea","ctx","isNaN","unclipArea","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","rectangleElementOptions","horizontalBar","521","dataPoint","bubble","points","xScale","yScale","_resolveElementOptions","dsIndex","getPixelForDecimal","NaN","_options","hitRadius","pointStyle","radius","hoverRadius","resolve","dataIndex","522","animation","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arc","arcOpts","fillStyle","strokeStyle","lineWidth","onClick","legendItem","cutoutPercentage","rotation","PI","circumference","tooltipItem","dataLabel","doughnut","pie","linkScales","getRingIndex","ringIndex","availableWidth","availableHeight","startAngle","endAngle","cos","sin","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","_chart","523","showLines","spanGaps","lineEnabled","showLine","line","datasetElementType","lineElementOptions","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","capControlPoint","pt","controlPoints","area","filter","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","524","angleLines","display","circular","pointLabels","beginAtZero","polarArea","countVisibleElements","xCenter","yCenter","visibleCount","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","525","radar","_loop","pointElementOptions","pointPosition","getPointPositionForValue","526","scatter","527","onProgress","onComplete","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","set","528","initConfig","configMerge","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","tooltip","positionIsHorizontal","types","instances","construct","aspectRatio","_bufferedRender","retinaScale","devicePixelRatio","bindEvents","responsive","resize","initToolTip","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","style","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","reduce","dtype","dposition","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","ControllerClass","resetElements","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","effects","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","destroy","unbindEvents","toBase64Image","toDataURL","Tooltip","_chartInstance","listeners","_listeners","listener","eventHandler","events","updateHoverStyle","enabled","changed","handleEvent","bufferedRequest","animationDuration","hoverOptions","active","onHover","Controller","529","listenArrayEvents","_chartjs","configurable","enumerable","arrayEvents","toUpperCase","res","object","unlistenArrayEvents","stub","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","resyncElements","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","530","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","getScaleDefaults","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distanceBetweenPoints","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","t","current","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","loop","niceNum","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","clientWidth","cw","clientHeight","h","ch","property","currentStyle","getPropertyValue","forceRatio","pixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","defaultColor","colorValue","CanvasPattern","531","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","532","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","computeTextSize","tick","parseFontOptions","globalDefaults","fontSize","family","parseLineHeight","toLineHeight","Scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","scaleLabelLineHeight","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","shouldSkip","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","save","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","533","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","534","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getTooltipSize","combinedBodyLength","bodyItem","before","lines","after","titleLineCount","footerLineCount","widthPadding","maxLineWidth","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","vm","alignment","paddingAndSize","radiusAndPadding","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","existingModel","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","quadraticCurveTo","closePath","hasTooltipContent","average","pos","eventPosition","nearestElement","d","tp","535","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","536","currentVM","globalOptionLineElements","lastDrawnIndex","lineCap","537","xRange","yRange","drawPoint","538","isVertical","getBarBounds","halfWidth","halfHeight","cornerAt","corners","startCorner","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","borders","corner","bounds","539","clearRect","roundedRect","rx","ry","rect","edgeLength","xOffset","yOffset","drawImage","SQRT2","leftX","topY","sideSize","clip","flip","bezierCurveTo","drawRoundedRectangle","540","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","541","matches","match","inputs","542","getContext","543","readUsedSize","initCanvas","renderHeight","getAttribute","renderWidth","EXPANDO_KEY","initial","displayWidth","displayHeight","eventListenerOptions","createEvent","nativeEvent","fromNativeEvent","event","EVENT_TYPES","throttled","ticking","createResizer","resizer","cls","CSS_PREFIX","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","watchForRender","expando","proxy","renderProxy","animationName","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","reflow","offsetParent","classList","CSS_RENDER_MONITOR","unwatchForRender","remove","addResizeListener","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","supportsEventListenerOptions","supports","passive","keyframes","getElementById","removeAttribute","proxies","addEvent","removeEvent","544","filler","545","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","propagate","visited","visible","createMapper","mappers","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","span","boundary","afterDatasetsUpdate","$filler","beforeDatasetDraw","546","getBoxWidth","labelOpts","usePointStyle","boxWidth","createNewLegendAndAttach","legendOpts","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","drawLegendBox","isLineWidthZero","offSet","halfFontSize","xLeft","yMiddle","lh","hitBox","beforeInit","afterEvent","547","createNewTitleBlockAndAttach","titleOpts","titleBlock","textSize","titleX","titleY","titleFont","548","defaultConfig","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","549","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","ceil","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","550","generateTicks","generationOptions","dataRange","spacing","stepSize","niceRange","niceMin","niceMax","numSpaces","precision","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","fixedStepSize","551","exp","significand","tickVal","endExp","endSignificand","minNotZero","lastTick","LogarithmicScale","tickValues","_getFirstTickValue","firstTickValue","552","getValueCount","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","fitWithPointLabels","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","drawingArea","setCenterPoint","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","param","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","LinearRadialScale","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","scalingFactor","distanceFromCenter","thisAngle","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","553","sorter","arrayUnique","hash","out","buildLookupTable","timestamps","distribution","time","table","lookup","mid","i0","i1","lo","hi","skey","tkey","momentify","parser","input","startOf","valueOf","determineStepSize","unit","capacity","factor","interval","INTERVALS","milliseconds","steps","determineUnitForAutoTicks","minUnit","UNITS","MAX_INTEGER","common","determineUnitForFormatting","as","determineMajorUnit","generate","timeOpts","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","computeOffsets","upper","lower","ticksFromTimestamps","majorUnit","determineLabelFormat","momentDate","hasTime","millisecond","second","minute","hour","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","day","week","month","quarter","year","displayFormat","displayFormats","TimeScale","warn","timestamp","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","_majorUnit","_offsets","_labelFormat","tooltipFormat","tickFormatFunction","formatOverride","formats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","exampleTime","exampleLabel","554","abbr","hex","rgba","per","colorNames","getRgb","getHsl","hsla","getAlpha","hexDouble","percentaString","reverseNames","num","str","555","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","m","rgb2keyword","reverseKeywords","rgb2xyz","rgb2lab","xyz","z","rgb2lch","lab2lch","hsl2rgb","t1","t2","t3","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","f","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","wh","bl","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","hr","lab2rgb","lch2lab","lch","lch2xyz","lch2rgb","keyword2rgb","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","556","conversions","Converter","func","arg","pair","exec","from","to","convs","routeSpace","fspace","557","565","version","names","mappings","file","sourcesContent","sourceRoot","574","content","locals","576","generateChart","chartId","chartType","styles","class","cssClasses","attrs","ref","default","String","addPlugin","$data","__WEBPACK_IMPORTED_MODULE_0_chart_js___default","$refs","beforeDestroy","HorizontalBar","Pie","__WEBPACK_IMPORTED_MODULE_0_chart_js__","577","__WEBPACK_IMPORTED_MODULE_0__mixins_index_js__","__WEBPACK_IMPORTED_MODULE_1__BaseCharts__","578","dataHandler","newData","oldData","newDatasetLabels","oldDatasetLabels","oldLabels","oldDatasetKeys","newDatasetKeys","deletionKey","attribute","$emit","reactiveData","watch","required","586","_vm","_h","$createElement","_c","_self","staticClass","is-active","on","click","$event","_v","dateFormat","$$v","$set","chart-data","_e","_s","addCommas","_l","construction","customer_name","customer_nickname","domProps","completedPercentage","_m","checkListByDate","colspan","checkListItem","ct_name","directives","rawName","checked","cl_resource","_i","change","$$a","$$el","$$c","$$i","pc_pk","cl_constructor","cl_memo","construction_start_date","moving_date","contractTotalCosts","collectSchedule","collectBills","receiptTotalCosts","staticRenderFns"],"mappings":"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","file":"assets/js/0.8319676f885b72387501.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 463:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(574)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(504),\n  /* template */\n  __webpack_require__(586),\n  /* scopeId */\n  \"data-v-a9e6891e\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 471:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(493);\nmodule.exports.easing = __webpack_require__(540);\nmodule.exports.canvas = __webpack_require__(539);\nmodule.exports.options = __webpack_require__(541);\n\n\n/***/ }),\n\n/***/ 472:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(471);\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\n\n/***/ }),\n\n/***/ 479:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar color = __webpack_require__(501);\nvar helpers = __webpack_require__(471);\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n\n\n/***/ }),\n\n/***/ 480:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\nmodule.exports.Arc = __webpack_require__(535);\nmodule.exports.Line = __webpack_require__(536);\nmodule.exports.Point = __webpack_require__(537);\nmodule.exports.Rectangle = __webpack_require__(538);\n\n\n/***/ }),\n\n/***/ 483:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(471);\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n\n/***/ }),\n\n/***/ 484:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(471);\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 493:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\n/***/ }),\n\n/***/ 498:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(471);\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 499:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar helpers = __webpack_require__(471);\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n\n/***/ }),\n\n/***/ 500:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(471);\nvar basic = __webpack_require__(542);\nvar dom = __webpack_require__(543);\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n\n\n/***/ }),\n\n/***/ 501:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* MIT license */\nvar convert = __webpack_require__(556);\nvar string = __webpack_require__(554);\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n\n\n/***/ }),\n\n/***/ 502:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_chartjs__ = __webpack_require__(577);\n// LineChart.js\n\nvar reactiveProp = __WEBPACK_IMPORTED_MODULE_0_vue_chartjs__[\"a\" /* mixins */].reactiveProp;\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  extends: __WEBPACK_IMPORTED_MODULE_0_vue_chartjs__[\"b\" /* Line */],\n  mixins: [reactiveProp],\n  props: ['options'],\n  mounted: function mounted() {\n    this.renderChart(this.chartData, this.options);\n  }\n});\n\n/***/ }),\n\n/***/ 504:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__AnalyticsUsersChart__ = __webpack_require__(502);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_underscore__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_moment__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_vue__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_mixin__ = __webpack_require__(9);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n\n\nvar NotificationComponent = __WEBPACK_IMPORTED_MODULE_4_vue__[\"default\"].extend(__WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification___default.a);\n\nvar openNotification = function openNotification() {\n  var propsData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    title: '',\n    message: '',\n    type: '',\n    direction: '',\n    duration: 4500,\n    container: '.notifications'\n  };\n\n  return new NotificationComponent({\n    el: document.createElement('div'),\n    propsData: propsData\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  components: {\n    AnalyticsUsersChart: __WEBPACK_IMPORTED_MODULE_0__AnalyticsUsersChart__[\"a\" /* default */],\n    datepicker: __WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker___default.a\n  },\n  mixins: [__WEBPACK_IMPORTED_MODULE_6__services_mixin__[\"a\" /* default */]],\n  data: function data() {\n    return {\n      moment: __WEBPACK_IMPORTED_MODULE_2_moment___default.a,\n      rowDataList: {},\n      labelList: [],\n      backgroundColor_3: ['rgba(31, 200, 219, 1)', 'rgba(151, 205, 118, 1)'],\n      options_3: {\n        tooltips: {\n          mode: 'label'\n        }\n      },\n      dateRange: {},\n      constructionDate: '',\n      lineData: null,\n      bounceRateData: null,\n      avgSessionDurationData: null,\n      channelUserList: [],\n      completedCountData: null,\n      tabInfo: {\n        constructionData: false,\n        trafficData: false,\n        interestConstruction: true\n      },\n      constructionData: [],\n      interestConstruction: [],\n      constructionSales: 0\n    };\n  },\n\n\n  computed: {},\n  methods: {\n    queryReports: function queryReports() {\n      var _this = this;\n\n      // console.log(window.gapi.auth.signIn())\n      // Replace with your view ID.\n\n      window.gapi.client.init({\n        'clientId': '149704865346-ohiqqr8atn0fb4q1rttkelp693b20ea3.apps.googleusercontent.com',\n        'scope': 'https://www.googleapis.com/auth/analytics.readonly'\n      }).then(function () {\n        // Executes an API request, and returns a Promise.\n        // The method name `language.translations.list` comes from the API discovery.\n        var VIEW_ID = '136738850';\n        var GoogleAuth = window.gapi.auth2.getAuthInstance();\n        var isSigned = GoogleAuth.isSignedIn.get();\n        if (!isSigned) {\n          GoogleAuth.isSignedIn.listen(function (updateSigned) {\n            if (updateSigned) {\n              _this.queryReports();\n            }\n          });\n          GoogleAuth.signIn();\n          throw new Error('Not Signed');\n        } else {\n          return window.gapi.client.request({\n            path: '/v4/reports:batchGet',\n            root: 'https://analyticsreporting.googleapis.com/',\n            method: 'POST',\n            body: {\n              reportRequests: [{\n                viewId: VIEW_ID,\n                dateRanges: [{\n                  startDate: _this.dateRange.startDate,\n                  endDate: _this.dateRange.endDate\n                }],\n                metrics: [{\n                  expression: 'ga:users'\n                }, {\n                  expression: 'ga:bounceRate'\n                }, {\n                  expression: 'ga:avgSessionDuration',\n                  formattingType: 'TIME'\n                }, {\n                  expression: 'ga:goal1Completions'\n                }],\n                dimensions: [{\n                  name: 'ga:date'\n                }]\n              }]\n            }\n          });\n        }\n      }).then(function (response) {\n        var formattedJson = JSON.parse(JSON.stringify(response.result, null, 2));\n        var metricsList = ['ga:users', 'ga:bounceRate', 'ga:avgSessionDuration', 'ga:goal1Completions'];\n        var dataList = formattedJson.reports[0].data.rows;\n\n        var _loop = function _loop(i) {\n          var metrics = metricsList[i];\n          _this.rowDataList[metrics] = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.map(dataList, function (row) {\n            return row.metrics[0].values[i];\n          });\n          _this.labelList = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.map(dataList, function (row) {\n            return __WEBPACK_IMPORTED_MODULE_2_moment___default()(row.dimensions[0], 'YYYYMMDD').format('YYYY-MM-DD');\n          });\n        };\n\n        for (var i = 0; i < metricsList.length; i++) {\n          _loop(i);\n        }\n\n        _this.getSeriesData('lineData', 'ga:users');\n        _this.getSeriesData('bounceRateData', 'ga:bounceRate');\n        _this.getSeriesData('avgSessionDurationData', 'ga:avgSessionDuration');\n\n        return _this.$http.get('/api/webhook/channel/completed-list?start_date=' + _this.dateRange.startDate + '&end_date=' + _this.dateRange.endDate);\n      }).then(function (response) {\n        var dateDiff = __WEBPACK_IMPORTED_MODULE_2_moment___default()(_this.dateRange.endDate, 'YYYY-MM-DD').diff(__WEBPACK_IMPORTED_MODULE_2_moment___default()(_this.dateRange.startDate, 'YYYY-MM-Dd'), 'days');\n        var channelUserList = response.data.data.channel_list;\n\n        var _loop2 = function _loop2(i) {\n          var targetDate = __WEBPACK_IMPORTED_MODULE_2_moment___default()(_this.dateRange.startDate, 'YYYY-MM-DD').add(i, 'day').format('YYYY-MM-DD');\n          var hasTargetDate = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.find(channelUserList, function (item) {\n            return item.date === targetDate;\n          });\n          if (!hasTargetDate) {\n            channelUserList.push({\n              date: targetDate,\n              count: 0\n            });\n          }\n        };\n\n        for (var i = 0; i <= dateDiff; i++) {\n          _loop2(i);\n        }\n\n        _this.channelUserList = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.sortBy(channelUserList, function (item) {\n          return __WEBPACK_IMPORTED_MODULE_2_moment___default()(item.date, 'YYYY-MM-DD').format('X');\n        });\n        _this.getCompletedCountData();\n      }).catch(function (e) {\n        console.error(e);\n      });\n    },\n    changeTabs: function changeTabs(tabId) {\n      for (var i in this.tabInfo) {\n        this.tabInfo[i] = false;\n      }\n      this.tabInfo[tabId] = true;\n\n      switch (tabId) {\n        case 'constructionData':\n          this.getConstructionDashboardData();\n          break;\n        case 'interestConstruction':\n          this.getInterestConstruction();\n          break;\n        default:\n          break;\n      }\n    },\n    getSeriesData: function getSeriesData(basket, key) {\n      var data = {\n        labels: this.labelList\n      };\n      var dataSet = this.rowDataList[key];\n      if (!dataSet) {\n        return {\n          labels: this.labelList,\n          datasets: []\n        };\n      }\n      data.datasets = [{\n        data: __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.map(this.rowDataList[key], function (item) {\n          return parseInt(item, 10);\n        }),\n        label: key,\n        borderColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)'),\n        pointBackgroundColor: this.backgroundColor_3[0],\n        backgroundColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)')\n      }];\n      this[basket] = data;\n      this.$forceUpdate();\n    },\n    getCompletedCountData: function getCompletedCountData() {\n      var analyticsData = this.rowDataList['ga:goal1Completions'];\n\n      var data = {\n        labels: this.labelList\n      };\n\n      data.datasets = [];\n\n      data.datasets.push({\n        data: __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.map(analyticsData, function (item) {\n          return parseInt(item, 10);\n        }),\n        label: 'Google Analytics Completed User',\n        borderColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)'),\n        pointBackgroundColor: this.backgroundColor_3[0],\n        backgroundColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)')\n      });\n      data.datasets.push({\n        data: __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.map(this.channelUserList, function (item) {\n          return parseInt(item.count, 10);\n        }),\n        label: 'Channel Completed User',\n        borderColor: this.backgroundColor_3[1].replace(/1\\)$/, '.5)'),\n        pointBackgroundColor: this.backgroundColor_3[1],\n        backgroundColor: this.backgroundColor_3[1].replace(/1\\)$/, '.5)')\n      });\n\n      this.completedCountData = data;\n      this.$forceUpdate();\n    },\n    getConstructionDashboardData: function getConstructionDashboardData() {\n      var _this2 = this;\n\n      this.$http.get('/api/dashboard/construction?date=' + this.constructionDate).then(function (response) {\n        _this2.constructionData = response.data.data;\n        for (var i = 0; i < _this2.constructionData.length; i++) {\n          _this2.constructionData[i].checkList = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.groupBy(_this2.constructionData[i].checkList, 'cl_date');\n        }\n\n        return _this2.$http.get('/api/dashboard/construction/budget?date=' + _this2.constructionDate);\n      }).then(function (response) {\n        _this2.constructionSales = response.data.data.sales;\n      }).catch(function (e) {\n        console.error(e);\n      });\n    },\n    getInterestConstruction: function getInterestConstruction() {\n      var _this3 = this;\n\n      this.$http.get('/api/dashboard/construction/interested').then(function (response) {\n        _this3.interestConstruction = response.data.data;\n      });\n    },\n    updateInterestedStatus: function updateInterestedStatus(contract) {\n      var _this4 = this;\n\n      contract.interested = false;\n      this.$http.put('/api/estimate/' + contract.estimate_no, contract).then(function (response) {\n        console.log(response);\n        if (response.data.code === 200) {\n          openNotification({\n            message: '관심공사에서 삭제되었습니다.',\n            type: 'success',\n            duration: 1500\n          });\n        } else {\n          openNotification({\n            message: '관심공사에서 삭제하는 중 오류가 발생했습니다.',\n            type: 'danger',\n            duration: 1500\n          });\n        }\n        _this4.getInterestConstruction();\n      });\n    },\n    updateCheckListStatus: function updateCheckListStatus(id, item) {\n      var _this5 = this;\n\n      item.cl_date = __WEBPACK_IMPORTED_MODULE_2_moment___default()(item.cl_date, 'YYYY-MM-DD').format('X');\n      this.$http.put('/api/estimate/' + id + '/checklist/' + item.cl_pk, item).then(function (response) {\n        if (response.data.code !== 200) {\n          openNotification({\n            message: '시공일정 수정 중 이상이 발생하였습니다.',\n            type: 'danger',\n            duration: 1500\n          });\n          return;\n        }\n        openNotification({\n          message: '시공일정이 정상적으로 수정되었습니다.',\n          type: 'success',\n          duration: 1500\n        });\n        _this5.getConstructionDashboardData();\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this6 = this;\n\n    this.dateRange.startDate = __WEBPACK_IMPORTED_MODULE_2_moment___default()().add(-1, 'week').format('YYYY-MM-DD');\n    this.dateRange.endDate = __WEBPACK_IMPORTED_MODULE_2_moment___default()().add(-1, 'days').format('YYYY-MM-DD');\n\n    this.constructionDate = __WEBPACK_IMPORTED_MODULE_2_moment___default()().format('YYYY-MM-DD');\n    this.getInterestConstruction();\n    setTimeout(function () {\n      _this6.getConstructionDashboardData();\n    }, 10);\n  }\n});\n\n/***/ }),\n\n/***/ 512:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @namespace Chart\n */\nvar Chart = __webpack_require__(531)();\n\nChart.helpers = __webpack_require__(471);\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n__webpack_require__(530)(Chart);\n\nChart.defaults = __webpack_require__(472);\nChart.Element = __webpack_require__(479);\nChart.elements = __webpack_require__(480);\nChart.Interaction = __webpack_require__(498);\nChart.layouts = __webpack_require__(483);\nChart.platform = __webpack_require__(500);\nChart.plugins = __webpack_require__(499);\nChart.Ticks = __webpack_require__(484);\n\n__webpack_require__(527)(Chart);\n__webpack_require__(528)(Chart);\n__webpack_require__(529)(Chart);\n__webpack_require__(533)(Chart);\n__webpack_require__(532)(Chart);\n__webpack_require__(534)(Chart);\n\n__webpack_require__(550)(Chart);\n__webpack_require__(548)(Chart);\n__webpack_require__(549)(Chart);\n__webpack_require__(551)(Chart);\n__webpack_require__(552)(Chart);\n__webpack_require__(553)(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n__webpack_require__(520)(Chart);\n__webpack_require__(521)(Chart);\n__webpack_require__(522)(Chart);\n__webpack_require__(523)(Chart);\n__webpack_require__(524)(Chart);\n__webpack_require__(525)(Chart);\n__webpack_require__(526)(Chart);\n\n__webpack_require__(513)(Chart);\n__webpack_require__(514)(Chart);\n__webpack_require__(515)(Chart);\n__webpack_require__(516)(Chart);\n__webpack_require__(517)(Chart);\n__webpack_require__(518)(Chart);\n__webpack_require__(519)(Chart);\n\n// Loading built-it plugins\nvar plugins = __webpack_require__(544);\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n\n\n/***/ }),\n\n/***/ 513:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 514:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 515:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 516:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 517:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 518:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 519:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n\n\n/***/ }),\n\n/***/ 520:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar elements = __webpack_require__(480);\nvar helpers = __webpack_require__(471);\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 521:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar elements = __webpack_require__(480);\nvar helpers = __webpack_require__(471);\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 522:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar elements = __webpack_require__(480);\nvar helpers = __webpack_require__(471);\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 523:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar elements = __webpack_require__(480);\nvar helpers = __webpack_require__(471);\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 524:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar elements = __webpack_require__(480);\nvar helpers = __webpack_require__(471);\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 525:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar elements = __webpack_require__(480);\nvar helpers = __webpack_require__(471);\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 526:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n\n\n/***/ }),\n\n/***/ 527:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* global window: false */\n\n\nvar defaults = __webpack_require__(472);\nvar Element = __webpack_require__(479);\nvar helpers = __webpack_require__(471);\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n\n\n/***/ }),\n\n/***/ 528:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar helpers = __webpack_require__(471);\nvar Interaction = __webpack_require__(498);\nvar layouts = __webpack_require__(483);\nvar platform = __webpack_require__(500);\nvar plugins = __webpack_require__(499);\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n\n\n/***/ }),\n\n/***/ 529:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(471);\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n\n\n/***/ }),\n\n/***/ 530:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* global window: false */\n/* global document: false */\n\n\nvar color = __webpack_require__(501);\nvar defaults = __webpack_require__(472);\nvar helpers = __webpack_require__(471);\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\n\n/***/ }),\n\n/***/ 531:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n\n\n/***/ }),\n\n/***/ 532:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar Element = __webpack_require__(479);\nvar helpers = __webpack_require__(471);\nvar Ticks = __webpack_require__(484);\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 533:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar helpers = __webpack_require__(471);\nvar layouts = __webpack_require__(483);\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n\n\n/***/ }),\n\n/***/ 534:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar Element = __webpack_require__(479);\nvar helpers = __webpack_require__(471);\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n\n\n/***/ }),\n\n/***/ 535:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar Element = __webpack_require__(479);\nvar helpers = __webpack_require__(471);\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n\n\n/***/ }),\n\n/***/ 536:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar Element = __webpack_require__(479);\nvar helpers = __webpack_require__(471);\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\n\n/***/ }),\n\n/***/ 537:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar Element = __webpack_require__(479);\nvar helpers = __webpack_require__(471);\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n\n\n/***/ }),\n\n/***/ 538:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar Element = __webpack_require__(479);\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\n\n/***/ }),\n\n/***/ 539:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(493);\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n\n\n/***/ }),\n\n/***/ 540:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(493);\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n\n\n/***/ }),\n\n/***/ 541:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(493);\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 542:\n/***/ (function(module, exports) {\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\n\n/***/ }),\n\n/***/ 543:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n\n\nvar helpers = __webpack_require__(471);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n\n\n/***/ }),\n\n/***/ 544:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\nmodule.exports.filler = __webpack_require__(545);\nmodule.exports.legend = __webpack_require__(546);\nmodule.exports.title = __webpack_require__(547);\n\n\n/***/ }),\n\n/***/ 545:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n\n\nvar defaults = __webpack_require__(472);\nvar elements = __webpack_require__(480);\nvar helpers = __webpack_require__(471);\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 546:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar Element = __webpack_require__(479);\nvar helpers = __webpack_require__(471);\nvar layouts = __webpack_require__(483);\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 547:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar Element = __webpack_require__(479);\nvar helpers = __webpack_require__(471);\nvar layouts = __webpack_require__(483);\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 548:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n\n\n/***/ }),\n\n/***/ 549:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar helpers = __webpack_require__(471);\nvar Ticks = __webpack_require__(484);\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n\n\n/***/ }),\n\n/***/ 550:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(471);\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 551:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(471);\nvar Ticks = __webpack_require__(484);\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n\n\n/***/ }),\n\n/***/ 552:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(472);\nvar helpers = __webpack_require__(471);\nvar Ticks = __webpack_require__(484);\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n\n\n/***/ }),\n\n/***/ 553:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* global window: false */\n\n\nvar moment = __webpack_require__(0);\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = __webpack_require__(472);\nvar helpers = __webpack_require__(471);\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n\n\n/***/ }),\n\n/***/ 554:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* MIT license */\nvar colorNames = __webpack_require__(557);\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n\n\n/***/ }),\n\n/***/ 555:\n/***/ (function(module, exports) {\n\n/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n\n/***/ }),\n\n/***/ 556:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar conversions = __webpack_require__(555);\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n\n/***/ }),\n\n/***/ 557:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n/***/ }),\n\n/***/ 565:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(456)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".datepicker-view[data-v-a9e6891e]{margin-bottom:1rem}.datepicker-view .datepicker[data-v-a9e6891e]{width:auto;display:inline-block}.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:25vw}.construction-info-view .construction-wrapper[data-v-a9e6891e]{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.construction-info-view .construction-wrapper .construction-item[data-v-a9e6891e]{-ms-flex:0 0 25rem;flex:0 0 25rem;border:1px solid #dbdbdb;padding:.5rem;margin:.5rem}.interested-construction-view .subtitle[data-v-a9e6891e]{font-weight:500}.interested-construction-view .close-button[data-v-a9e6891e]{margin-bottom:.5rem}.interested-construction-view .close-button span[data-v-a9e6891e]{cursor:pointer;font-weight:700}.interested-construction-view .construction-wrapper[data-v-a9e6891e]{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.interested-construction-view .construction-wrapper .construction-item[data-v-a9e6891e]{-ms-flex:0 0 25rem;flex:0 0 25rem;border:1px solid #dbdbdb;padding:.5rem;margin:.5rem}.none-checklist-data[data-v-a9e6891e]{width:100%;min-height:15rem;text-align:center;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}@media screen and (max-width:999px){.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:auto}}@media screen and (max-width:768px){.construction-item[data-v-a9e6891e]{-ms-flex:0 0 100%!important;flex:0 0 100%!important;margin:0!important}}\", \"\", {\"version\":3,\"sources\":[\"/Users/ohw/WebstormProjects/admin.gridazip.com/frontend/client/views/dashboard/index.vue\"],\"names\":[],\"mappings\":\"AACA,kCAAkC,kBAAkB,CACnD,AACD,8CAA8C,WAAW,oBAAoB,CAC5E,AACD,mDAAmD,UAAU,CAC5D,AACD,+DAA+D,gBAAgB,qBAAqB,gBAAgB,CACnH,AACD,kFAAkF,mBAAmB,eAAe,yBAAyB,cAAe,YAAa,CACxK,AACD,yDAAyD,eAAe,CACvE,AACD,6DAA6D,mBAAoB,CAChF,AACD,kEAAkE,eAAe,eAAgB,CAChG,AACD,qEAAqE,gBAAgB,qBAAqB,gBAAgB,CACzH,AACD,wFAAwF,mBAAmB,eAAe,yBAAyB,cAAe,YAAa,CAC9K,AACD,sCAAsC,WAAW,iBAAiB,kBAAkB,oBAAoB,aAAa,sBAAsB,mBAAmB,qBAAqB,sBAAsB,CACxM,AACD,oCACA,mDAAmD,UAAU,CAC5D,CACA,AACD,oCACA,oCAAoC,4BAA6B,wBAAyB,kBAAmB,CAC5G,CACA\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.datepicker-view[data-v-a9e6891e]{margin-bottom:1rem\\n}\\n.datepicker-view .datepicker[data-v-a9e6891e]{width:auto;display:inline-block\\n}\\n.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:25vw\\n}\\n.construction-info-view .construction-wrapper[data-v-a9e6891e]{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap\\n}\\n.construction-info-view .construction-wrapper .construction-item[data-v-a9e6891e]{-ms-flex:0 0 25rem;flex:0 0 25rem;border:1px solid #dbdbdb;padding:0.5rem;margin:0.5rem\\n}\\n.interested-construction-view .subtitle[data-v-a9e6891e]{font-weight:500\\n}\\n.interested-construction-view .close-button[data-v-a9e6891e]{margin-bottom:0.5rem\\n}\\n.interested-construction-view .close-button span[data-v-a9e6891e]{cursor:pointer;font-weight:bold\\n}\\n.interested-construction-view .construction-wrapper[data-v-a9e6891e]{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap\\n}\\n.interested-construction-view .construction-wrapper .construction-item[data-v-a9e6891e]{-ms-flex:0 0 25rem;flex:0 0 25rem;border:1px solid #dbdbdb;padding:0.5rem;margin:0.5rem\\n}\\n.none-checklist-data[data-v-a9e6891e]{width:100%;min-height:15rem;text-align:center;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center\\n}\\n@media screen and (max-width: 999px){\\n.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:auto\\n}\\n}\\n@media screen and (max-width: 768px){\\n.construction-item[data-v-a9e6891e]{-ms-flex:0 0 100% !important;flex:0 0 100% !important;margin:0 !important\\n}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 574:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(565);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(457)(\"4402bb46\", content, true);\n\n/***/ }),\n\n/***/ 576:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"j\"] = generateChart;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Bar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return HorizontalBar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return Doughnut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return Line; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return Pie; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return PolarArea; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return Radar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return Bubble; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return Scatter; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_chart_js__ = __webpack_require__(512);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_chart_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_chart_js__);\n\nfunction generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new __WEBPACK_IMPORTED_MODULE_0_chart_js___default.a(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nvar Bar = generateChart('bar-chart', 'bar');\nvar HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nvar Doughnut = generateChart('doughnut-chart', 'doughnut');\nvar Line = generateChart('line-chart', 'line');\nvar Pie = generateChart('pie-chart', 'pie');\nvar PolarArea = generateChart('polar-chart', 'polarArea');\nvar Radar = generateChart('radar-chart', 'radar');\nvar Bubble = generateChart('bubble-chart', 'bubble');\nvar Scatter = generateChart('scatter-chart', 'scatter');\n/* unused harmony default export */ var _unused_webpack_default_export = ({\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n});\n\n/***/ }),\n\n/***/ 577:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export VueCharts */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_index_js__ = __webpack_require__(578);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__BaseCharts__ = __webpack_require__(576);\n/* unused harmony reexport Bar */\n/* unused harmony reexport HorizontalBar */\n/* unused harmony reexport Doughnut */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"d\"]; });\n/* unused harmony reexport Pie */\n/* unused harmony reexport PolarArea */\n/* unused harmony reexport Radar */\n/* unused harmony reexport Bubble */\n/* unused harmony reexport Scatter */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__mixins_index_js__[\"a\"]; });\n/* unused harmony reexport generateChart */\n\n\nvar VueCharts = {\n  Bar: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"a\" /* Bar */],\n  HorizontalBar: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"b\" /* HorizontalBar */],\n  Doughnut: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"c\" /* Doughnut */],\n  Line: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"d\" /* Line */],\n  Pie: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"e\" /* Pie */],\n  PolarArea: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"f\" /* PolarArea */],\n  Radar: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"g\" /* Radar */],\n  Bubble: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"h\" /* Bubble */],\n  Scatter: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"i\" /* Scatter */],\n  mixins: __WEBPACK_IMPORTED_MODULE_0__mixins_index_js__[\"a\" /* default */],\n  generateChart: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"j\" /* generateChart */],\n  render: function render() {\n    return console.error('[vue-chartjs]: This is not a vue component. It is the whole object containing all vue components. Please import the named export or access the components over the dot notation. For more info visit https://vue-chartjs.org/#/home?id=quick-start');\n  }\n};\n/* unused harmony default export */ var _unused_webpack_default_export = (VueCharts);\n\n\n/***/ }),\n\n/***/ 578:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export reactiveData */\n/* unused harmony export reactiveProp */\nfunction dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nvar reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nvar reactiveProp = {\n  props: {\n    chartData: {\n      required: true\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n});\n\n/***/ }),\n\n/***/ 586:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard\"\n  }, [_c('div', {\n    staticClass: \"tabs is-boxed\"\n  }, [_c('ul', [_c('li', {\n    class: {\n      'is-active': _vm.tabInfo.trafficData\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.changeTabs('trafficData')\n      }\n    }\n  }, [_c('a', [_vm._v(\"Dashboard\")])]), _vm._v(\" \"), _c('li', {\n    class: {\n      'is-active': _vm.tabInfo.interestConstruction\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.changeTabs('interestConstruction')\n      }\n    }\n  }, [_c('a', [_vm._v(\"관심공사목록\")])])])]), _vm._v(\" \"), (_vm.tabInfo.trafficData) ? _c('div', {\n    staticClass: \"traffic-data-view\"\n  }, [_c('div', {\n    staticClass: \"datepicker-view\"\n  }, [_c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m-d'\n      }\n    },\n    model: {\n      value: (_vm.dateRange.startDate),\n      callback: function($$v) {\n        _vm.$set(_vm.dateRange, \"startDate\", $$v)\n      },\n      expression: \"dateRange.startDate\"\n    }\n  }), _vm._v(\"\\n      ~\\n      \"), _c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m-d'\n      }\n    },\n    model: {\n      value: (_vm.dateRange.endDate),\n      callback: function($$v) {\n        _vm.$set(_vm.dateRange, \"endDate\", $$v)\n      },\n      expression: \"dateRange.endDate\"\n    }\n  }), _vm._v(\" \"), _c('button', {\n    staticClass: \"search-btn button\",\n    on: {\n      \"click\": _vm.queryReports\n    }\n  }, [_vm._v(\"조회\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"일별 사용자\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.lineData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"이탈율\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.bounceRateData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"세션 시간\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.avgSessionDurationData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent is-12\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('h4', {\n    staticClass: \"title\"\n  }, [_vm._v(\"일별 문의 건수\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"content\"\n  }, [_c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.completedCountData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)])])])]) : _vm._e(), _vm._v(\" \"), (_vm.tabInfo.constructionData) ? _c('div', {\n    staticClass: \"construction-info-view\"\n  }, [_c('div', {\n    staticClass: \"datepicker-view\"\n  }, [_c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m'\n      }\n    },\n    model: {\n      value: (_vm.constructionDate),\n      callback: function($$v) {\n        _vm.constructionDate = $$v\n      },\n      expression: \"constructionDate\"\n    }\n  }), _vm._v(\" \"), _c('button', {\n    staticClass: \"search-btn button\",\n    on: {\n      \"click\": _vm.getConstructionDashboardData\n    }\n  }, [_vm._v(\"조회\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"진행중인 공사 목록\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-info\"\n  }, [_c('p', [_vm._v(\"총 공사 건수: \" + _vm._s(_vm.constructionData.length) + \" 건\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-info\"\n  }, [_c('p', [_vm._v(\"총 매출: \" + _vm._s(_vm.addCommas(_vm.constructionSales)) + \" 만원\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-wrapper is-flex\"\n  }, _vm._l((_vm.constructionData), function(construction) {\n    return _c('div', {\n      staticClass: \"construction-item\"\n    }, [_c('h3', {\n      staticClass: \"subtitle\"\n    }, [_vm._v(_vm._s(construction.customer_name) + \" \" + _vm._s(construction.customer_nickname ? '(' + construction.customer_nickname + ')' : ''))]), _vm._v(\" \"), _c('div', {\n      staticClass: \"percentage-wrapper\"\n    }, [_c('span', {}, [_vm._v(\"진행율\")]), _vm._v(\" \"), _c('div', {\n      staticClass: \"doughnut\"\n    }, [_c('div', {\n      staticClass: \"progress-container is-flex\"\n    }, [_c('progress', {\n      staticClass: \"progress\",\n      attrs: {\n        \"max\": \"100\"\n      },\n      domProps: {\n        \"value\": construction.completedPercentage\n      }\n    })])])]), _vm._v(\" \"), (Object.keys(construction.checkList).length > 0) ? _c('div', {\n      staticClass: \"checklist\"\n    }, [_c('table', {\n      staticClass: \"table is-striped\"\n    }, [_vm._m(0, true), _vm._v(\" \"), _vm._l((construction.checkList), function(checkListByDate, index) {\n      return _c('tbody', [_c('tr', {\n        staticClass: \"date-header\"\n      }, [_c('th', {\n        attrs: {\n          \"colspan\": \"4\"\n        }\n      }, [_vm._v(_vm._s(index))])]), _vm._v(\" \"), _c('tr'), _vm._l((checkListByDate), function(checkListItem) {\n        return _c('tr', [_c('td', [_c('span', [_vm._v(_vm._s(checkListItem.ct_name))])]), _vm._v(\" \"), _c('td', [_c('input', {\n          directives: [{\n            name: \"model\",\n            rawName: \"v-model\",\n            value: (checkListItem.cl_resource),\n            expression: \"checkListItem.cl_resource\"\n          }],\n          staticClass: \"checkbox\",\n          attrs: {\n            \"type\": \"checkbox\"\n          },\n          domProps: {\n            \"checked\": Array.isArray(checkListItem.cl_resource) ? _vm._i(checkListItem.cl_resource, null) > -1 : (checkListItem.cl_resource)\n          },\n          on: {\n            \"change\": [function($event) {\n              var $$a = checkListItem.cl_resource,\n                $$el = $event.target,\n                $$c = $$el.checked ? (true) : (false);\n              if (Array.isArray($$a)) {\n                var $$v = null,\n                  $$i = _vm._i($$a, $$v);\n                if ($$el.checked) {\n                  $$i < 0 && (_vm.$set(checkListItem, \"cl_resource\", $$a.concat([$$v])))\n                } else {\n                  $$i > -1 && (_vm.$set(checkListItem, \"cl_resource\", $$a.slice(0, $$i).concat($$a.slice($$i + 1))))\n                }\n              } else {\n                _vm.$set(checkListItem, \"cl_resource\", $$c)\n              }\n            }, function($event) {\n              _vm.updateCheckListStatus(construction.pc_pk, checkListItem)\n            }]\n          }\n        })]), _vm._v(\" \"), _c('td', [_c('input', {\n          directives: [{\n            name: \"model\",\n            rawName: \"v-model\",\n            value: (checkListItem.cl_constructor),\n            expression: \"checkListItem.cl_constructor\"\n          }],\n          staticClass: \"checkbox\",\n          attrs: {\n            \"type\": \"checkbox\"\n          },\n          domProps: {\n            \"checked\": Array.isArray(checkListItem.cl_constructor) ? _vm._i(checkListItem.cl_constructor, null) > -1 : (checkListItem.cl_constructor)\n          },\n          on: {\n            \"change\": [function($event) {\n              var $$a = checkListItem.cl_constructor,\n                $$el = $event.target,\n                $$c = $$el.checked ? (true) : (false);\n              if (Array.isArray($$a)) {\n                var $$v = null,\n                  $$i = _vm._i($$a, $$v);\n                if ($$el.checked) {\n                  $$i < 0 && (_vm.$set(checkListItem, \"cl_constructor\", $$a.concat([$$v])))\n                } else {\n                  $$i > -1 && (_vm.$set(checkListItem, \"cl_constructor\", $$a.slice(0, $$i).concat($$a.slice($$i + 1))))\n                }\n              } else {\n                _vm.$set(checkListItem, \"cl_constructor\", $$c)\n              }\n            }, function($event) {\n              _vm.updateCheckListStatus(construction.pc_pk, checkListItem)\n            }]\n          }\n        })]), _vm._v(\" \"), _c('td', [_c('span', [_vm._v(_vm._s(checkListItem.cl_memo))])])])\n      })], 2)\n    })], 2)]) : _c('div', {\n      staticClass: \"none-checklist-data\"\n    }, [_c('span', [_vm._v(\"시공 현황이 없습니다.\")])])])\n  }))])])])]) : _vm._e(), _vm._v(\" \"), (_vm.tabInfo.interestConstruction) ? _c('div', {\n    staticClass: \"interested-construction-view\"\n  }, [_c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"관심있는 공사 목록\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-info\"\n  }, [_c('p', [_vm._v(\"총 공사 건수: \" + _vm._s(_vm.interestConstruction.length) + \" 건\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-wrapper is-flex\"\n  }, _vm._l((_vm.interestConstruction), function(construction) {\n    return _c('div', {\n      staticClass: \"construction-item\"\n    }, [_c('h3', {\n      staticClass: \"subtitle has-text-right close-button\"\n    }, [_c('span', {\n      on: {\n        \"click\": function($event) {\n          _vm.updateInterestedStatus(construction)\n        }\n      }\n    }, [_vm._v(\"X\")])]), _vm._v(\" \"), _c('h3', {\n      staticClass: \"subtitle\"\n    }, [_vm._v(_vm._s(construction.customer_name) + \" \" + _vm._s(construction.customer_nickname ? '(' + construction.customer_nickname + ')' : ''))]), _vm._v(\" \"), _c('div', {\n      staticClass: \"info-wrapper\"\n    }, [_c('label', {\n      staticClass: \"label\"\n    }, [_vm._v(\"공사일정\")]), _vm._v(\" \"), _c('p', {\n      staticClass: \"control\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(construction.construction_start_date !== null ? _vm.moment(construction.construction_start_date).format('YYYY-MM-DD') : '') + \" \" + _vm._s(construction.construction_start_date !== null || construction.moving_date !== null ? '~' : '-') + \" \" + _vm._s(construction.moving_date !== null ? _vm.moment(construction.moving_date).format('YYYY-MM-DD') : '') + \"\\n                \")]), _vm._v(\" \"), _c('label', {\n      staticClass: \"label\"\n    }, [_vm._v(\"계약금액\")]), _vm._v(\" \"), _c('p', {\n      staticClass: \"control\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(_vm.addCommas(construction.contractTotalCosts)) + \"원\\n                \")]), _vm._v(\" \"), _c('label', {\n      staticClass: \"label\"\n    }, [_vm._v(\"수금예정\")]), _vm._v(\" \"), _c('p', {\n      staticClass: \"control\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(_vm.addCommas(construction.collectSchedule)) + \"원\\n                \")]), _vm._v(\" \"), _c('label', {\n      staticClass: \"label\"\n    }, [_vm._v(\"수금액\")]), _vm._v(\" \"), _c('p', {\n      staticClass: \"control\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(_vm.addCommas(construction.collectBills)) + \"원\\n                \")]), _vm._v(\" \"), _c('label', {\n      staticClass: \"label\"\n    }, [_vm._v(\"미수금\")]), _vm._v(\" \"), _c('p', {\n      staticClass: \"control\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(_vm.addCommas(construction.collectSchedule - construction.collectBills < 0 ? 0 : construction.collectSchedule - construction.collectBills)) + \"원\\n                \")]), _vm._v(\" \"), _c('label', {\n      staticClass: \"label\"\n    }, [_vm._v(\"집행비용\")]), _vm._v(\" \"), _c('p', {\n      staticClass: \"control\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(_vm.addCommas(construction.receiptTotalCosts)) + \"원\\n                \")]), _vm._v(\" \"), _c('label', {\n      staticClass: \"label\"\n    }, [_vm._v(\"계약금액 대비 집행률\")]), _vm._v(\" \"), _c('p', {\n      staticClass: \"control\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(parseFloat(construction.receiptTotalCosts / construction.contractTotalCosts * 100).toFixed(2)) + \"%\\n                \")]), _vm._v(\" \"), _c('label', {\n      staticClass: \"label\"\n    }, [_vm._v(\"수금 대비 집행률\")]), _vm._v(\" \"), _c('p', {\n      staticClass: \"control\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(parseFloat(construction.receiptTotalCosts / construction.collectBills * 100).toFixed(2)) + \"%\\n                \")])])])\n  }))])])])]) : _vm._e()])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', [_c('th', [_vm._v(\"공사\")]), _vm._v(\" \"), _c('th', [_vm._v(\"자재\")]), _vm._v(\" \"), _c('th', [_vm._v(\"인력\")]), _vm._v(\" \"), _c('th', [_vm._v(\"메모\")])])])\n}]}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// assets/js/0.8319676f885b72387501.js","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-a9e6891e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!sass-loader?sourceMap!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a9e6891e\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* scopeId */\n  \"data-v-a9e6891e\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/views/dashboard/index.vue\n// module id = 463\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/helpers/index.js\n// module id = 471\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.defaults.js\n// module id = 472\n// module chunks = 0","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.element.js\n// module id = 479\n// module chunks = 0","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/index.js\n// module id = 480\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.layouts.js\n// module id = 483\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.ticks.js\n// module id = 484\n// module chunks = 0","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/helpers/helpers.core.js\n// module id = 493\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.interaction.js\n// module id = 498\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.plugins.js\n// module id = 499\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/platforms/platform.js\n// module id = 500\n// module chunks = 0","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color/index.js\n// module id = 501\n// module chunks = 0","// LineChart.js\nimport { Line, mixins } from 'vue-chartjs'\nconst { reactiveProp } = mixins\n\nexport default {\n  extends: Line,\n  mixins: [reactiveProp],\n  props: ['options'],\n  mounted () {\n    this.renderChart(this.chartData, this.options)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/views/dashboard/AnalyticsUsersChart.js","<template>\n  <div class=\"dashboard\">\n    <div class=\"tabs is-boxed\">\n      <ul>\n        <li @click=\"changeTabs('trafficData')\" :class=\"{'is-active': tabInfo.trafficData}\"><a>Dashboard</a></li>\n        <!--<li @click=\"changeTabs('constructionData')\" :class=\"{'is-active': tabInfo.constructionData}\" ><a>시공관리</a></li>-->\n        <li @click=\"changeTabs('interestConstruction')\" :class=\"{'is-active': tabInfo.interestConstruction}\" ><a>관심공사목록</a></li>\n      </ul>\n    </div>\n    <div class=\"traffic-data-view\" v-if=\"tabInfo.trafficData\">\n      <div class=\"datepicker-view\">\n        <datepicker v-model=\"dateRange.startDate\" class=\"datepicker\" :config=\"{dateFormat:'Y-m-d'}\"/>\n        ~\n        <datepicker v-model=\"dateRange.endDate\" class=\"datepicker\" :config=\"{dateFormat:'Y-m-d'}\"/>\n        <button class=\"search-btn button\" @click=\"queryReports\">조회</button>\n      </div>\n      <div class=\"tile is-ancestor\">\n        <div class=\"tile is-parent\">\n          <article class=\"tile is-child box\">\n            <p class=\"title\">일별 사용자</p>\n            <analytics-users-chart :chart-data=\"lineData\" :options=\"{maintainAspectRatio: false}\"></analytics-users-chart>\n          </article>\n        </div>\n        <div class=\"tile is-parent\">\n          <article class=\"tile is-child box\">\n            <p class=\"title\">이탈율</p>\n            <analytics-users-chart :chart-data=\"bounceRateData\" :options=\"{maintainAspectRatio: false}\"></analytics-users-chart>\n          </article>\n        </div>\n        <div class=\"tile is-parent\">\n          <article class=\"tile is-child box\">\n            <p class=\"title\">세션 시간</p>\n            <analytics-users-chart :chart-data=\"avgSessionDurationData\" :options=\"{maintainAspectRatio: false}\"></analytics-users-chart>\n          </article>\n        </div>\n      </div>\n\n      <div class=\"tile is-ancestor\">\n        <div class=\"tile is-parent is-12\">\n          <article class=\"tile is-child box\">\n            <h4 class=\"title\">일별 문의 건수</h4>\n            <div class=\"content\">\n              <analytics-users-chart :chart-data=\"completedCountData\" :options=\"{maintainAspectRatio: false}\"></analytics-users-chart>\n            </div>\n          </article>\n        </div>\n      </div>\n    </div>\n    <div class=\"construction-info-view\" v-if=\"tabInfo.constructionData\">\n      <div class=\"datepicker-view\">\n        <datepicker v-model=\"constructionDate\" class=\"datepicker\" :config=\"{dateFormat:'Y-m'}\"/>\n        <button class=\"search-btn button\" @click=\"getConstructionDashboardData\">조회</button>\n      </div>\n      <div class=\"tile is-ancestor\">\n        <div class=\"tile is-parent\">\n          <article class=\"tile is-child box\">\n            <p class=\"title\">진행중인 공사 목록</p>\n            <div class=\"construction-info\">\n              <p>총 공사 건수: {{constructionData.length}} 건</p>\n            </div>\n            <div class=\"construction-info\">\n              <p>총 매출: {{addCommas(constructionSales)}} 만원</p>\n            </div>\n            <div class=\"construction-wrapper is-flex\">\n              <div class=\"construction-item\" v-for=\"construction in constructionData\">\n                  <h3 class=\"subtitle\">{{construction.customer_name}} {{construction.customer_nickname?'('+construction.customer_nickname+')':''}}</h3>\n                  <div class=\"percentage-wrapper\">\n                    <span class=\"\">진행율</span>\n                    <div class=\"doughnut\">\n                      <div class=\"progress-container is-flex\">\n                        <progress :value=\"construction.completedPercentage\" max=\"100\" class=\"progress\"></progress>\n                      </div>\n                    </div>\n                  </div>\n                <div class=\"checklist\" v-if=\"Object.keys(construction.checkList).length > 0\">\n                  <table class=\"table is-striped\">\n                    <thead>\n                    <tr>\n                      <th>공사</th>\n                      <th>자재</th>\n                      <th>인력</th>\n                      <th>메모</th>\n                    </tr>\n                    </thead>\n                    <tbody v-for=\"(checkListByDate, index) in construction.checkList\">\n                    <tr class=\"date-header\">\n                      <th colspan=\"4\">{{index}}</th>\n                    </tr>\n                    <tr>\n                    <tr v-for=\"checkListItem in checkListByDate\">\n                      <td>\n                        <span>{{checkListItem.ct_name}}</span>\n                      </td>\n                      <td>\n                        <input type=\"checkbox\" class=\"checkbox\" v-model=\"checkListItem.cl_resource\" @change=\"updateCheckListStatus(construction.pc_pk, checkListItem)\" />\n                      </td>\n                      <td>\n                        <input type=\"checkbox\" class=\"checkbox\" v-model=\"checkListItem.cl_constructor\" @change=\"updateCheckListStatus(construction.pc_pk, checkListItem)\" />\n                      </td>\n                      <td>\n                        <span >{{checkListItem.cl_memo}}</span>\n                      </td>\n                    </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div class=\"none-checklist-data\" v-else>\n                  <span>시공 현황이 없습니다.</span>\n                </div>\n              </div>\n            </div>\n          </article>\n        </div>\n      </div>\n    </div>\n    <div class=\"interested-construction-view\" v-if=\"tabInfo.interestConstruction\">\n      <div class=\"tile is-ancestor\">\n        <div class=\"tile is-parent\">\n          <article class=\"tile is-child box\">\n            <p class=\"title\">관심있는 공사 목록</p>\n            <div class=\"construction-info\">\n              <p>총 공사 건수: {{interestConstruction.length}} 건</p>\n            </div>\n            <!--<div class=\"construction-info\">-->\n              <!--<p>총 매출: {{addCommas(constructionSales)}} 만원</p>-->\n            <!--</div>-->\n            <div class=\"construction-wrapper is-flex\">\n              <div class=\"construction-item\" v-for=\"construction in interestConstruction\">\n                <h3 class=\"subtitle has-text-right close-button\"><span @click=\"updateInterestedStatus(construction)\">X</span></h3>\n                <h3 class=\"subtitle\">{{construction.customer_name}} {{construction.customer_nickname?'('+construction.customer_nickname+')':''}}</h3>\n                <div class=\"info-wrapper\">\n                  <label class=\"label\">공사일정</label>\n                  <p class=\"control\">\n                    {{construction.construction_start_date !== null ? moment(construction.construction_start_date).format('YYYY-MM-DD') : ''}} {{construction.construction_start_date !== null || construction.moving_date !== null ? '~' : '-'}} {{construction.moving_date !== null ? moment(construction.moving_date).format('YYYY-MM-DD') : ''}}\n                  </p>\n                  <label class=\"label\">계약금액</label>\n                  <p class=\"control\">\n                    {{addCommas(construction.contractTotalCosts)}}원\n                  </p>\n                  <label class=\"label\">수금예정</label>\n                  <p class=\"control\">\n                    {{addCommas(construction.collectSchedule)}}원\n                  </p>\n                  <label class=\"label\">수금액</label>\n                  <p class=\"control\">\n                    {{addCommas(construction.collectBills)}}원\n                  </p>\n                  <label class=\"label\">미수금</label>\n                  <p class=\"control\">\n                    {{addCommas(construction.collectSchedule - construction.collectBills < 0 ? 0 : construction.collectSchedule - construction.collectBills)}}원\n                  </p>\n                  <label class=\"label\">집행비용</label>\n                  <p class=\"control\">\n                    {{addCommas(construction.receiptTotalCosts)}}원\n                  </p>\n                  <label class=\"label\">계약금액 대비 집행률</label>\n                  <p class=\"control\">\n                    {{parseFloat(construction.receiptTotalCosts / construction.contractTotalCosts * 100).toFixed(2)}}%\n                  </p>\n                  <label class=\"label\">수금 대비 집행률</label>\n                  <p class=\"control\">\n                    {{parseFloat(construction.receiptTotalCosts / construction.collectBills * 100).toFixed(2)}}%\n                  </p>\n                </div>\n              </div>\n            </div>\n          </article>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import AnalyticsUsersChart from './AnalyticsUsersChart'\n  import _ from 'underscore'\n  import moment from 'moment'\n  import datepicker from 'vue-bulma-datepicker'\n  import Vue from 'vue'\n  import Notification from 'vue-bulma-notification'\n  import mixin from '../../services/mixin'\n\n  const NotificationComponent = Vue.extend(Notification)\n\n  const openNotification = (propsData = {\n    title: '',\n    message: '',\n    type: '',\n    direction: '',\n    duration: 4500,\n    container: '.notifications'\n  }) => {\n    return new NotificationComponent({\n      el: document.createElement('div'),\n      propsData\n    })\n  }\n\n  export default {\n    components: {\n      AnalyticsUsersChart,\n      datepicker\n    },\n    mixins: [mixin],\n    data () {\n      return {\n        moment,\n        rowDataList: {},\n        labelList: [],\n        backgroundColor_3: [\n          'rgba(31, 200, 219, 1)',\n          'rgba(151, 205, 118, 1)'\n        ],\n        options_3: {\n          tooltips: {\n            mode: 'label'\n          }\n        },\n        dateRange: {},\n        constructionDate: '',\n        lineData: null,\n        bounceRateData: null,\n        avgSessionDurationData: null,\n        channelUserList: [],\n        completedCountData: null,\n        tabInfo: {\n          constructionData: false,\n          trafficData: false,\n          interestConstruction: true\n        },\n        constructionData: [],\n        interestConstruction: [],\n        constructionSales: 0\n      }\n    },\n\n    computed: {\n    },\n    methods: {\n      queryReports () {\n      // console.log(window.gapi.auth.signIn())\n      // Replace with your view ID.\n\n        window.gapi.client.init({\n          'clientId': '149704865346-ohiqqr8atn0fb4q1rttkelp693b20ea3.apps.googleusercontent.com',\n          'scope': 'https://www.googleapis.com/auth/analytics.readonly'\n        }).then(() => {\n          // Executes an API request, and returns a Promise.\n          // The method name `language.translations.list` comes from the API discovery.\n          const VIEW_ID = '136738850'\n          const GoogleAuth = window.gapi.auth2.getAuthInstance()\n          const isSigned = GoogleAuth.isSignedIn.get()\n          if (!isSigned) {\n            GoogleAuth.isSignedIn.listen((updateSigned) => {\n              if (updateSigned) {\n                this.queryReports()\n              }\n            })\n            GoogleAuth.signIn()\n            throw new Error('Not Signed')\n          } else {\n            return window.gapi.client.request({\n              path: '/v4/reports:batchGet',\n              root: 'https://analyticsreporting.googleapis.com/',\n              method: 'POST',\n              body: {\n                reportRequests: [\n                  {\n                    viewId: VIEW_ID,\n                    dateRanges: [\n                      {\n                        startDate: this.dateRange.startDate,\n                        endDate: this.dateRange.endDate\n                      }\n                    ],\n                    metrics: [\n                      {\n                        expression: 'ga:users'\n                      },\n                      {\n                        expression: 'ga:bounceRate'\n                      },\n                      {\n                        expression: 'ga:avgSessionDuration',\n                        formattingType: 'TIME'\n                      },\n                      {\n                        expression: 'ga:goal1Completions'\n                      }\n                    ],\n                    dimensions: [{\n                      name: 'ga:date'\n                    }]\n                  }\n                ]\n              }\n            })\n          }\n        })\n        .then((response) => {\n          const formattedJson = JSON.parse(JSON.stringify(response.result, null, 2))\n          const metricsList = ['ga:users', 'ga:bounceRate', 'ga:avgSessionDuration', 'ga:goal1Completions']\n          const dataList = formattedJson.reports[0].data.rows\n\n          for (let i = 0; i < metricsList.length; i++) {\n            const metrics = metricsList[i]\n            this.rowDataList[metrics] = _.map(dataList, (row) => {\n              return row.metrics[0].values[i]\n            })\n            this.labelList = _.map(dataList, (row) => {\n              return moment(row.dimensions[0], 'YYYYMMDD').format('YYYY-MM-DD')\n            })\n          }\n\n          this.getSeriesData('lineData', 'ga:users')\n          this.getSeriesData('bounceRateData', 'ga:bounceRate')\n          this.getSeriesData('avgSessionDurationData', 'ga:avgSessionDuration')\n\n          return this.$http.get(`/api/webhook/channel/completed-list?start_date=${this.dateRange.startDate}&end_date=${this.dateRange.endDate}`)\n        })\n        .then((response) => {\n          const dateDiff = moment(this.dateRange.endDate, 'YYYY-MM-DD').diff(moment(this.dateRange.startDate, 'YYYY-MM-Dd'), 'days')\n          const channelUserList = response.data.data.channel_list\n\n          for (let i = 0; i <= dateDiff; i++) {\n            const targetDate = moment(this.dateRange.startDate, 'YYYY-MM-DD').add(i, 'day').format('YYYY-MM-DD')\n            const hasTargetDate = _.find(channelUserList, (item) => {\n              return item.date === targetDate\n            })\n            if (!hasTargetDate) {\n              channelUserList.push({\n                date: targetDate,\n                count: 0\n              })\n            }\n          }\n\n          this.channelUserList = _.sortBy(channelUserList, (item) => {\n            return moment(item.date, 'YYYY-MM-DD').format('X')\n          })\n          this.getCompletedCountData()\n        })\n        .catch(e => {\n          console.error(e)\n        })\n      },\n      changeTabs (tabId) {\n        for (let i in this.tabInfo) {\n          this.tabInfo[i] = false\n        }\n        this.tabInfo[tabId] = true\n\n        switch (tabId) {\n          case 'constructionData':\n            this.getConstructionDashboardData()\n            break\n          case 'interestConstruction':\n            this.getInterestConstruction()\n            break\n          default:\n            break\n        }\n      },\n      getSeriesData (basket, key) {\n        let data = {\n          labels: this.labelList\n        }\n        const dataSet = this.rowDataList[key]\n        if (!dataSet) {\n          return {\n            labels: this.labelList,\n            datasets: []\n          }\n        }\n        data.datasets = [{\n          data: _.map(this.rowDataList[key], (item) => {\n            return parseInt(item, 10)\n          }),\n          label: key,\n          borderColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)'),\n          pointBackgroundColor: this.backgroundColor_3[0],\n          backgroundColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)')\n        }]\n        this[basket] = data\n        this.$forceUpdate()\n      },\n      getCompletedCountData () {\n        const analyticsData = this.rowDataList['ga:goal1Completions']\n\n        const data = {\n          labels: this.labelList\n        }\n\n        data.datasets = []\n\n        data.datasets.push({\n          data: _.map(analyticsData, (item) => {\n            return parseInt(item, 10)\n          }),\n          label: 'Google Analytics Completed User',\n          borderColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)'),\n          pointBackgroundColor: this.backgroundColor_3[0],\n          backgroundColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)')\n        })\n        data.datasets.push({\n          data: _.map(this.channelUserList, (item) => {\n            return parseInt(item.count, 10)\n          }),\n          label: 'Channel Completed User',\n          borderColor: this.backgroundColor_3[1].replace(/1\\)$/, '.5)'),\n          pointBackgroundColor: this.backgroundColor_3[1],\n          backgroundColor: this.backgroundColor_3[1].replace(/1\\)$/, '.5)')\n        })\n\n        this.completedCountData = data\n        this.$forceUpdate()\n      },\n      getConstructionDashboardData () {\n        this.$http.get(`/api/dashboard/construction?date=${this.constructionDate}`)\n          .then((response) => {\n            this.constructionData = response.data.data\n            for (let i = 0; i < this.constructionData.length; i++) {\n              this.constructionData[i].checkList = _.groupBy(this.constructionData[i].checkList, 'cl_date')\n            }\n\n            return this.$http.get(`/api/dashboard/construction/budget?date=${this.constructionDate}`)\n          })\n          .then((response) => {\n            this.constructionSales = response.data.data.sales\n          })\n          .catch((e) => {\n            console.error(e)\n          })\n      },\n      getInterestConstruction () {\n        this.$http.get(`/api/dashboard/construction/interested`)\n          .then(response => {\n            this.interestConstruction = response.data.data\n          })\n      },\n      updateInterestedStatus (contract) {\n        contract.interested = false\n        this.$http.put(`/api/estimate/${contract.estimate_no}`, contract)\n          .then(response => {\n            console.log(response)\n            if (response.data.code === 200) {\n              openNotification({\n                message: '관심공사에서 삭제되었습니다.',\n                type: 'success',\n                duration: 1500\n              })\n            } else {\n              openNotification({\n                message: '관심공사에서 삭제하는 중 오류가 발생했습니다.',\n                type: 'danger',\n                duration: 1500\n              })\n            }\n            this.getInterestConstruction()\n          })\n      },\n      updateCheckListStatus (id, item) {\n        item.cl_date = moment(item.cl_date, 'YYYY-MM-DD').format('X')\n        this.$http.put(`/api/estimate/${id}/checklist/${item.cl_pk}`, item)\n          .then((response) => {\n            if (response.data.code !== 200) {\n              openNotification({\n                message: '시공일정 수정 중 이상이 발생하였습니다.',\n                type: 'danger',\n                duration: 1500\n              })\n              return\n            }\n            openNotification({\n              message: '시공일정이 정상적으로 수정되었습니다.',\n              type: 'success',\n              duration: 1500\n            })\n            this.getConstructionDashboardData()\n          })\n      }\n    },\n    mounted () {\n      this.dateRange.startDate = moment().add(-1, 'week').format('YYYY-MM-DD')\n      this.dateRange.endDate = moment().add(-1, 'days').format('YYYY-MM-DD')\n\n      this.constructionDate = moment().format('YYYY-MM-DD')\n      this.getInterestConstruction()\n      setTimeout(() => {\n        this.getConstructionDashboardData()\n      }, 10)\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .datepicker-view {\n    margin-bottom: 1rem;\n    .datepicker {\n      width: auto;\n      display: inline-block;\n    }\n  }\n\n  .traffic-data-view {\n    .tile {\n      &.is-child {\n        width: 25vw;\n      }\n    }\n  }\n\n  .construction-info-view {\n    .construction-wrapper {\n      overflow-x: auto;\n      flex-wrap: nowrap;\n\n      .construction-item {\n        flex: 0 0 25rem;\n        border: 1px solid #dbdbdb;\n        padding: 0.5rem;\n        margin: 0.5rem;\n      }\n    }\n  }\n\n  .interested-construction-view {\n    .subtitle {\n      font-weight: 500;\n    }\n    .close-button {\n      span {\n        cursor: pointer;\n        font-weight: bold;\n      }\n      margin-bottom: 0.5rem;\n    }\n    .construction-wrapper {\n      overflow-x: auto;\n      flex-wrap: nowrap;\n\n      .construction-item {\n        flex: 0 0 25rem;\n        border: 1px solid #dbdbdb;\n        padding: 0.5rem;\n        margin: 0.5rem;\n      }\n    }\n  }\n\n  .none-checklist-data {\n    width: 100%;\n    min-height: 15rem;\n    text-align: center;\n    /* line-height: 1.1; */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  // mobile\n  @media screen and (max-width: 999px) {\n\n    .traffic-data-view {\n      .tile {\n        &.is-child {\n          width: auto;\n        }\n      }\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    .construction-item {\n      flex: 0 0 100% !important;\n      margin: 0 !important;\n    }\n  }\n</style>\n\n\n\n\n// WEBPACK FOOTER //\n// index.vue?1c792178","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Ticks = require('./core/core.ticks');\n\nrequire('./core/core.animation')(Chart);\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\nrequire('./core/core.scaleService')(Chart);\nrequire('./core/core.scale')(Chart);\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-it plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/chart.js\n// module id = 512\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Bar.js\n// module id = 513\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Bubble.js\n// module id = 514\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Doughnut.js\n// module id = 515\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Line.js\n// module id = 516\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.PolarArea.js\n// module id = 517\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Radar.js\n// module id = 518\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Scatter.js\n// module id = 519\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.bar.js\n// module id = 520\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.bubble.js\n// module id = 521\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.doughnut.js\n// module id = 522\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.line.js\n// module id = 523\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.polarArea.js\n// module id = 524\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.radar.js\n// module id = 525\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.scatter.js\n// module id = 526\n// module chunks = 0","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.animation.js\n// module id = 527\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.controller.js\n// module id = 528\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.datasetController.js\n// module id = 529\n// module chunks = 0","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.helpers.js\n// module id = 530\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.js\n// module id = 531\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.scale.js\n// module id = 532\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.scaleService.js\n// module id = 533\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.tooltip.js\n// module id = 534\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.arc.js\n// module id = 535\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.line.js\n// module id = 536\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.point.js\n// module id = 537\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.rectangle.js\n// module id = 538\n// module chunks = 0","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/helpers/helpers.canvas.js\n// module id = 539\n// module chunks = 0","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/helpers/helpers.easing.js\n// module id = 540\n// module chunks = 0","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/helpers/helpers.options.js\n// module id = 541\n// module chunks = 0","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/platforms/platform.basic.js\n// module id = 542\n// module chunks = 0","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/platforms/platform.dom.js\n// module id = 543\n// module chunks = 0","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/plugins/index.js\n// module id = 544\n// module chunks = 0","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/plugins/plugin.filler.js\n// module id = 545\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/plugins/plugin.legend.js\n// module id = 546\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/plugins/plugin.title.js\n// module id = 547\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.category.js\n// module id = 548\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.linear.js\n// module id = 549\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.linearbase.js\n// module id = 550\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.logarithmic.js\n// module id = 551\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.radialLinear.js\n// module id = 552\n// module chunks = 0","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.time.js\n// module id = 553\n// module chunks = 0","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color-string/color-string.js\n// module id = 554\n// module chunks = 0","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color/~/color-convert/conversions.js\n// module id = 555\n// module chunks = 0","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color/~/color-convert/index.js\n// module id = 556\n// module chunks = 0","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/color-name/index.js\n// module id = 557\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".datepicker-view[data-v-a9e6891e]{margin-bottom:1rem}.datepicker-view .datepicker[data-v-a9e6891e]{width:auto;display:inline-block}.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:25vw}.construction-info-view .construction-wrapper[data-v-a9e6891e]{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.construction-info-view .construction-wrapper .construction-item[data-v-a9e6891e]{-ms-flex:0 0 25rem;flex:0 0 25rem;border:1px solid #dbdbdb;padding:.5rem;margin:.5rem}.interested-construction-view .subtitle[data-v-a9e6891e]{font-weight:500}.interested-construction-view .close-button[data-v-a9e6891e]{margin-bottom:.5rem}.interested-construction-view .close-button span[data-v-a9e6891e]{cursor:pointer;font-weight:700}.interested-construction-view .construction-wrapper[data-v-a9e6891e]{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.interested-construction-view .construction-wrapper .construction-item[data-v-a9e6891e]{-ms-flex:0 0 25rem;flex:0 0 25rem;border:1px solid #dbdbdb;padding:.5rem;margin:.5rem}.none-checklist-data[data-v-a9e6891e]{width:100%;min-height:15rem;text-align:center;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}@media screen and (max-width:999px){.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:auto}}@media screen and (max-width:768px){.construction-item[data-v-a9e6891e]{-ms-flex:0 0 100%!important;flex:0 0 100%!important;margin:0!important}}\", \"\", {\"version\":3,\"sources\":[\"/Users/ohw/WebstormProjects/admin.gridazip.com/frontend/client/views/dashboard/index.vue\"],\"names\":[],\"mappings\":\"AACA,kCAAkC,kBAAkB,CACnD,AACD,8CAA8C,WAAW,oBAAoB,CAC5E,AACD,mDAAmD,UAAU,CAC5D,AACD,+DAA+D,gBAAgB,qBAAqB,gBAAgB,CACnH,AACD,kFAAkF,mBAAmB,eAAe,yBAAyB,cAAe,YAAa,CACxK,AACD,yDAAyD,eAAe,CACvE,AACD,6DAA6D,mBAAoB,CAChF,AACD,kEAAkE,eAAe,eAAgB,CAChG,AACD,qEAAqE,gBAAgB,qBAAqB,gBAAgB,CACzH,AACD,wFAAwF,mBAAmB,eAAe,yBAAyB,cAAe,YAAa,CAC9K,AACD,sCAAsC,WAAW,iBAAiB,kBAAkB,oBAAoB,aAAa,sBAAsB,mBAAmB,qBAAqB,sBAAsB,CACxM,AACD,oCACA,mDAAmD,UAAU,CAC5D,CACA,AACD,oCACA,oCAAoC,4BAA6B,wBAAyB,kBAAmB,CAC5G,CACA\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.datepicker-view[data-v-a9e6891e]{margin-bottom:1rem\\n}\\n.datepicker-view .datepicker[data-v-a9e6891e]{width:auto;display:inline-block\\n}\\n.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:25vw\\n}\\n.construction-info-view .construction-wrapper[data-v-a9e6891e]{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap\\n}\\n.construction-info-view .construction-wrapper .construction-item[data-v-a9e6891e]{-ms-flex:0 0 25rem;flex:0 0 25rem;border:1px solid #dbdbdb;padding:0.5rem;margin:0.5rem\\n}\\n.interested-construction-view .subtitle[data-v-a9e6891e]{font-weight:500\\n}\\n.interested-construction-view .close-button[data-v-a9e6891e]{margin-bottom:0.5rem\\n}\\n.interested-construction-view .close-button span[data-v-a9e6891e]{cursor:pointer;font-weight:bold\\n}\\n.interested-construction-view .construction-wrapper[data-v-a9e6891e]{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap\\n}\\n.interested-construction-view .construction-wrapper .construction-item[data-v-a9e6891e]{-ms-flex:0 0 25rem;flex:0 0 25rem;border:1px solid #dbdbdb;padding:0.5rem;margin:0.5rem\\n}\\n.none-checklist-data[data-v-a9e6891e]{width:100%;min-height:15rem;text-align:center;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center\\n}\\n@media screen and (max-width: 999px){\\n.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:auto\\n}\\n}\\n@media screen and (max-width: 768px){\\n.construction-item[data-v-a9e6891e]{-ms-flex:0 0 100% !important;flex:0 0 100% !important;margin:0 !important\\n}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-a9e6891e\",\"scoped\":true,\"hasInlineConfig\":true}!./~/sass-loader/lib/loader.js?sourceMap!./~/vue-loader/lib/selector.js?type=styles&index=0!./client/views/dashboard/index.vue\n// module id = 565\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-a9e6891e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../node_modules/sass-loader/lib/loader.js?sourceMap!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"4402bb46\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-a9e6891e\",\"scoped\":true,\"hasInlineConfig\":true}!./~/sass-loader/lib/loader.js?sourceMap!./~/vue-loader/lib/selector.js?type=styles&index=0!./client/views/dashboard/index.vue\n// module id = 574\n// module chunks = 0","import Chart from 'chart.js';\nexport function generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new Chart(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nexport var Bar = generateChart('bar-chart', 'bar');\nexport var HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nexport var Doughnut = generateChart('doughnut-chart', 'doughnut');\nexport var Line = generateChart('line-chart', 'line');\nexport var Pie = generateChart('pie-chart', 'pie');\nexport var PolarArea = generateChart('polar-chart', 'polarArea');\nexport var Radar = generateChart('radar-chart', 'radar');\nexport var Bubble = generateChart('bubble-chart', 'bubble');\nexport var Scatter = generateChart('scatter-chart', 'scatter');\nexport default {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-chartjs/es/BaseCharts.js\n// module id = 576\n// module chunks = 0","import mixins from './mixins/index.js';\nimport { Bar, HorizontalBar, Doughnut, Line, Pie, PolarArea, Radar, Bubble, Scatter, generateChart } from './BaseCharts';\nvar VueCharts = {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter,\n  mixins: mixins,\n  generateChart: generateChart,\n  render: function render() {\n    return console.error('[vue-chartjs]: This is not a vue component. It is the whole object containing all vue components. Please import the named export or access the components over the dot notation. For more info visit https://vue-chartjs.org/#/home?id=quick-start');\n  }\n};\nexport default VueCharts;\nexport { VueCharts, Bar, HorizontalBar, Doughnut, Line, Pie, PolarArea, Radar, Bubble, Scatter, mixins, generateChart };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-chartjs/es/index.js\n// module id = 577\n// module chunks = 0","function dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nexport var reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport var reactiveProp = {\n  props: {\n    chartData: {\n      required: true\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport default {\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-chartjs/es/mixins/index.js\n// module id = 578\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard\"\n  }, [_c('div', {\n    staticClass: \"tabs is-boxed\"\n  }, [_c('ul', [_c('li', {\n    class: {\n      'is-active': _vm.tabInfo.trafficData\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.changeTabs('trafficData')\n      }\n    }\n  }, [_c('a', [_vm._v(\"Dashboard\")])]), _vm._v(\" \"), _c('li', {\n    class: {\n      'is-active': _vm.tabInfo.interestConstruction\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.changeTabs('interestConstruction')\n      }\n    }\n  }, [_c('a', [_vm._v(\"관심공사목록\")])])])]), _vm._v(\" \"), (_vm.tabInfo.trafficData) ? _c('div', {\n    staticClass: \"traffic-data-view\"\n  }, [_c('div', {\n    staticClass: \"datepicker-view\"\n  }, [_c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m-d'\n      }\n    },\n    model: {\n      value: (_vm.dateRange.startDate),\n      callback: function($$v) {\n        _vm.$set(_vm.dateRange, \"startDate\", $$v)\n      },\n      expression: \"dateRange.startDate\"\n    }\n  }), _vm._v(\"\\n      ~\\n      \"), _c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m-d'\n      }\n    },\n    model: {\n      value: (_vm.dateRange.endDate),\n      callback: function($$v) {\n        _vm.$set(_vm.dateRange, \"endDate\", $$v)\n      },\n      expression: \"dateRange.endDate\"\n    }\n  }), _vm._v(\" \"), _c('button', {\n    staticClass: \"search-btn button\",\n    on: {\n      \"click\": _vm.queryReports\n    }\n  }, [_vm._v(\"조회\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"일별 사용자\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.lineData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"이탈율\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.bounceRateData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"세션 시간\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.avgSessionDurationData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent is-12\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('h4', {\n    staticClass: \"title\"\n  }, [_vm._v(\"일별 문의 건수\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"content\"\n  }, [_c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.completedCountData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)])])])]) : _vm._e(), _vm._v(\" \"), (_vm.tabInfo.constructionData) ? _c('div', {\n    staticClass: \"construction-info-view\"\n  }, [_c('div', {\n    staticClass: \"datepicker-view\"\n  }, [_c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m'\n      }\n    },\n    model: {\n      value: (_vm.constructionDate),\n      callback: function($$v) {\n        _vm.constructionDate = $$v\n      },\n      expression: \"constructionDate\"\n    }\n  }), _vm._v(\" \"), _c('button', {\n    staticClass: \"search-btn button\",\n    on: {\n      \"click\": _vm.getConstructionDashboardData\n    }\n  }, [_vm._v(\"조회\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"진행중인 공사 목록\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-info\"\n  }, [_c('p', [_vm._v(\"총 공사 건수: \" + _vm._s(_vm.constructionData.length) + \" 건\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-info\"\n  }, [_c('p', [_vm._v(\"총 매출: \" + _vm._s(_vm.addCommas(_vm.constructionSales)) + \" 만원\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-wrapper is-flex\"\n  }, _vm._l((_vm.constructionData), function(construction) {\n    return _c('div', {\n      staticClass: \"construction-item\"\n    }, [_c('h3', {\n      staticClass: \"subtitle\"\n    }, [_vm._v(_vm._s(construction.customer_name) + \" \" + _vm._s(construction.customer_nickname ? '(' + construction.customer_nickname + ')' : ''))]), _vm._v(\" \"), _c('div', {\n      staticClass: \"percentage-wrapper\"\n    }, [_c('span', {}, [_vm._v(\"진행율\")]), _vm._v(\" \"), _c('div', {\n      staticClass: \"doughnut\"\n    }, [_c('div', {\n      staticClass: \"progress-container is-flex\"\n    }, [_c('progress', {\n      staticClass: \"progress\",\n      attrs: {\n        \"max\": \"100\"\n      },\n      domProps: {\n        \"value\": construction.completedPercentage\n      }\n    })])])]), _vm._v(\" \"), (Object.keys(construction.checkList).length > 0) ? _c('div', {\n      staticClass: \"checklist\"\n    }, [_c('table', {\n      staticClass: \"table is-striped\"\n    }, [_vm._m(0, true), _vm._v(\" \"), _vm._l((construction.checkList), function(checkListByDate, index) {\n      return _c('tbody', [_c('tr', {\n        staticClass: \"date-header\"\n      }, [_c('th', {\n        attrs: {\n          \"colspan\": \"4\"\n        }\n      }, [_vm._v(_vm._s(index))])]), _vm._v(\" \"), _c('tr'), _vm._l((checkListByDate), function(checkListItem) {\n        return _c('tr', [_c('td', [_c('span', [_vm._v(_vm._s(checkListItem.ct_name))])]), _vm._v(\" \"), _c('td', [_c('input', {\n          directives: [{\n            name: \"model\",\n            rawName: \"v-model\",\n            value: (checkListItem.cl_resource),\n            expression: \"checkListItem.cl_resource\"\n          }],\n          staticClass: \"checkbox\",\n          attrs: {\n            \"type\": \"checkbox\"\n          },\n          domProps: {\n            \"checked\": Array.isArray(checkListItem.cl_resource) ? _vm._i(checkListItem.cl_resource, null) > -1 : (checkListItem.cl_resource)\n          },\n          on: {\n            \"change\": [function($event) {\n              var $$a = checkListItem.cl_resource,\n                $$el = $event.target,\n                $$c = $$el.checked ? (true) : (false);\n              if (Array.isArray($$a)) {\n                var $$v = null,\n                  $$i = _vm._i($$a, $$v);\n                if ($$el.checked) {\n                  $$i < 0 && (_vm.$set(checkListItem, \"cl_resource\", $$a.concat([$$v])))\n                } else {\n                  $$i > -1 && (_vm.$set(checkListItem, \"cl_resource\", $$a.slice(0, $$i).concat($$a.slice($$i + 1))))\n                }\n              } else {\n                _vm.$set(checkListItem, \"cl_resource\", $$c)\n              }\n            }, function($event) {\n              _vm.updateCheckListStatus(construction.pc_pk, checkListItem)\n            }]\n          }\n        })]), _vm._v(\" \"), _c('td', [_c('input', {\n          directives: [{\n            name: \"model\",\n            rawName: \"v-model\",\n            value: (checkListItem.cl_constructor),\n            expression: \"checkListItem.cl_constructor\"\n          }],\n          staticClass: \"checkbox\",\n          attrs: {\n            \"type\": \"checkbox\"\n          },\n          domProps: {\n            \"checked\": Array.isArray(checkListItem.cl_constructor) ? _vm._i(checkListItem.cl_constructor, null) > -1 : (checkListItem.cl_constructor)\n          },\n          on: {\n            \"change\": [function($event) {\n              var $$a = checkListItem.cl_constructor,\n                $$el = $event.target,\n                $$c = $$el.checked ? (true) : (false);\n              if (Array.isArray($$a)) {\n                var $$v = null,\n                  $$i = _vm._i($$a, $$v);\n                if ($$el.checked) {\n                  $$i < 0 && (_vm.$set(checkListItem, \"cl_constructor\", $$a.concat([$$v])))\n                } else {\n                  $$i > -1 && (_vm.$set(checkListItem, \"cl_constructor\", $$a.slice(0, $$i).concat($$a.slice($$i + 1))))\n                }\n              } else {\n                _vm.$set(checkListItem, \"cl_constructor\", $$c)\n              }\n            }, function($event) {\n              _vm.updateCheckListStatus(construction.pc_pk, checkListItem)\n            }]\n          }\n        })]), _vm._v(\" \"), _c('td', [_c('span', [_vm._v(_vm._s(checkListItem.cl_memo))])])])\n      })], 2)\n    })], 2)]) : _c('div', {\n      staticClass: \"none-checklist-data\"\n    }, [_c('span', [_vm._v(\"시공 현황이 없습니다.\")])])])\n  }))])])])]) : _vm._e(), _vm._v(\" \"), (_vm.tabInfo.interestConstruction) ? _c('div', {\n    staticClass: \"interested-construction-view\"\n  }, [_c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"관심있는 공사 목록\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-info\"\n  }, [_c('p', [_vm._v(\"총 공사 건수: \" + _vm._s(_vm.interestConstruction.length) + \" 건\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-wrapper is-flex\"\n  }, _vm._l((_vm.interestConstruction), function(construction) {\n    return _c('div', {\n      staticClass: \"construction-item\"\n    }, [_c('h3', {\n      staticClass: \"subtitle has-text-right close-button\"\n    }, [_c('span', {\n      on: {\n        \"click\": function($event) {\n          _vm.updateInterestedStatus(construction)\n        }\n      }\n    }, [_vm._v(\"X\")])]), _vm._v(\" \"), _c('h3', {\n      staticClass: \"subtitle\"\n    }, [_vm._v(_vm._s(construction.customer_name) + \" \" + _vm._s(construction.customer_nickname ? '(' + construction.customer_nickname + ')' : ''))]), _vm._v(\" \"), _c('div', {\n      staticClass: \"info-wrapper\"\n    }, [_c('label', {\n      staticClass: \"label\"\n    }, [_vm._v(\"공사일정\")]), _vm._v(\" \"), _c('p', {\n      staticClass: \"control\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(construction.construction_start_date !== null ? _vm.moment(construction.construction_start_date).format('YYYY-MM-DD') : '') + \" \" + _vm._s(construction.construction_start_date !== null || construction.moving_date !== null ? '~' : '-') + \" \" + _vm._s(construction.moving_date !== null ? _vm.moment(construction.moving_date).format('YYYY-MM-DD') : '') + \"\\n                \")]), _vm._v(\" \"), _c('label', {\n      staticClass: \"label\"\n    }, [_vm._v(\"계약금액\")]), _vm._v(\" \"), _c('p', {\n      staticClass: \"control\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(_vm.addCommas(construction.contractTotalCosts)) + \"원\\n                \")]), _vm._v(\" \"), _c('label', {\n      staticClass: \"label\"\n    }, [_vm._v(\"수금예정\")]), _vm._v(\" \"), _c('p', {\n      staticClass: \"control\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(_vm.addCommas(construction.collectSchedule)) + \"원\\n                \")]), _vm._v(\" \"), _c('label', {\n      staticClass: \"label\"\n    }, [_vm._v(\"수금액\")]), _vm._v(\" \"), _c('p', {\n      staticClass: \"control\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(_vm.addCommas(construction.collectBills)) + \"원\\n                \")]), _vm._v(\" \"), _c('label', {\n      staticClass: \"label\"\n    }, [_vm._v(\"미수금\")]), _vm._v(\" \"), _c('p', {\n      staticClass: \"control\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(_vm.addCommas(construction.collectSchedule - construction.collectBills < 0 ? 0 : construction.collectSchedule - construction.collectBills)) + \"원\\n                \")]), _vm._v(\" \"), _c('label', {\n      staticClass: \"label\"\n    }, [_vm._v(\"집행비용\")]), _vm._v(\" \"), _c('p', {\n      staticClass: \"control\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(_vm.addCommas(construction.receiptTotalCosts)) + \"원\\n                \")]), _vm._v(\" \"), _c('label', {\n      staticClass: \"label\"\n    }, [_vm._v(\"계약금액 대비 집행률\")]), _vm._v(\" \"), _c('p', {\n      staticClass: \"control\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(parseFloat(construction.receiptTotalCosts / construction.contractTotalCosts * 100).toFixed(2)) + \"%\\n                \")]), _vm._v(\" \"), _c('label', {\n      staticClass: \"label\"\n    }, [_vm._v(\"수금 대비 집행률\")]), _vm._v(\" \"), _c('p', {\n      staticClass: \"control\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(parseFloat(construction.receiptTotalCosts / construction.collectBills * 100).toFixed(2)) + \"%\\n                \")])])])\n  }))])])])]) : _vm._e()])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', [_c('th', [_vm._v(\"공사\")]), _vm._v(\" \"), _c('th', [_vm._v(\"자재\")]), _vm._v(\" \"), _c('th', [_vm._v(\"인력\")]), _vm._v(\" \"), _c('th', [_vm._v(\"메모\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-a9e6891e\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./client/views/dashboard/index.vue\n// module id = 586\n// module chunks = 0"],"sourceRoot":""}