{"version":3,"sources":["webpack:///assets/js/0.b8df34451c38509e4134.js","webpack:///./client/views/dashboard/index.vue","webpack:///./~/chart.js/src/helpers/index.js","webpack:///./~/chart.js/src/core/core.defaults.js","webpack:///./~/chart.js/src/core/core.element.js","webpack:///./~/chart.js/src/elements/index.js","webpack:///./~/chart.js/src/core/core.layouts.js","webpack:///./~/chart.js/src/core/core.ticks.js","webpack:///./~/chart.js/src/helpers/helpers.core.js","webpack:///./~/chart.js/src/core/core.interaction.js","webpack:///./~/chart.js/src/core/core.plugins.js","webpack:///./~/chart.js/src/platforms/platform.js","webpack:///./~/chartjs-color/index.js","webpack:///./client/views/dashboard/AnalyticsUsersChart.js","webpack:///index.vue","webpack:///./~/chart.js/src/chart.js","webpack:///./~/chart.js/src/charts/Chart.Bar.js","webpack:///./~/chart.js/src/charts/Chart.Bubble.js","webpack:///./~/chart.js/src/charts/Chart.Doughnut.js","webpack:///./~/chart.js/src/charts/Chart.Line.js","webpack:///./~/chart.js/src/charts/Chart.PolarArea.js","webpack:///./~/chart.js/src/charts/Chart.Radar.js","webpack:///./~/chart.js/src/charts/Chart.Scatter.js","webpack:///./~/chart.js/src/controllers/controller.bar.js","webpack:///./~/chart.js/src/controllers/controller.bubble.js","webpack:///./~/chart.js/src/controllers/controller.doughnut.js","webpack:///./~/chart.js/src/controllers/controller.line.js","webpack:///./~/chart.js/src/controllers/controller.polarArea.js","webpack:///./~/chart.js/src/controllers/controller.radar.js","webpack:///./~/chart.js/src/controllers/controller.scatter.js","webpack:///./~/chart.js/src/core/core.animation.js","webpack:///./~/chart.js/src/core/core.controller.js","webpack:///./~/chart.js/src/core/core.datasetController.js","webpack:///./~/chart.js/src/core/core.helpers.js","webpack:///./~/chart.js/src/core/core.js","webpack:///./~/chart.js/src/core/core.scale.js","webpack:///./~/chart.js/src/core/core.scaleService.js","webpack:///./~/chart.js/src/core/core.tooltip.js","webpack:///./~/chart.js/src/elements/element.arc.js","webpack:///./~/chart.js/src/elements/element.line.js","webpack:///./~/chart.js/src/elements/element.point.js","webpack:///./~/chart.js/src/elements/element.rectangle.js","webpack:///./~/chart.js/src/helpers/helpers.canvas.js","webpack:///./~/chart.js/src/helpers/helpers.easing.js","webpack:///./~/chart.js/src/helpers/helpers.options.js","webpack:///./~/chart.js/src/platforms/platform.basic.js","webpack:///./~/chart.js/src/platforms/platform.dom.js","webpack:///./~/chart.js/src/plugins/index.js","webpack:///./~/chart.js/src/plugins/plugin.filler.js","webpack:///./~/chart.js/src/plugins/plugin.legend.js","webpack:///./~/chart.js/src/plugins/plugin.title.js","webpack:///./~/chart.js/src/scales/scale.category.js","webpack:///./~/chart.js/src/scales/scale.linear.js","webpack:///./~/chart.js/src/scales/scale.linearbase.js","webpack:///./~/chart.js/src/scales/scale.logarithmic.js","webpack:///./~/chart.js/src/scales/scale.radialLinear.js","webpack:///./~/chart.js/src/scales/scale.time.js","webpack:///./~/chartjs-color-string/color-string.js","webpack:///./~/chartjs-color/~/color-convert/conversions.js","webpack:///./~/chartjs-color/~/color-convert/index.js","webpack:///./~/color-name/index.js","webpack:///./client/views/dashboard/index.vue?3586","webpack:///./client/views/dashboard/index.vue?6001","webpack:///./~/vue-chartjs/es/BaseCharts.js","webpack:///./~/vue-chartjs/es/index.js","webpack:///./~/vue-chartjs/es/mixins/index.js","webpack:///./client/views/dashboard/index.vue?6242"],"names":["webpackJsonp","426","module","exports","__webpack_require__","Component","437","easing","canvas","options","438","helpers","_set","scope","values","merge","this","443","interpolate","start","view","model","ease","i","ilen","key","actual","origin","target","type","c0","c1","keys","Object","length","hasOwnProperty","color","valid","mix","rgbString","isFinite","Element","configuration","extend","initialize","apply","arguments","prototype","hidden","pivot","me","_view","clone","_model","_start","transition","tooltipPosition","x","y","hasValue","isNumber","inherits","446","Arc","Line","Point","Rectangle","449","filterByPosition","array","position","where","v","sortByWeight","reverse","forEach","_tmpIndex_","sort","a","b","v0","v1","weight","defaults","addBox","chart","item","boxes","fullWidth","push","removeBox","layoutItem","index","indexOf","splice","configure","prop","props","update","width","height","getMinimumBoxSize","box","minSize","isHorizontal","chartWidth","maxChartAreaWidth","horizontalBoxHeight","maxChartAreaHeight","verticalBoxWidth","minBoxSizes","horizontal","fitBox","minBoxSize","findNextWhere","minBox","scaleMargin","left","Math","max","totalLeftBoxesWidth","maxHorizontalLeftPadding","right","totalRightBoxesWidth","maxHorizontalRightPadding","top","bottom","chartHeight","finalFitVerticalBox","totalTopBoxesHeight","totalBottomBoxesHeight","placeBox","leftPadding","rightPadding","layoutOptions","layout","padding","toPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaWidth","chartAreaHeight","each","concat","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","chartArea","450","formatters","value","isArray","linear","tickValue","ticks","delta","abs","floor","logDelta","log10","tickString","numDecimal","min","toFixed","logarithmic","remain","pow","toExponential","460","noop","uid","id","isNullOrUndef","Array","toString","call","isObject","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","args","thisArg","loopable","len","arrayEquals","a0","a1","source","map","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","471","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","datasets","data","isDatasetVisible","getDatasetMeta","element","skip","getIntersectItems","elements","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","dataset","datasetIndex","_index","modes","single","slice","label","_datasetIndex","x-axis","point","nearest","sizeA","getArea","sizeB","ret","intersectsItem","inXRange","inYRange","472","plugins","_plugins","_cacheId","register","p","plugin","unregister","idx","clear","count","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","config","opts","global","_invalidate","473","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","474","convert","string","Color","obj","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","undefined","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mixinColor","color1","w1","w2","toJSON","result","console","error","spaces","maxes","getValues","space","charAt","chans","capped","round","sname","svalues","window","475","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_vue_chartjs__","reactiveProp","extends","mixins","mounted","renderChart","chartData","478","defineProperty","__WEBPACK_IMPORTED_MODULE_0__AnalyticsUsersChart__","__WEBPACK_IMPORTED_MODULE_1_underscore__","__WEBPACK_IMPORTED_MODULE_1_underscore___default","n","__WEBPACK_IMPORTED_MODULE_2_moment__","__WEBPACK_IMPORTED_MODULE_2_moment___default","__WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker__","__WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker___default","__WEBPACK_IMPORTED_MODULE_4_vue__","__WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification__","__WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification___default","__WEBPACK_IMPORTED_MODULE_6__services_mixin__","NotificationComponent","openNotification","propsData","title","message","direction","duration","container","el","document","createElement","components","AnalyticsUsersChart","datepicker","rowDataList","labelList","backgroundColor_3","options_3","tooltips","mode","dateRange","constructionDate","lineData","bounceRateData","avgSessionDurationData","channelUserList","completedCountData","tabInfo","constructionData","trafficData","constructionSales","computed","methods","queryReports","_this","gapi","client","init","clientId","then","GoogleAuth","auth2","getAuthInstance","isSignedIn","get","request","path","root","body","reportRequests","viewId","dateRanges","startDate","endDate","metrics","expression","formattingType","dimensions","name","listen","updateSigned","signIn","Error","response","formattedJson","JSON","parse","stringify","metricsList","dataList","reports","rows","row","format","getSeriesData","$http","dateDiff","diff","channel_list","targetDate","add","find","date","sortBy","log","getCompletedCountData","catch","changeTabs","tabId","getConstructionDashboardData","basket","labels","parseInt","borderColor","replace","pointBackgroundColor","backgroundColor","$forceUpdate","analyticsData","_this2","checkList","groupBy","sales","updateCheckListStatus","_this3","cl_date","put","cl_pk","code","_this4","setTimeout","491","Chart","Interaction","layouts","platform","Ticks","Legend","legend","_element","Title","pluginService","PluginBase","canvasHelpers","layoutService","492","Bar","context","493","Bubble","494","Doughnut","495","496","PolarArea","497","Radar","498","Scatter","499","computeMinSampleSize","scale","pixels","prev","curr","getTicks","getPixelForTick","computeFitCategoryTraits","ruler","size","thickness","barThickness","stackCount","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","next","percent","end","hover","scales","xAxes","offset","gridLines","offsetGridLines","yAxes","rectangle","borderSkipped","callbacks","yLabel","xLabel","controllers","bar","DatasetController","dataElementType","getMeta","stack","getDataset","reset","rects","_ruler","getRuler","updateElement","custom","rectangleOptions","_xScale","getScaleForId","xAxisID","_yScale","yAxisID","datasetLabel","borderWidth","updateElementGeometry","vscale","getValueScale","base","getBasePixel","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","last","stacked","stacks","getStackCount","getStackIndex","getPixelForValue","imeta","ivalue","getRightValue","controller","range","stackIndex","maxBarThickness","Infinity","draw","clipArea","ctx","isNaN","unclipArea","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","rectangleElementOptions","horizontalBar","500","dataPoint","bubble","points","xScale","yScale","_resolveElementOptions","dsIndex","getPixelForDecimal","NaN","_options","hitRadius","pointStyle","radius","hoverRadius","resolve","dataIndex","501","animation","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arc","arcOpts","fillStyle","strokeStyle","lineWidth","onClick","legendItem","cutoutPercentage","rotation","PI","circumference","tooltipItem","dataLabel","doughnut","pie","linkScales","getRingIndex","ringIndex","availableWidth","availableHeight","startAngle","endAngle","cos","sin","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","_chart","502","showLines","spanGaps","lineEnabled","showLine","line","datasetElementType","lineElementOptions","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","capControlPoint","pt","controlPoints","area","filter","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","503","angleLines","display","circular","pointLabels","beginAtZero","polarArea","countVisibleElements","xCenter","yCenter","visibleCount","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","504","radar","_loop","pointElementOptions","pointPosition","getPointPositionForValue","505","scatter","506","onProgress","onComplete","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","set","507","initConfig","configMerge","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","tooltip","positionIsHorizontal","types","instances","construct","aspectRatio","_bufferedRender","retinaScale","devicePixelRatio","bindEvents","responsive","resize","initToolTip","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","style","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","reduce","dtype","dposition","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","ControllerClass","resetElements","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","effects","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","destroy","unbindEvents","toBase64Image","toDataURL","Tooltip","_chartInstance","listeners","_listeners","listener","eventHandler","events","updateHoverStyle","enabled","changed","handleEvent","bufferedRequest","animationDuration","hoverOptions","active","onHover","Controller","508","listenArrayEvents","_chartjs","configurable","enumerable","arrayEvents","toUpperCase","res","object","unlistenArrayEvents","stub","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","resyncElements","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","509","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","getScaleDefaults","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distanceBetweenPoints","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","t","current","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","loop","niceNum","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","clientWidth","cw","clientHeight","h","ch","property","currentStyle","getPropertyValue","forceRatio","pixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","defaultColor","colorValue","CanvasPattern","510","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","511","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","computeTextSize","tick","parseFontOptions","globalDefaults","fontSize","family","parseLineHeight","toLineHeight","Scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","scaleLabelLineHeight","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","shouldSkip","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","save","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","512","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","513","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getTooltipSize","combinedBodyLength","bodyItem","before","lines","after","titleLineCount","footerLineCount","widthPadding","maxLineWidth","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","vm","alignment","paddingAndSize","radiusAndPadding","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","existingModel","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","quadraticCurveTo","closePath","hasTooltipContent","average","pos","eventPosition","nearestElement","d","tp","514","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","515","currentVM","globalOptionLineElements","lastDrawnIndex","lineCap","516","xRange","yRange","drawPoint","517","isVertical","getBarBounds","halfWidth","halfHeight","cornerAt","corners","startCorner","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","borders","corner","bounds","518","clearRect","roundedRect","rx","ry","rect","edgeLength","xOffset","yOffset","drawImage","SQRT2","leftX","topY","sideSize","clip","flip","bezierCurveTo","drawRoundedRectangle","519","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","520","matches","match","inputs","521","getContext","522","readUsedSize","initCanvas","renderHeight","getAttribute","renderWidth","EXPANDO_KEY","initial","displayWidth","displayHeight","eventListenerOptions","createEvent","nativeEvent","fromNativeEvent","event","EVENT_TYPES","throttled","ticking","createResizer","resizer","cls","CSS_PREFIX","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","watchForRender","expando","proxy","renderProxy","animationName","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","reflow","offsetParent","classList","CSS_RENDER_MONITOR","unwatchForRender","remove","addResizeListener","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","supportsEventListenerOptions","supports","passive","keyframes","getElementById","removeAttribute","proxies","addEvent","removeEvent","523","filler","524","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","propagate","visited","visible","createMapper","mappers","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","span","boundary","afterDatasetsUpdate","$filler","beforeDatasetDraw","525","getBoxWidth","labelOpts","usePointStyle","boxWidth","createNewLegendAndAttach","legendOpts","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","drawLegendBox","isLineWidthZero","offSet","halfFontSize","xLeft","yMiddle","lh","hitBox","beforeInit","afterEvent","526","createNewTitleBlockAndAttach","titleOpts","titleBlock","textSize","titleX","titleY","titleFont","527","defaultConfig","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","528","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","ceil","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","529","generateTicks","generationOptions","dataRange","spacing","stepSize","niceRange","niceMin","niceMax","numSpaces","precision","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","fixedStepSize","530","exp","significand","tickVal","endExp","endSignificand","minNotZero","lastTick","LogarithmicScale","tickValues","_getFirstTickValue","firstTickValue","531","getValueCount","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","fitWithPointLabels","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","drawingArea","setCenterPoint","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","param","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","LinearRadialScale","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","scalingFactor","distanceFromCenter","thisAngle","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","532","sorter","arrayUnique","hash","out","buildLookupTable","timestamps","distribution","time","table","lookup","mid","i0","i1","lo","hi","skey","tkey","momentify","parser","moment","input","startOf","valueOf","determineStepSize","unit","capacity","factor","interval","INTERVALS","milliseconds","steps","determineUnitForAutoTicks","minUnit","UNITS","MAX_INTEGER","common","determineUnitForFormatting","as","determineMajorUnit","generate","timeOpts","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","computeOffsets","upper","lower","ticksFromTimestamps","majorUnit","determineLabelFormat","momentDate","hasTime","millisecond","second","minute","hour","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","day","week","month","quarter","year","displayFormat","displayFormats","TimeScale","warn","timestamp","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","_majorUnit","_offsets","_labelFormat","tooltipFormat","tickFormatFunction","formatOverride","formats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","exampleTime","exampleLabel","533","abbr","hex","rgba","per","colorNames","getRgb","getHsl","hsla","getAlpha","hexDouble","percentaString","reverseNames","num","str","534","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","m","rgb2keyword","reverseKeywords","rgb2xyz","rgb2lab","xyz","z","rgb2lch","lab2lch","hsl2rgb","t1","t2","t3","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","f","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","wh","bl","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","hr","lab2rgb","lch2lab","lch","lch2xyz","lch2rgb","keyword2rgb","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","535","conversions","Converter","func","arg","pair","exec","from","to","convs","routeSpace","fspace","537","546","version","names","mappings","file","sourcesContent","sourceRoot","556","content","locals","565","generateChart","chartId","chartType","styles","class","cssClasses","attrs","ref","default","String","addPlugin","$data","__WEBPACK_IMPORTED_MODULE_0_chart_js___default","$refs","beforeDestroy","HorizontalBar","Pie","__WEBPACK_IMPORTED_MODULE_0_chart_js__","566","__WEBPACK_IMPORTED_MODULE_0__mixins_index_js__","__WEBPACK_IMPORTED_MODULE_1__BaseCharts__","567","dataHandler","newData","oldData","newDatasetLabels","oldDatasetLabels","oldLabels","oldDatasetKeys","newDatasetKeys","deletionKey","attribute","$emit","reactiveData","watch","required","583","_vm","_h","$createElement","_c","_self","staticClass","is-active","on","click","$event","_v","dateFormat","$$v","_s","addCommas","_l","construction","pc_name","domProps","completedPercentage","_m","checkListByDate","colspan","checkListItem","ct_name","directives","rawName","checked","cl_resource","_i","change","$$a","$$el","$$c","$$i","$set","pc_pk","cl_constructor","cl_memo","_e","chart-data","staticRenderFns"],"mappings":"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AC,WACAC,cAEAC,WACAC,WACAC,WACAC,WACAC,eAEAY,cACAE,cACAC,cACAC,cACAC,eACAC,cACAC,cAEAlB,UACAC,UACAC,UAEAC,UACAG,UACApC,UAEAqC,UACAE,UACAC,UAyeA,IAAAE,IACAO,WAAA,aACAC,cAAA,aACAC,MAAA,WACAC,YAAA,aACAC,OAAA,aACAC,OAAA,aACAC,QAAA,aACAjkD,OAAA,OACAkkD,gBAAA,aACAzkD,MAAA,SACA0kD,YAAA,YACAC,OAAA,WACAC,WAAA,aACAC,WAAA,YACAC,YAAA,WACAC,WAAA,YACAC,OAAA,YACAC,gBAAA,aACAC,UAAA,aACAC,SAAA,WACAhmD,MAAA,WACAimD,UAAA,SACAC,UAAA,WACAC,eAAA,YACAC,UAAA,aACAC,WAAA,SACAC,UAAA,aACAC,WAAA,aACAC,aAAA,WACAC,gBAAA,WACAC,YAAA,WACAC,YAAA,YACAC,SAAA,SACAC,YAAA,aACAC,cAAA,aACAC,eAAA,WACAC,eAAA,UACAC,eAAA,UACAC,eAAA,WACAC,YAAA,WACAC,UAAA,YACAC,aAAA,WACAC,SAAA,aACAC,SAAA,aACAC,YAAA,YACAC,WAAA,WACAC,aAAA,aACAC,aAAA,WACAC,SAAA,WACAC,WAAA,aACAC,YAAA,aACAC,MAAA,WACAC,WAAA,YACAC,MAAA,aACArnD,OAAA,SACAsnD,aAAA,YACAC,MAAA,aACAC,UAAA,aACAC,SAAA,aACAC,WAAA,WACAC,QAAA,UACAC,OAAA,aACAC,OAAA,aACAC,UAAA,aACAC,eAAA,aACAC,WAAA,WACAC,cAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,sBAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,WAAA,aACAC,aAAA,aACAC,eAAA,YACAC,cAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,aACAC,MAAA,SACAC,WAAA,WACAC,OAAA,aACA7oD,SAAA,WACA8oD,QAAA,SACAC,kBAAA,aACAC,YAAA,SACAC,cAAA,YACAC,cAAA,aACAC,gBAAA,YACAC,iBA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","file":"assets/js/0.b8df34451c38509e4134.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 426:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(556)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(478),\n  /* template */\n  __webpack_require__(583),\n  /* scopeId */\n  \"data-v-a9e6891e\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 437:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(460);\nmodule.exports.easing = __webpack_require__(519);\nmodule.exports.canvas = __webpack_require__(518);\nmodule.exports.options = __webpack_require__(520);\n\n\n/***/ }),\n\n/***/ 438:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(437);\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\n\n/***/ }),\n\n/***/ 443:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar color = __webpack_require__(474);\nvar helpers = __webpack_require__(437);\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n\n\n/***/ }),\n\n/***/ 446:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\nmodule.exports.Arc = __webpack_require__(514);\nmodule.exports.Line = __webpack_require__(515);\nmodule.exports.Point = __webpack_require__(516);\nmodule.exports.Rectangle = __webpack_require__(517);\n\n\n/***/ }),\n\n/***/ 449:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(437);\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n\n/***/ }),\n\n/***/ 450:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(437);\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 460:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\n/***/ }),\n\n/***/ 471:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(437);\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 472:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar helpers = __webpack_require__(437);\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n\n/***/ }),\n\n/***/ 473:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(437);\nvar basic = __webpack_require__(521);\nvar dom = __webpack_require__(522);\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n\n\n/***/ }),\n\n/***/ 474:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* MIT license */\nvar convert = __webpack_require__(535);\nvar string = __webpack_require__(533);\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n\n\n/***/ }),\n\n/***/ 475:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_chartjs__ = __webpack_require__(566);\n// LineChart.js\n\nvar reactiveProp = __WEBPACK_IMPORTED_MODULE_0_vue_chartjs__[\"a\" /* mixins */].reactiveProp;\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  extends: __WEBPACK_IMPORTED_MODULE_0_vue_chartjs__[\"b\" /* Line */],\n  mixins: [reactiveProp],\n  props: ['options'],\n  mounted: function mounted() {\n    this.renderChart(this.chartData, this.options);\n  }\n});\n\n/***/ }),\n\n/***/ 478:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__AnalyticsUsersChart__ = __webpack_require__(475);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_underscore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_underscore__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_moment__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_vue__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_mixin__ = __webpack_require__(9);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n\n\nvar NotificationComponent = __WEBPACK_IMPORTED_MODULE_4_vue__[\"default\"].extend(__WEBPACK_IMPORTED_MODULE_5_vue_bulma_notification___default.a);\n\nvar openNotification = function openNotification() {\n  var propsData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    title: '',\n    message: '',\n    type: '',\n    direction: '',\n    duration: 4500,\n    container: '.notifications'\n  };\n\n  return new NotificationComponent({\n    el: document.createElement('div'),\n    propsData: propsData\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  components: {\n    AnalyticsUsersChart: __WEBPACK_IMPORTED_MODULE_0__AnalyticsUsersChart__[\"a\" /* default */],\n    datepicker: __WEBPACK_IMPORTED_MODULE_3_vue_bulma_datepicker___default.a\n  },\n  mixins: [__WEBPACK_IMPORTED_MODULE_6__services_mixin__[\"a\" /* default */]],\n  data: function data() {\n    return {\n      rowDataList: {},\n      labelList: [],\n      backgroundColor_3: ['rgba(31, 200, 219, 1)', 'rgba(151, 205, 118, 1)'],\n      options_3: {\n        tooltips: {\n          mode: 'label'\n        }\n      },\n      dateRange: {},\n      constructionDate: '',\n      lineData: null,\n      bounceRateData: null,\n      avgSessionDurationData: null,\n      channelUserList: [],\n      completedCountData: null,\n      tabInfo: {\n        constructionData: false,\n        trafficData: true\n      },\n      constructionData: [],\n      constructionSales: 0\n    };\n  },\n\n\n  computed: {},\n  methods: {\n    queryReports: function queryReports() {\n      var _this = this;\n\n      // console.log(window.gapi.auth.signIn())\n      // Replace with your view ID.\n\n      window.gapi.client.init({\n        'clientId': '149704865346-ohiqqr8atn0fb4q1rttkelp693b20ea3.apps.googleusercontent.com',\n        'scope': 'https://www.googleapis.com/auth/analytics.readonly'\n      }).then(function () {\n        // Executes an API request, and returns a Promise.\n        // The method name `language.translations.list` comes from the API discovery.\n        var VIEW_ID = '136738850';\n        var GoogleAuth = window.gapi.auth2.getAuthInstance();\n        var isSigned = GoogleAuth.isSignedIn.get();\n        if (!isSigned) {\n          GoogleAuth.isSignedIn.listen(function (updateSigned) {\n            if (updateSigned) {\n              _this.queryReports();\n            }\n          });\n          GoogleAuth.signIn();\n          throw new Error('Not Signed');\n        } else {\n          return window.gapi.client.request({\n            path: '/v4/reports:batchGet',\n            root: 'https://analyticsreporting.googleapis.com/',\n            method: 'POST',\n            body: {\n              reportRequests: [{\n                viewId: VIEW_ID,\n                dateRanges: [{\n                  startDate: _this.dateRange.startDate,\n                  endDate: _this.dateRange.endDate\n                }],\n                metrics: [{\n                  expression: 'ga:users'\n                }, {\n                  expression: 'ga:bounceRate'\n                }, {\n                  expression: 'ga:avgSessionDuration',\n                  formattingType: 'TIME'\n                }, {\n                  expression: 'ga:goal1Completions'\n                }],\n                dimensions: [{\n                  name: 'ga:date'\n                }]\n              }]\n            }\n          });\n        }\n      }).then(function (response) {\n        var formattedJson = JSON.parse(JSON.stringify(response.result, null, 2));\n        var metricsList = ['ga:users', 'ga:bounceRate', 'ga:avgSessionDuration', 'ga:goal1Completions'];\n        var dataList = formattedJson.reports[0].data.rows;\n\n        var _loop = function _loop(i) {\n          var metrics = metricsList[i];\n          _this.rowDataList[metrics] = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.map(dataList, function (row) {\n            return row.metrics[0].values[i];\n          });\n          _this.labelList = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.map(dataList, function (row) {\n            return __WEBPACK_IMPORTED_MODULE_2_moment___default()(row.dimensions[0], 'YYYYMMDD').format('YYYY-MM-DD');\n          });\n        };\n\n        for (var i = 0; i < metricsList.length; i++) {\n          _loop(i);\n        }\n\n        _this.getSeriesData('lineData', 'ga:users');\n        _this.getSeriesData('bounceRateData', 'ga:bounceRate');\n        _this.getSeriesData('avgSessionDurationData', 'ga:avgSessionDuration');\n\n        return _this.$http.get('/api/webhook/channel/completed-list?start_date=' + _this.dateRange.startDate + '&end_date=' + _this.dateRange.endDate);\n      }).then(function (response) {\n        var dateDiff = __WEBPACK_IMPORTED_MODULE_2_moment___default()(_this.dateRange.endDate, 'YYYY-MM-DD').diff(__WEBPACK_IMPORTED_MODULE_2_moment___default()(_this.dateRange.startDate, 'YYYY-MM-Dd'), 'days');\n        var channelUserList = response.data.data.channel_list;\n\n        var _loop2 = function _loop2(i) {\n          var targetDate = __WEBPACK_IMPORTED_MODULE_2_moment___default()(_this.dateRange.startDate, 'YYYY-MM-DD').add(i, 'day').format('YYYY-MM-DD');\n          var hasTargetDate = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.find(channelUserList, function (item) {\n            return item.date === targetDate;\n          });\n          if (!hasTargetDate) {\n            channelUserList.push({\n              date: targetDate,\n              count: 0\n            });\n          }\n        };\n\n        for (var i = 0; i <= dateDiff; i++) {\n          _loop2(i);\n        }\n\n        _this.channelUserList = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.sortBy(channelUserList, function (item) {\n          return __WEBPACK_IMPORTED_MODULE_2_moment___default()(item.date, 'YYYY-MM-DD').format('X');\n        });\n        console.log(_this.channelUserList);\n        _this.getCompletedCountData();\n      }).catch(function (e) {\n        console.error(e);\n      });\n    },\n    changeTabs: function changeTabs(tabId) {\n      for (var i in this.tabInfo) {\n        this.tabInfo[i] = false;\n      }\n      this.tabInfo[tabId] = true;\n\n      switch (tabId) {\n        case 'constructionData':\n          this.getConstructionDashboardData();\n          break;\n        default:\n          break;\n      }\n    },\n    getSeriesData: function getSeriesData(basket, key) {\n      var data = {\n        labels: this.labelList\n      };\n      var dataSet = this.rowDataList[key];\n      if (!dataSet) {\n        return {\n          labels: this.labelList,\n          datasets: []\n        };\n      }\n      data.datasets = [{\n        data: __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.map(this.rowDataList[key], function (item) {\n          return parseInt(item, 10);\n        }),\n        label: key,\n        borderColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)'),\n        pointBackgroundColor: this.backgroundColor_3[0],\n        backgroundColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)')\n      }];\n      this[basket] = data;\n      this.$forceUpdate();\n    },\n    getCompletedCountData: function getCompletedCountData() {\n      var analyticsData = this.rowDataList['ga:goal1Completions'];\n\n      var data = {\n        labels: this.labelList\n      };\n\n      data.datasets = [];\n\n      data.datasets.push({\n        data: __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.map(analyticsData, function (item) {\n          return parseInt(item, 10);\n        }),\n        label: 'Google Analytics Completed User',\n        borderColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)'),\n        pointBackgroundColor: this.backgroundColor_3[0],\n        backgroundColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)')\n      });\n      data.datasets.push({\n        data: __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.map(this.channelUserList, function (item) {\n          return parseInt(item.count, 10);\n        }),\n        label: 'Channel Completed User',\n        borderColor: this.backgroundColor_3[1].replace(/1\\)$/, '.5)'),\n        pointBackgroundColor: this.backgroundColor_3[1],\n        backgroundColor: this.backgroundColor_3[1].replace(/1\\)$/, '.5)')\n      });\n\n      this.completedCountData = data;\n      this.$forceUpdate();\n    },\n    getConstructionDashboardData: function getConstructionDashboardData() {\n      var _this2 = this;\n\n      this.$http.get('/api/dashboard/construction?date=' + this.constructionDate).then(function (response) {\n        _this2.constructionData = response.data.data;\n        for (var i = 0; i < _this2.constructionData.length; i++) {\n          _this2.constructionData[i].checkList = __WEBPACK_IMPORTED_MODULE_1_underscore___default.a.groupBy(_this2.constructionData[i].checkList, 'cl_date');\n        }\n\n        return _this2.$http.get('/api/dashboard/construction/budget?date=' + _this2.constructionDate);\n      }).then(function (response) {\n        _this2.constructionSales = response.data.data.sales;\n        console.log(_this2.constructionSales);\n      }).catch(function (e) {\n        console.error(e);\n      });\n    },\n    updateCheckListStatus: function updateCheckListStatus(id, item) {\n      var _this3 = this;\n\n      item.cl_date = __WEBPACK_IMPORTED_MODULE_2_moment___default()(item.cl_date, 'YYYY-MM-DD').format('X');\n      console.log(item);\n      this.$http.put('/api/contract/' + id + '/checklist/' + item.cl_pk, item).then(function (response) {\n        if (response.data.code !== 200) {\n          openNotification({\n            message: '체크리스트가 수정 중 이상이 발생하였습니다.',\n            type: 'danger',\n            duration: 1500\n          });\n          return;\n        }\n        openNotification({\n          message: '체크리스트가 정상적으로 수정되었습니다.',\n          type: 'success',\n          duration: 1500\n        });\n        _this3.getConstructionDashboardData();\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n\n    this.dateRange.startDate = __WEBPACK_IMPORTED_MODULE_2_moment___default()().add(-1, 'week').format('YYYY-MM-DD');\n    this.dateRange.endDate = __WEBPACK_IMPORTED_MODULE_2_moment___default()().add(-1, 'days').format('YYYY-MM-DD');\n\n    this.constructionDate = __WEBPACK_IMPORTED_MODULE_2_moment___default()().format('YYYY-MM-DD');\n    setTimeout(function () {\n      _this4.queryReports();\n    }, 10);\n  }\n});\n\n/***/ }),\n\n/***/ 491:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @namespace Chart\n */\nvar Chart = __webpack_require__(510)();\n\nChart.helpers = __webpack_require__(437);\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n__webpack_require__(509)(Chart);\n\nChart.defaults = __webpack_require__(438);\nChart.Element = __webpack_require__(443);\nChart.elements = __webpack_require__(446);\nChart.Interaction = __webpack_require__(471);\nChart.layouts = __webpack_require__(449);\nChart.platform = __webpack_require__(473);\nChart.plugins = __webpack_require__(472);\nChart.Ticks = __webpack_require__(450);\n\n__webpack_require__(506)(Chart);\n__webpack_require__(507)(Chart);\n__webpack_require__(508)(Chart);\n__webpack_require__(512)(Chart);\n__webpack_require__(511)(Chart);\n__webpack_require__(513)(Chart);\n\n__webpack_require__(529)(Chart);\n__webpack_require__(527)(Chart);\n__webpack_require__(528)(Chart);\n__webpack_require__(530)(Chart);\n__webpack_require__(531)(Chart);\n__webpack_require__(532)(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n__webpack_require__(499)(Chart);\n__webpack_require__(500)(Chart);\n__webpack_require__(501)(Chart);\n__webpack_require__(502)(Chart);\n__webpack_require__(503)(Chart);\n__webpack_require__(504)(Chart);\n__webpack_require__(505)(Chart);\n\n__webpack_require__(492)(Chart);\n__webpack_require__(493)(Chart);\n__webpack_require__(494)(Chart);\n__webpack_require__(495)(Chart);\n__webpack_require__(496)(Chart);\n__webpack_require__(497)(Chart);\n__webpack_require__(498)(Chart);\n\n// Loading built-it plugins\nvar plugins = __webpack_require__(523);\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n\n\n/***/ }),\n\n/***/ 492:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 493:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 494:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 495:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 496:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 497:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 498:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n\n\n/***/ }),\n\n/***/ 499:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar elements = __webpack_require__(446);\nvar helpers = __webpack_require__(437);\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 500:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar elements = __webpack_require__(446);\nvar helpers = __webpack_require__(437);\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 501:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar elements = __webpack_require__(446);\nvar helpers = __webpack_require__(437);\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 502:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar elements = __webpack_require__(446);\nvar helpers = __webpack_require__(437);\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 503:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar elements = __webpack_require__(446);\nvar helpers = __webpack_require__(437);\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 504:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar elements = __webpack_require__(446);\nvar helpers = __webpack_require__(437);\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 505:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n\n\n/***/ }),\n\n/***/ 506:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* global window: false */\n\n\nvar defaults = __webpack_require__(438);\nvar Element = __webpack_require__(443);\nvar helpers = __webpack_require__(437);\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n\n\n/***/ }),\n\n/***/ 507:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar helpers = __webpack_require__(437);\nvar Interaction = __webpack_require__(471);\nvar layouts = __webpack_require__(449);\nvar platform = __webpack_require__(473);\nvar plugins = __webpack_require__(472);\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n\n\n/***/ }),\n\n/***/ 508:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(437);\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n\n\n/***/ }),\n\n/***/ 509:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* global window: false */\n/* global document: false */\n\n\nvar color = __webpack_require__(474);\nvar defaults = __webpack_require__(438);\nvar helpers = __webpack_require__(437);\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\n\n/***/ }),\n\n/***/ 510:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n\n\n/***/ }),\n\n/***/ 511:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar Element = __webpack_require__(443);\nvar helpers = __webpack_require__(437);\nvar Ticks = __webpack_require__(450);\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 512:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar helpers = __webpack_require__(437);\nvar layouts = __webpack_require__(449);\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n\n\n/***/ }),\n\n/***/ 513:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar Element = __webpack_require__(443);\nvar helpers = __webpack_require__(437);\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n\n\n/***/ }),\n\n/***/ 514:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar Element = __webpack_require__(443);\nvar helpers = __webpack_require__(437);\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n\n\n/***/ }),\n\n/***/ 515:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar Element = __webpack_require__(443);\nvar helpers = __webpack_require__(437);\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\n\n/***/ }),\n\n/***/ 516:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar Element = __webpack_require__(443);\nvar helpers = __webpack_require__(437);\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n\n\n/***/ }),\n\n/***/ 517:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar Element = __webpack_require__(443);\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\n\n/***/ }),\n\n/***/ 518:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(460);\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n\n\n/***/ }),\n\n/***/ 519:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(460);\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n\n\n/***/ }),\n\n/***/ 520:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(460);\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 521:\n/***/ (function(module, exports) {\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\n\n/***/ }),\n\n/***/ 522:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n\n\nvar helpers = __webpack_require__(437);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n\n\n/***/ }),\n\n/***/ 523:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\nmodule.exports.filler = __webpack_require__(524);\nmodule.exports.legend = __webpack_require__(525);\nmodule.exports.title = __webpack_require__(526);\n\n\n/***/ }),\n\n/***/ 524:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n\n\nvar defaults = __webpack_require__(438);\nvar elements = __webpack_require__(446);\nvar helpers = __webpack_require__(437);\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 525:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar Element = __webpack_require__(443);\nvar helpers = __webpack_require__(437);\nvar layouts = __webpack_require__(449);\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 526:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar Element = __webpack_require__(443);\nvar helpers = __webpack_require__(437);\nvar layouts = __webpack_require__(449);\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 527:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n\n\n/***/ }),\n\n/***/ 528:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar helpers = __webpack_require__(437);\nvar Ticks = __webpack_require__(450);\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n\n\n/***/ }),\n\n/***/ 529:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(437);\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 530:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(437);\nvar Ticks = __webpack_require__(450);\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n\n\n/***/ }),\n\n/***/ 531:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(438);\nvar helpers = __webpack_require__(437);\nvar Ticks = __webpack_require__(450);\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n\n\n/***/ }),\n\n/***/ 532:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* global window: false */\n\n\nvar moment = __webpack_require__(0);\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = __webpack_require__(438);\nvar helpers = __webpack_require__(437);\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n\n\n/***/ }),\n\n/***/ 533:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* MIT license */\nvar colorNames = __webpack_require__(537);\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n\n\n/***/ }),\n\n/***/ 534:\n/***/ (function(module, exports) {\n\n/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n\n/***/ }),\n\n/***/ 535:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar conversions = __webpack_require__(534);\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n\n/***/ }),\n\n/***/ 537:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n/***/ }),\n\n/***/ 546:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(417)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".datepicker-view[data-v-a9e6891e]{margin-bottom:1rem}.datepicker-view .datepicker[data-v-a9e6891e]{width:auto;display:inline-block}.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:25vw}.construction-info-view .construction-wrapper[data-v-a9e6891e]{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.construction-info-view .construction-wrapper .construction-item[data-v-a9e6891e]{-ms-flex:0 0 25rem;flex:0 0 25rem;border:1px solid #dbdbdb;padding:.5rem;margin:.5rem}.none-checklist-data[data-v-a9e6891e]{width:100%;min-height:15rem;text-align:center;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}@media screen and (max-width:999px){.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:auto}}\", \"\", {\"version\":3,\"sources\":[\"/Users/hyungwon/Works/gridazip/admin.gridazip.com/frontend/client/views/dashboard/index.vue\"],\"names\":[],\"mappings\":\"AACA,kCAAkC,kBAAkB,CACnD,AACD,8CAA8C,WAAW,oBAAoB,CAC5E,AACD,mDAAmD,UAAU,CAC5D,AACD,+DAA+D,gBAAgB,qBAAqB,gBAAgB,CACnH,AACD,kFAAkF,mBAAmB,eAAe,yBAAyB,cAAe,YAAa,CACxK,AACD,sCAAsC,WAAW,iBAAiB,kBAAkB,oBAAoB,aAAa,sBAAsB,mBAAmB,qBAAqB,sBAAsB,CACxM,AACD,oCACA,mDAAmD,UAAU,CAC5D,CACA\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.datepicker-view[data-v-a9e6891e]{margin-bottom:1rem\\n}\\n.datepicker-view .datepicker[data-v-a9e6891e]{width:auto;display:inline-block\\n}\\n.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:25vw\\n}\\n.construction-info-view .construction-wrapper[data-v-a9e6891e]{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap\\n}\\n.construction-info-view .construction-wrapper .construction-item[data-v-a9e6891e]{-ms-flex:0 0 25rem;flex:0 0 25rem;border:1px solid #dbdbdb;padding:0.5rem;margin:0.5rem\\n}\\n.none-checklist-data[data-v-a9e6891e]{width:100%;min-height:15rem;text-align:center;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center\\n}\\n@media screen and (max-width: 999px){\\n.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:auto\\n}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 556:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(546);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(418)(\"4402bb46\", content, true);\n\n/***/ }),\n\n/***/ 565:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"j\"] = generateChart;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Bar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return HorizontalBar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return Doughnut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return Line; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return Pie; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return PolarArea; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return Radar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return Bubble; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return Scatter; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_chart_js__ = __webpack_require__(491);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_chart_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_chart_js__);\n\nfunction generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new __WEBPACK_IMPORTED_MODULE_0_chart_js___default.a(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nvar Bar = generateChart('bar-chart', 'bar');\nvar HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nvar Doughnut = generateChart('doughnut-chart', 'doughnut');\nvar Line = generateChart('line-chart', 'line');\nvar Pie = generateChart('pie-chart', 'pie');\nvar PolarArea = generateChart('polar-chart', 'polarArea');\nvar Radar = generateChart('radar-chart', 'radar');\nvar Bubble = generateChart('bubble-chart', 'bubble');\nvar Scatter = generateChart('scatter-chart', 'scatter');\n/* unused harmony default export */ var _unused_webpack_default_export = ({\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n});\n\n/***/ }),\n\n/***/ 566:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export VueCharts */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_index_js__ = __webpack_require__(567);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__BaseCharts__ = __webpack_require__(565);\n/* unused harmony reexport Bar */\n/* unused harmony reexport HorizontalBar */\n/* unused harmony reexport Doughnut */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"d\"]; });\n/* unused harmony reexport Pie */\n/* unused harmony reexport PolarArea */\n/* unused harmony reexport Radar */\n/* unused harmony reexport Bubble */\n/* unused harmony reexport Scatter */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__mixins_index_js__[\"a\"]; });\n/* unused harmony reexport generateChart */\n\n\nvar VueCharts = {\n  Bar: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"a\" /* Bar */],\n  HorizontalBar: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"b\" /* HorizontalBar */],\n  Doughnut: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"c\" /* Doughnut */],\n  Line: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"d\" /* Line */],\n  Pie: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"e\" /* Pie */],\n  PolarArea: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"f\" /* PolarArea */],\n  Radar: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"g\" /* Radar */],\n  Bubble: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"h\" /* Bubble */],\n  Scatter: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"i\" /* Scatter */],\n  mixins: __WEBPACK_IMPORTED_MODULE_0__mixins_index_js__[\"a\" /* default */],\n  generateChart: __WEBPACK_IMPORTED_MODULE_1__BaseCharts__[\"j\" /* generateChart */],\n  render: function render() {\n    return console.error('[vue-chartjs]: This is not a vue component. It is the whole object containing all vue components. Please import the named export or access the components over the dot notation. For more info visit https://vue-chartjs.org/#/home?id=quick-start');\n  }\n};\n/* unused harmony default export */ var _unused_webpack_default_export = (VueCharts);\n\n\n/***/ }),\n\n/***/ 567:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export reactiveData */\n/* unused harmony export reactiveProp */\nfunction dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nvar reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nvar reactiveProp = {\n  props: {\n    chartData: {\n      required: true\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n});\n\n/***/ }),\n\n/***/ 583:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard\"\n  }, [_c('div', {\n    staticClass: \"tabs is-boxed\"\n  }, [_c('ul', [_c('li', {\n    class: {\n      'is-active': _vm.tabInfo.trafficData\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.changeTabs('trafficData')\n      }\n    }\n  }, [_c('a', [_vm._v(\"Dashboard\")])]), _vm._v(\" \"), _c('li', {\n    class: {\n      'is-active': _vm.tabInfo.constructionData\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.changeTabs('constructionData')\n      }\n    }\n  }, [_c('a', [_vm._v(\"시공관리\")])])])]), _vm._v(\" \"), (_vm.tabInfo.constructionData) ? _c('div', {\n    staticClass: \"construction-info-view\"\n  }, [_c('div', {\n    staticClass: \"datepicker-view\"\n  }, [_c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m'\n      }\n    },\n    model: {\n      value: (_vm.constructionDate),\n      callback: function($$v) {\n        _vm.constructionDate = $$v\n      },\n      expression: \"constructionDate\"\n    }\n  }), _vm._v(\" \"), _c('button', {\n    staticClass: \"search-btn button\",\n    on: {\n      \"click\": _vm.getConstructionDashboardData\n    }\n  }, [_vm._v(\"조회\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"진행중인 공사 목록\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-info\"\n  }, [_c('p', [_vm._v(\"총 공사 건수: \" + _vm._s(_vm.constructionData.length) + \" 건\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-info\"\n  }, [_c('p', [_vm._v(\"총 매출: \" + _vm._s(_vm.addCommas(_vm.constructionSales)) + \" 만원\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-wrapper is-flex\"\n  }, _vm._l((_vm.constructionData), function(construction) {\n    return _c('div', {\n      staticClass: \"construction-item\"\n    }, [_c('h3', {\n      staticClass: \"subtitle\"\n    }, [_vm._v(_vm._s(construction.pc_name))]), _vm._v(\" \"), _c('div', {\n      staticClass: \"percentage-wrapper\"\n    }, [_c('span', {}, [_vm._v(\"진행율\")]), _vm._v(\" \"), _c('div', {\n      staticClass: \"doughnut\"\n    }, [_c('div', {\n      staticClass: \"progress-container is-flex\"\n    }, [_c('progress', {\n      staticClass: \"progress\",\n      attrs: {\n        \"max\": \"100\"\n      },\n      domProps: {\n        \"value\": construction.completedPercentage\n      }\n    })])])]), _vm._v(\" \"), (Object.keys(construction.checkList).length > 0) ? _c('div', {\n      staticClass: \"checklist\"\n    }, [_c('table', {\n      staticClass: \"table is-striped\"\n    }, [_vm._m(0, true), _vm._v(\" \"), _vm._l((construction.checkList), function(checkListByDate, index) {\n      return _c('tbody', [_c('tr', {\n        staticClass: \"date-header\"\n      }, [_c('th', {\n        attrs: {\n          \"colspan\": \"4\"\n        }\n      }, [_vm._v(_vm._s(index))])]), _vm._v(\" \"), _c('tr'), _vm._l((checkListByDate), function(checkListItem) {\n        return _c('tr', [_c('td', [_c('span', [_vm._v(_vm._s(checkListItem.ct_name))])]), _vm._v(\" \"), _c('td', [_c('input', {\n          directives: [{\n            name: \"model\",\n            rawName: \"v-model\",\n            value: (checkListItem.cl_resource),\n            expression: \"checkListItem.cl_resource\"\n          }],\n          staticClass: \"checkbox\",\n          attrs: {\n            \"type\": \"checkbox\"\n          },\n          domProps: {\n            \"checked\": Array.isArray(checkListItem.cl_resource) ? _vm._i(checkListItem.cl_resource, null) > -1 : (checkListItem.cl_resource)\n          },\n          on: {\n            \"change\": [function($event) {\n              var $$a = checkListItem.cl_resource,\n                $$el = $event.target,\n                $$c = $$el.checked ? (true) : (false);\n              if (Array.isArray($$a)) {\n                var $$v = null,\n                  $$i = _vm._i($$a, $$v);\n                if ($$el.checked) {\n                  $$i < 0 && (_vm.$set(checkListItem, \"cl_resource\", $$a.concat([$$v])))\n                } else {\n                  $$i > -1 && (_vm.$set(checkListItem, \"cl_resource\", $$a.slice(0, $$i).concat($$a.slice($$i + 1))))\n                }\n              } else {\n                _vm.$set(checkListItem, \"cl_resource\", $$c)\n              }\n            }, function($event) {\n              _vm.updateCheckListStatus(construction.pc_pk, checkListItem)\n            }]\n          }\n        })]), _vm._v(\" \"), _c('td', [_c('input', {\n          directives: [{\n            name: \"model\",\n            rawName: \"v-model\",\n            value: (checkListItem.cl_constructor),\n            expression: \"checkListItem.cl_constructor\"\n          }],\n          staticClass: \"checkbox\",\n          attrs: {\n            \"type\": \"checkbox\"\n          },\n          domProps: {\n            \"checked\": Array.isArray(checkListItem.cl_constructor) ? _vm._i(checkListItem.cl_constructor, null) > -1 : (checkListItem.cl_constructor)\n          },\n          on: {\n            \"change\": [function($event) {\n              var $$a = checkListItem.cl_constructor,\n                $$el = $event.target,\n                $$c = $$el.checked ? (true) : (false);\n              if (Array.isArray($$a)) {\n                var $$v = null,\n                  $$i = _vm._i($$a, $$v);\n                if ($$el.checked) {\n                  $$i < 0 && (_vm.$set(checkListItem, \"cl_constructor\", $$a.concat([$$v])))\n                } else {\n                  $$i > -1 && (_vm.$set(checkListItem, \"cl_constructor\", $$a.slice(0, $$i).concat($$a.slice($$i + 1))))\n                }\n              } else {\n                _vm.$set(checkListItem, \"cl_constructor\", $$c)\n              }\n            }, function($event) {\n              _vm.updateCheckListStatus(construction.pc_pk, checkListItem)\n            }]\n          }\n        })]), _vm._v(\" \"), _c('td', [_c('span', [_vm._v(_vm._s(checkListItem.cl_memo))])])])\n      })], 2)\n    })], 2)]) : _c('div', {\n      staticClass: \"none-checklist-data\"\n    }, [_c('span', [_vm._v(\"체크리스트가 없습니다.\")])])])\n  }))])])])]) : _vm._e(), _vm._v(\" \"), (_vm.tabInfo.trafficData) ? _c('div', {\n    staticClass: \"traffic-data-view\"\n  }, [_c('div', {\n    staticClass: \"datepicker-view\"\n  }, [_c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m-d'\n      }\n    },\n    model: {\n      value: (_vm.dateRange.startDate),\n      callback: function($$v) {\n        _vm.$set(_vm.dateRange, \"startDate\", $$v)\n      },\n      expression: \"dateRange.startDate\"\n    }\n  }), _vm._v(\"\\n      ~\\n      \"), _c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m-d'\n      }\n    },\n    model: {\n      value: (_vm.dateRange.endDate),\n      callback: function($$v) {\n        _vm.$set(_vm.dateRange, \"endDate\", $$v)\n      },\n      expression: \"dateRange.endDate\"\n    }\n  }), _vm._v(\" \"), _c('button', {\n    staticClass: \"search-btn button\",\n    on: {\n      \"click\": _vm.queryReports\n    }\n  }, [_vm._v(\"조회\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"일별 사용자\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.lineData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"이탈율\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.bounceRateData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"세션 시간\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.avgSessionDurationData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent is-12\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('h4', {\n    staticClass: \"title\"\n  }, [_vm._v(\"일별 문의 건수\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"content\"\n  }, [_c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.completedCountData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)])])])]) : _vm._e()])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', [_c('th', [_vm._v(\"공사\")]), _vm._v(\" \"), _c('th', [_vm._v(\"자재\")]), _vm._v(\" \"), _c('th', [_vm._v(\"인력\")]), _vm._v(\" \"), _c('th', [_vm._v(\"메모\")])])])\n}]}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// assets/js/0.b8df34451c38509e4134.js","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-a9e6891e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!sass-loader?sourceMap!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a9e6891e\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* scopeId */\n  \"data-v-a9e6891e\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/views/dashboard/index.vue\n// module id = 426\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/helpers/index.js\n// module id = 437\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.defaults.js\n// module id = 438\n// module chunks = 0","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.element.js\n// module id = 443\n// module chunks = 0","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/index.js\n// module id = 446\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.layouts.js\n// module id = 449\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.ticks.js\n// module id = 450\n// module chunks = 0","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/helpers/helpers.core.js\n// module id = 460\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.interaction.js\n// module id = 471\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.plugins.js\n// module id = 472\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/platforms/platform.js\n// module id = 473\n// module chunks = 0","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color/index.js\n// module id = 474\n// module chunks = 0","// LineChart.js\r\nimport { Line, mixins } from 'vue-chartjs'\r\nconst { reactiveProp } = mixins\r\n\r\nexport default {\r\n  extends: Line,\r\n  mixins: [reactiveProp],\r\n  props: ['options'],\r\n  mounted () {\r\n    this.renderChart(this.chartData, this.options)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/views/dashboard/AnalyticsUsersChart.js","<template>\r\n  <div class=\"dashboard\">\r\n    <div class=\"tabs is-boxed\">\r\n      <ul>\r\n        <li @click=\"changeTabs('trafficData')\" :class=\"{'is-active': tabInfo.trafficData}\"><a>Dashboard</a></li>\r\n        <li @click=\"changeTabs('constructionData')\" :class=\"{'is-active': tabInfo.constructionData}\" ><a>시공관리</a></li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"construction-info-view\" v-if=\"tabInfo.constructionData\">\r\n      <div class=\"datepicker-view\">\r\n        <datepicker v-model=\"constructionDate\" class=\"datepicker\" :config=\"{dateFormat:'Y-m'}\"/>\r\n        <button class=\"search-btn button\" @click=\"getConstructionDashboardData\">조회</button>\r\n      </div>\r\n      <div class=\"tile is-ancestor\">\r\n        <div class=\"tile is-parent\">\r\n          <article class=\"tile is-child box\">\r\n            <p class=\"title\">진행중인 공사 목록</p>\r\n            <div class=\"construction-info\">\r\n              <p>총 공사 건수: {{constructionData.length}} 건</p>\r\n            </div>\r\n            <div class=\"construction-info\">\r\n              <p>총 매출: {{addCommas(constructionSales)}} 만원</p>\r\n            </div>\r\n            <div class=\"construction-wrapper is-flex\">\r\n              <div class=\"construction-item\" v-for=\"construction in constructionData\">\r\n                  <h3 class=\"subtitle\">{{construction.pc_name}}</h3>\r\n                  <div class=\"percentage-wrapper\">\r\n                    <span class=\"\">진행율</span>\r\n                    <div class=\"doughnut\">\r\n                      <div class=\"progress-container is-flex\">\r\n                        <progress :value=\"construction.completedPercentage\" max=\"100\" class=\"progress\"></progress>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                <div class=\"checklist\" v-if=\"Object.keys(construction.checkList).length > 0\">\r\n                  <table class=\"table is-striped\">\r\n                    <thead>\r\n                    <tr>\r\n                      <th>공사</th>\r\n                      <th>자재</th>\r\n                      <th>인력</th>\r\n                      <th>메모</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody v-for=\"(checkListByDate, index) in construction.checkList\">\r\n                    <tr class=\"date-header\">\r\n                      <th colspan=\"4\">{{index}}</th>\r\n                    </tr>\r\n                    <tr>\r\n                    <tr v-for=\"checkListItem in checkListByDate\">\r\n                      <td>\r\n                        <span>{{checkListItem.ct_name}}</span>\r\n                      </td>\r\n                      <td>\r\n                        <input type=\"checkbox\" class=\"checkbox\" v-model=\"checkListItem.cl_resource\" @change=\"updateCheckListStatus(construction.pc_pk, checkListItem)\" />\r\n                      </td>\r\n                      <td>\r\n                        <input type=\"checkbox\" class=\"checkbox\" v-model=\"checkListItem.cl_constructor\" @change=\"updateCheckListStatus(construction.pc_pk, checkListItem)\" />\r\n                      </td>\r\n                      <td>\r\n                        <span >{{checkListItem.cl_memo}}</span>\r\n                      </td>\r\n                    </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div class=\"none-checklist-data\" v-else>\r\n                  <span>체크리스트가 없습니다.</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"traffic-data-view\" v-if=\"tabInfo.trafficData\">\r\n      <div class=\"datepicker-view\">\r\n        <datepicker v-model=\"dateRange.startDate\" class=\"datepicker\" :config=\"{dateFormat:'Y-m-d'}\"/>\r\n        ~\r\n        <datepicker v-model=\"dateRange.endDate\" class=\"datepicker\" :config=\"{dateFormat:'Y-m-d'}\"/>\r\n        <button class=\"search-btn button\" @click=\"queryReports\">조회</button>\r\n      </div>\r\n      <div class=\"tile is-ancestor\">\r\n        <div class=\"tile is-parent\">\r\n          <article class=\"tile is-child box\">\r\n            <p class=\"title\">일별 사용자</p>\r\n            <analytics-users-chart :chart-data=\"lineData\" :options=\"{maintainAspectRatio: false}\"></analytics-users-chart>\r\n          </article>\r\n        </div>\r\n        <div class=\"tile is-parent\">\r\n          <article class=\"tile is-child box\">\r\n            <p class=\"title\">이탈율</p>\r\n            <analytics-users-chart :chart-data=\"bounceRateData\" :options=\"{maintainAspectRatio: false}\"></analytics-users-chart>\r\n          </article>\r\n        </div>\r\n        <div class=\"tile is-parent\">\r\n          <article class=\"tile is-child box\">\r\n            <p class=\"title\">세션 시간</p>\r\n            <analytics-users-chart :chart-data=\"avgSessionDurationData\" :options=\"{maintainAspectRatio: false}\"></analytics-users-chart>\r\n          </article>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"tile is-ancestor\">\r\n        <div class=\"tile is-parent is-12\">\r\n          <article class=\"tile is-child box\">\r\n            <h4 class=\"title\">일별 문의 건수</h4>\r\n            <div class=\"content\">\r\n              <analytics-users-chart :chart-data=\"completedCountData\" :options=\"{maintainAspectRatio: false}\"></analytics-users-chart>\r\n            </div>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import AnalyticsUsersChart from './AnalyticsUsersChart'\r\n  import _ from 'underscore'\r\n  import moment from 'moment'\r\n  import datepicker from 'vue-bulma-datepicker'\r\n  import Vue from 'vue'\r\n  import Notification from 'vue-bulma-notification'\r\n  import mixin from '../../services/mixin'\r\n\r\n  const NotificationComponent = Vue.extend(Notification)\r\n\r\n  const openNotification = (propsData = {\r\n    title: '',\r\n    message: '',\r\n    type: '',\r\n    direction: '',\r\n    duration: 4500,\r\n    container: '.notifications'\r\n  }) => {\r\n    return new NotificationComponent({\r\n      el: document.createElement('div'),\r\n      propsData\r\n    })\r\n  }\r\n\r\n  export default {\r\n    components: {\r\n      AnalyticsUsersChart,\r\n      datepicker\r\n    },\r\n    mixins: [mixin],\r\n    data () {\r\n      return {\r\n        rowDataList: {},\r\n        labelList: [],\r\n        backgroundColor_3: [\r\n          'rgba(31, 200, 219, 1)',\r\n          'rgba(151, 205, 118, 1)'\r\n        ],\r\n        options_3: {\r\n          tooltips: {\r\n            mode: 'label'\r\n          }\r\n        },\r\n        dateRange: {},\r\n        constructionDate: '',\r\n        lineData: null,\r\n        bounceRateData: null,\r\n        avgSessionDurationData: null,\r\n        channelUserList: [],\r\n        completedCountData: null,\r\n        tabInfo: {\r\n          constructionData: false,\r\n          trafficData: true\r\n        },\r\n        constructionData: [],\r\n        constructionSales: 0\r\n      }\r\n    },\r\n\r\n    computed: {\r\n    },\r\n    methods: {\r\n      queryReports () {\r\n      // console.log(window.gapi.auth.signIn())\r\n      // Replace with your view ID.\r\n\r\n        window.gapi.client.init({\r\n          'clientId': '149704865346-ohiqqr8atn0fb4q1rttkelp693b20ea3.apps.googleusercontent.com',\r\n          'scope': 'https://www.googleapis.com/auth/analytics.readonly'\r\n        }).then(() => {\r\n          // Executes an API request, and returns a Promise.\r\n          // The method name `language.translations.list` comes from the API discovery.\r\n          const VIEW_ID = '136738850'\r\n          const GoogleAuth = window.gapi.auth2.getAuthInstance()\r\n          const isSigned = GoogleAuth.isSignedIn.get()\r\n          if (!isSigned) {\r\n            GoogleAuth.isSignedIn.listen((updateSigned) => {\r\n              if (updateSigned) {\r\n                this.queryReports()\r\n              }\r\n            })\r\n            GoogleAuth.signIn()\r\n            throw new Error('Not Signed')\r\n          } else {\r\n            return window.gapi.client.request({\r\n              path: '/v4/reports:batchGet',\r\n              root: 'https://analyticsreporting.googleapis.com/',\r\n              method: 'POST',\r\n              body: {\r\n                reportRequests: [\r\n                  {\r\n                    viewId: VIEW_ID,\r\n                    dateRanges: [\r\n                      {\r\n                        startDate: this.dateRange.startDate,\r\n                        endDate: this.dateRange.endDate\r\n                      }\r\n                    ],\r\n                    metrics: [\r\n                      {\r\n                        expression: 'ga:users'\r\n                      },\r\n                      {\r\n                        expression: 'ga:bounceRate'\r\n                      },\r\n                      {\r\n                        expression: 'ga:avgSessionDuration',\r\n                        formattingType: 'TIME'\r\n                      },\r\n                      {\r\n                        expression: 'ga:goal1Completions'\r\n                      }\r\n                    ],\r\n                    dimensions: [{\r\n                      name: 'ga:date'\r\n                    }]\r\n                  }\r\n                ]\r\n              }\r\n            })\r\n          }\r\n        })\r\n        .then((response) => {\r\n          const formattedJson = JSON.parse(JSON.stringify(response.result, null, 2))\r\n          const metricsList = ['ga:users', 'ga:bounceRate', 'ga:avgSessionDuration', 'ga:goal1Completions']\r\n          const dataList = formattedJson.reports[0].data.rows\r\n\r\n          for (let i = 0; i < metricsList.length; i++) {\r\n            const metrics = metricsList[i]\r\n            this.rowDataList[metrics] = _.map(dataList, (row) => {\r\n              return row.metrics[0].values[i]\r\n            })\r\n            this.labelList = _.map(dataList, (row) => {\r\n              return moment(row.dimensions[0], 'YYYYMMDD').format('YYYY-MM-DD')\r\n            })\r\n          }\r\n\r\n          this.getSeriesData('lineData', 'ga:users')\r\n          this.getSeriesData('bounceRateData', 'ga:bounceRate')\r\n          this.getSeriesData('avgSessionDurationData', 'ga:avgSessionDuration')\r\n\r\n          return this.$http.get(`/api/webhook/channel/completed-list?start_date=${this.dateRange.startDate}&end_date=${this.dateRange.endDate}`)\r\n        })\r\n        .then((response) => {\r\n          const dateDiff = moment(this.dateRange.endDate, 'YYYY-MM-DD').diff(moment(this.dateRange.startDate, 'YYYY-MM-Dd'), 'days')\r\n          const channelUserList = response.data.data.channel_list\r\n\r\n          for (let i = 0; i <= dateDiff; i++) {\r\n            const targetDate = moment(this.dateRange.startDate, 'YYYY-MM-DD').add(i, 'day').format('YYYY-MM-DD')\r\n            const hasTargetDate = _.find(channelUserList, (item) => {\r\n              return item.date === targetDate\r\n            })\r\n            if (!hasTargetDate) {\r\n              channelUserList.push({\r\n                date: targetDate,\r\n                count: 0\r\n              })\r\n            }\r\n          }\r\n\r\n          this.channelUserList = _.sortBy(channelUserList, (item) => {\r\n            return moment(item.date, 'YYYY-MM-DD').format('X')\r\n          })\r\n          console.log(this.channelUserList)\r\n          this.getCompletedCountData()\r\n        })\r\n        .catch(e => {\r\n          console.error(e)\r\n        })\r\n      },\r\n      changeTabs (tabId) {\r\n        for (let i in this.tabInfo) {\r\n          this.tabInfo[i] = false\r\n        }\r\n        this.tabInfo[tabId] = true\r\n\r\n        switch (tabId) {\r\n          case 'constructionData':\r\n            this.getConstructionDashboardData()\r\n            break\r\n          default:\r\n            break\r\n        }\r\n      },\r\n      getSeriesData (basket, key) {\r\n        let data = {\r\n          labels: this.labelList\r\n        }\r\n        const dataSet = this.rowDataList[key]\r\n        if (!dataSet) {\r\n          return {\r\n            labels: this.labelList,\r\n            datasets: []\r\n          }\r\n        }\r\n        data.datasets = [{\r\n          data: _.map(this.rowDataList[key], (item) => {\r\n            return parseInt(item, 10)\r\n          }),\r\n          label: key,\r\n          borderColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)'),\r\n          pointBackgroundColor: this.backgroundColor_3[0],\r\n          backgroundColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)')\r\n        }]\r\n        this[basket] = data\r\n        this.$forceUpdate()\r\n      },\r\n      getCompletedCountData () {\r\n        const analyticsData = this.rowDataList['ga:goal1Completions']\r\n\r\n        const data = {\r\n          labels: this.labelList\r\n        }\r\n\r\n        data.datasets = []\r\n\r\n        data.datasets.push({\r\n          data: _.map(analyticsData, (item) => {\r\n            return parseInt(item, 10)\r\n          }),\r\n          label: 'Google Analytics Completed User',\r\n          borderColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)'),\r\n          pointBackgroundColor: this.backgroundColor_3[0],\r\n          backgroundColor: this.backgroundColor_3[0].replace(/1\\)$/, '.5)')\r\n        })\r\n        data.datasets.push({\r\n          data: _.map(this.channelUserList, (item) => {\r\n            return parseInt(item.count, 10)\r\n          }),\r\n          label: 'Channel Completed User',\r\n          borderColor: this.backgroundColor_3[1].replace(/1\\)$/, '.5)'),\r\n          pointBackgroundColor: this.backgroundColor_3[1],\r\n          backgroundColor: this.backgroundColor_3[1].replace(/1\\)$/, '.5)')\r\n        })\r\n\r\n        this.completedCountData = data\r\n        this.$forceUpdate()\r\n      },\r\n      getConstructionDashboardData () {\r\n        this.$http.get(`/api/dashboard/construction?date=${this.constructionDate}`)\r\n          .then((response) => {\r\n            this.constructionData = response.data.data\r\n            for (let i = 0; i < this.constructionData.length; i++) {\r\n              this.constructionData[i].checkList = _.groupBy(this.constructionData[i].checkList, 'cl_date')\r\n            }\r\n\r\n            return this.$http.get(`/api/dashboard/construction/budget?date=${this.constructionDate}`)\r\n          })\r\n          .then((response) => {\r\n            this.constructionSales = response.data.data.sales\r\n            console.log(this.constructionSales)\r\n          })\r\n          .catch((e) => {\r\n            console.error(e)\r\n          })\r\n      },\r\n      updateCheckListStatus (id, item) {\r\n        item.cl_date = moment(item.cl_date, 'YYYY-MM-DD').format('X')\r\n        console.log(item)\r\n        this.$http.put(`/api/contract/${id}/checklist/${item.cl_pk}`, item)\r\n          .then((response) => {\r\n            if (response.data.code !== 200) {\r\n              openNotification({\r\n                message: '체크리스트가 수정 중 이상이 발생하였습니다.',\r\n                type: 'danger',\r\n                duration: 1500\r\n              })\r\n              return\r\n            }\r\n            openNotification({\r\n              message: '체크리스트가 정상적으로 수정되었습니다.',\r\n              type: 'success',\r\n              duration: 1500\r\n            })\r\n            this.getConstructionDashboardData()\r\n          })\r\n      }\r\n    },\r\n    mounted () {\r\n      this.dateRange.startDate = moment().add(-1, 'week').format('YYYY-MM-DD')\r\n      this.dateRange.endDate = moment().add(-1, 'days').format('YYYY-MM-DD')\r\n\r\n      this.constructionDate = moment().format('YYYY-MM-DD')\r\n      setTimeout(() => {\r\n        this.queryReports()\r\n      }, 10)\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .datepicker-view {\r\n    margin-bottom: 1rem;\r\n    .datepicker {\r\n      width: auto;\r\n      display: inline-block;\r\n    }\r\n  }\r\n\r\n  .traffic-data-view {\r\n    .tile {\r\n      &.is-child {\r\n        width: 25vw;\r\n      }\r\n    }\r\n  }\r\n\r\n  .construction-info-view {\r\n    .construction-wrapper {\r\n      overflow-x: auto;\r\n      flex-wrap: nowrap;\r\n\r\n      .construction-item {\r\n        flex: 0 0 25rem;\r\n        border: 1px solid #dbdbdb;\r\n        padding: 0.5rem;\r\n        margin: 0.5rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  .none-checklist-data {\r\n    width: 100%;\r\n    min-height: 15rem;\r\n    text-align: center;\r\n    /* line-height: 1.1; */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  // mobile\r\n  @media screen and (max-width: 999px) {\r\n    .traffic-data-view {\r\n      .tile {\r\n        &.is-child {\r\n          width: auto;\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// index.vue?fe378662","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Ticks = require('./core/core.ticks');\n\nrequire('./core/core.animation')(Chart);\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\nrequire('./core/core.scaleService')(Chart);\nrequire('./core/core.scale')(Chart);\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-it plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/chart.js\n// module id = 491\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Bar.js\n// module id = 492\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Bubble.js\n// module id = 493\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Doughnut.js\n// module id = 494\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Line.js\n// module id = 495\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.PolarArea.js\n// module id = 496\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Radar.js\n// module id = 497\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Scatter.js\n// module id = 498\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.bar.js\n// module id = 499\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.bubble.js\n// module id = 500\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.doughnut.js\n// module id = 501\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.line.js\n// module id = 502\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.polarArea.js\n// module id = 503\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.radar.js\n// module id = 504\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.scatter.js\n// module id = 505\n// module chunks = 0","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.animation.js\n// module id = 506\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.controller.js\n// module id = 507\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.datasetController.js\n// module id = 508\n// module chunks = 0","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.helpers.js\n// module id = 509\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.js\n// module id = 510\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.scale.js\n// module id = 511\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.scaleService.js\n// module id = 512\n// module chunks = 0","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.tooltip.js\n// module id = 513\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.arc.js\n// module id = 514\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.line.js\n// module id = 515\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.point.js\n// module id = 516\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.rectangle.js\n// module id = 517\n// module chunks = 0","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/helpers/helpers.canvas.js\n// module id = 518\n// module chunks = 0","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/helpers/helpers.easing.js\n// module id = 519\n// module chunks = 0","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/helpers/helpers.options.js\n// module id = 520\n// module chunks = 0","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/platforms/platform.basic.js\n// module id = 521\n// module chunks = 0","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/platforms/platform.dom.js\n// module id = 522\n// module chunks = 0","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/plugins/index.js\n// module id = 523\n// module chunks = 0","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/plugins/plugin.filler.js\n// module id = 524\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/plugins/plugin.legend.js\n// module id = 525\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/plugins/plugin.title.js\n// module id = 526\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.category.js\n// module id = 527\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.linear.js\n// module id = 528\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.linearbase.js\n// module id = 529\n// module chunks = 0","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.logarithmic.js\n// module id = 530\n// module chunks = 0","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.radialLinear.js\n// module id = 531\n// module chunks = 0","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.time.js\n// module id = 532\n// module chunks = 0","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color-string/color-string.js\n// module id = 533\n// module chunks = 0","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color/~/color-convert/conversions.js\n// module id = 534\n// module chunks = 0","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color/~/color-convert/index.js\n// module id = 535\n// module chunks = 0","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/color-name/index.js\n// module id = 537\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".datepicker-view[data-v-a9e6891e]{margin-bottom:1rem}.datepicker-view .datepicker[data-v-a9e6891e]{width:auto;display:inline-block}.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:25vw}.construction-info-view .construction-wrapper[data-v-a9e6891e]{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.construction-info-view .construction-wrapper .construction-item[data-v-a9e6891e]{-ms-flex:0 0 25rem;flex:0 0 25rem;border:1px solid #dbdbdb;padding:.5rem;margin:.5rem}.none-checklist-data[data-v-a9e6891e]{width:100%;min-height:15rem;text-align:center;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}@media screen and (max-width:999px){.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:auto}}\", \"\", {\"version\":3,\"sources\":[\"/Users/hyungwon/Works/gridazip/admin.gridazip.com/frontend/client/views/dashboard/index.vue\"],\"names\":[],\"mappings\":\"AACA,kCAAkC,kBAAkB,CACnD,AACD,8CAA8C,WAAW,oBAAoB,CAC5E,AACD,mDAAmD,UAAU,CAC5D,AACD,+DAA+D,gBAAgB,qBAAqB,gBAAgB,CACnH,AACD,kFAAkF,mBAAmB,eAAe,yBAAyB,cAAe,YAAa,CACxK,AACD,sCAAsC,WAAW,iBAAiB,kBAAkB,oBAAoB,aAAa,sBAAsB,mBAAmB,qBAAqB,sBAAsB,CACxM,AACD,oCACA,mDAAmD,UAAU,CAC5D,CACA\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.datepicker-view[data-v-a9e6891e]{margin-bottom:1rem\\n}\\n.datepicker-view .datepicker[data-v-a9e6891e]{width:auto;display:inline-block\\n}\\n.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:25vw\\n}\\n.construction-info-view .construction-wrapper[data-v-a9e6891e]{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap\\n}\\n.construction-info-view .construction-wrapper .construction-item[data-v-a9e6891e]{-ms-flex:0 0 25rem;flex:0 0 25rem;border:1px solid #dbdbdb;padding:0.5rem;margin:0.5rem\\n}\\n.none-checklist-data[data-v-a9e6891e]{width:100%;min-height:15rem;text-align:center;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center\\n}\\n@media screen and (max-width: 999px){\\n.traffic-data-view .tile.is-child[data-v-a9e6891e]{width:auto\\n}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-a9e6891e\",\"scoped\":true,\"hasInlineConfig\":true}!./~/sass-loader/lib/loader.js?sourceMap!./~/vue-loader/lib/selector.js?type=styles&index=0!./client/views/dashboard/index.vue\n// module id = 546\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-a9e6891e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../node_modules/sass-loader/lib/loader.js?sourceMap!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"4402bb46\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-a9e6891e\",\"scoped\":true,\"hasInlineConfig\":true}!./~/sass-loader/lib/loader.js?sourceMap!./~/vue-loader/lib/selector.js?type=styles&index=0!./client/views/dashboard/index.vue\n// module id = 556\n// module chunks = 0","import Chart from 'chart.js';\nexport function generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new Chart(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nexport var Bar = generateChart('bar-chart', 'bar');\nexport var HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nexport var Doughnut = generateChart('doughnut-chart', 'doughnut');\nexport var Line = generateChart('line-chart', 'line');\nexport var Pie = generateChart('pie-chart', 'pie');\nexport var PolarArea = generateChart('polar-chart', 'polarArea');\nexport var Radar = generateChart('radar-chart', 'radar');\nexport var Bubble = generateChart('bubble-chart', 'bubble');\nexport var Scatter = generateChart('scatter-chart', 'scatter');\nexport default {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-chartjs/es/BaseCharts.js\n// module id = 565\n// module chunks = 0","import mixins from './mixins/index.js';\nimport { Bar, HorizontalBar, Doughnut, Line, Pie, PolarArea, Radar, Bubble, Scatter, generateChart } from './BaseCharts';\nvar VueCharts = {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter,\n  mixins: mixins,\n  generateChart: generateChart,\n  render: function render() {\n    return console.error('[vue-chartjs]: This is not a vue component. It is the whole object containing all vue components. Please import the named export or access the components over the dot notation. For more info visit https://vue-chartjs.org/#/home?id=quick-start');\n  }\n};\nexport default VueCharts;\nexport { VueCharts, Bar, HorizontalBar, Doughnut, Line, Pie, PolarArea, Radar, Bubble, Scatter, mixins, generateChart };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-chartjs/es/index.js\n// module id = 566\n// module chunks = 0","function dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nexport var reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport var reactiveProp = {\n  props: {\n    chartData: {\n      required: true\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport default {\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-chartjs/es/mixins/index.js\n// module id = 567\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard\"\n  }, [_c('div', {\n    staticClass: \"tabs is-boxed\"\n  }, [_c('ul', [_c('li', {\n    class: {\n      'is-active': _vm.tabInfo.trafficData\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.changeTabs('trafficData')\n      }\n    }\n  }, [_c('a', [_vm._v(\"Dashboard\")])]), _vm._v(\" \"), _c('li', {\n    class: {\n      'is-active': _vm.tabInfo.constructionData\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.changeTabs('constructionData')\n      }\n    }\n  }, [_c('a', [_vm._v(\"시공관리\")])])])]), _vm._v(\" \"), (_vm.tabInfo.constructionData) ? _c('div', {\n    staticClass: \"construction-info-view\"\n  }, [_c('div', {\n    staticClass: \"datepicker-view\"\n  }, [_c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m'\n      }\n    },\n    model: {\n      value: (_vm.constructionDate),\n      callback: function($$v) {\n        _vm.constructionDate = $$v\n      },\n      expression: \"constructionDate\"\n    }\n  }), _vm._v(\" \"), _c('button', {\n    staticClass: \"search-btn button\",\n    on: {\n      \"click\": _vm.getConstructionDashboardData\n    }\n  }, [_vm._v(\"조회\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"진행중인 공사 목록\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-info\"\n  }, [_c('p', [_vm._v(\"총 공사 건수: \" + _vm._s(_vm.constructionData.length) + \" 건\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-info\"\n  }, [_c('p', [_vm._v(\"총 매출: \" + _vm._s(_vm.addCommas(_vm.constructionSales)) + \" 만원\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"construction-wrapper is-flex\"\n  }, _vm._l((_vm.constructionData), function(construction) {\n    return _c('div', {\n      staticClass: \"construction-item\"\n    }, [_c('h3', {\n      staticClass: \"subtitle\"\n    }, [_vm._v(_vm._s(construction.pc_name))]), _vm._v(\" \"), _c('div', {\n      staticClass: \"percentage-wrapper\"\n    }, [_c('span', {}, [_vm._v(\"진행율\")]), _vm._v(\" \"), _c('div', {\n      staticClass: \"doughnut\"\n    }, [_c('div', {\n      staticClass: \"progress-container is-flex\"\n    }, [_c('progress', {\n      staticClass: \"progress\",\n      attrs: {\n        \"max\": \"100\"\n      },\n      domProps: {\n        \"value\": construction.completedPercentage\n      }\n    })])])]), _vm._v(\" \"), (Object.keys(construction.checkList).length > 0) ? _c('div', {\n      staticClass: \"checklist\"\n    }, [_c('table', {\n      staticClass: \"table is-striped\"\n    }, [_vm._m(0, true), _vm._v(\" \"), _vm._l((construction.checkList), function(checkListByDate, index) {\n      return _c('tbody', [_c('tr', {\n        staticClass: \"date-header\"\n      }, [_c('th', {\n        attrs: {\n          \"colspan\": \"4\"\n        }\n      }, [_vm._v(_vm._s(index))])]), _vm._v(\" \"), _c('tr'), _vm._l((checkListByDate), function(checkListItem) {\n        return _c('tr', [_c('td', [_c('span', [_vm._v(_vm._s(checkListItem.ct_name))])]), _vm._v(\" \"), _c('td', [_c('input', {\n          directives: [{\n            name: \"model\",\n            rawName: \"v-model\",\n            value: (checkListItem.cl_resource),\n            expression: \"checkListItem.cl_resource\"\n          }],\n          staticClass: \"checkbox\",\n          attrs: {\n            \"type\": \"checkbox\"\n          },\n          domProps: {\n            \"checked\": Array.isArray(checkListItem.cl_resource) ? _vm._i(checkListItem.cl_resource, null) > -1 : (checkListItem.cl_resource)\n          },\n          on: {\n            \"change\": [function($event) {\n              var $$a = checkListItem.cl_resource,\n                $$el = $event.target,\n                $$c = $$el.checked ? (true) : (false);\n              if (Array.isArray($$a)) {\n                var $$v = null,\n                  $$i = _vm._i($$a, $$v);\n                if ($$el.checked) {\n                  $$i < 0 && (_vm.$set(checkListItem, \"cl_resource\", $$a.concat([$$v])))\n                } else {\n                  $$i > -1 && (_vm.$set(checkListItem, \"cl_resource\", $$a.slice(0, $$i).concat($$a.slice($$i + 1))))\n                }\n              } else {\n                _vm.$set(checkListItem, \"cl_resource\", $$c)\n              }\n            }, function($event) {\n              _vm.updateCheckListStatus(construction.pc_pk, checkListItem)\n            }]\n          }\n        })]), _vm._v(\" \"), _c('td', [_c('input', {\n          directives: [{\n            name: \"model\",\n            rawName: \"v-model\",\n            value: (checkListItem.cl_constructor),\n            expression: \"checkListItem.cl_constructor\"\n          }],\n          staticClass: \"checkbox\",\n          attrs: {\n            \"type\": \"checkbox\"\n          },\n          domProps: {\n            \"checked\": Array.isArray(checkListItem.cl_constructor) ? _vm._i(checkListItem.cl_constructor, null) > -1 : (checkListItem.cl_constructor)\n          },\n          on: {\n            \"change\": [function($event) {\n              var $$a = checkListItem.cl_constructor,\n                $$el = $event.target,\n                $$c = $$el.checked ? (true) : (false);\n              if (Array.isArray($$a)) {\n                var $$v = null,\n                  $$i = _vm._i($$a, $$v);\n                if ($$el.checked) {\n                  $$i < 0 && (_vm.$set(checkListItem, \"cl_constructor\", $$a.concat([$$v])))\n                } else {\n                  $$i > -1 && (_vm.$set(checkListItem, \"cl_constructor\", $$a.slice(0, $$i).concat($$a.slice($$i + 1))))\n                }\n              } else {\n                _vm.$set(checkListItem, \"cl_constructor\", $$c)\n              }\n            }, function($event) {\n              _vm.updateCheckListStatus(construction.pc_pk, checkListItem)\n            }]\n          }\n        })]), _vm._v(\" \"), _c('td', [_c('span', [_vm._v(_vm._s(checkListItem.cl_memo))])])])\n      })], 2)\n    })], 2)]) : _c('div', {\n      staticClass: \"none-checklist-data\"\n    }, [_c('span', [_vm._v(\"체크리스트가 없습니다.\")])])])\n  }))])])])]) : _vm._e(), _vm._v(\" \"), (_vm.tabInfo.trafficData) ? _c('div', {\n    staticClass: \"traffic-data-view\"\n  }, [_c('div', {\n    staticClass: \"datepicker-view\"\n  }, [_c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m-d'\n      }\n    },\n    model: {\n      value: (_vm.dateRange.startDate),\n      callback: function($$v) {\n        _vm.$set(_vm.dateRange, \"startDate\", $$v)\n      },\n      expression: \"dateRange.startDate\"\n    }\n  }), _vm._v(\"\\n      ~\\n      \"), _c('datepicker', {\n    staticClass: \"datepicker\",\n    attrs: {\n      \"config\": {\n        dateFormat: 'Y-m-d'\n      }\n    },\n    model: {\n      value: (_vm.dateRange.endDate),\n      callback: function($$v) {\n        _vm.$set(_vm.dateRange, \"endDate\", $$v)\n      },\n      expression: \"dateRange.endDate\"\n    }\n  }), _vm._v(\" \"), _c('button', {\n    staticClass: \"search-btn button\",\n    on: {\n      \"click\": _vm.queryReports\n    }\n  }, [_vm._v(\"조회\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"일별 사용자\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.lineData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"이탈율\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.bounceRateData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-parent\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('p', {\n    staticClass: \"title\"\n  }, [_vm._v(\"세션 시간\")]), _vm._v(\" \"), _c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.avgSessionDurationData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"tile is-ancestor\"\n  }, [_c('div', {\n    staticClass: \"tile is-parent is-12\"\n  }, [_c('article', {\n    staticClass: \"tile is-child box\"\n  }, [_c('h4', {\n    staticClass: \"title\"\n  }, [_vm._v(\"일별 문의 건수\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"content\"\n  }, [_c('analytics-users-chart', {\n    attrs: {\n      \"chart-data\": _vm.completedCountData,\n      \"options\": {\n        maintainAspectRatio: false\n      }\n    }\n  })], 1)])])])]) : _vm._e()])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', [_c('th', [_vm._v(\"공사\")]), _vm._v(\" \"), _c('th', [_vm._v(\"자재\")]), _vm._v(\" \"), _c('th', [_vm._v(\"인력\")]), _vm._v(\" \"), _c('th', [_vm._v(\"메모\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-a9e6891e\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./client/views/dashboard/index.vue\n// module id = 583\n// module chunks = 0"],"sourceRoot":""}